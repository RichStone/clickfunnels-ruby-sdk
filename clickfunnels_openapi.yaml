openapi: 3.1.0
info:
  title: ClickFunnels API
  termsOfService: https://www.clickfunnels.com/terms-of-service
  contact:
    name: ClickFunnels API Team
    url: https://developers.myclickfunnels.com
  x-logo:
    url: https://statics.myclickfunnels.com/image/1126065/file/31edf05760fafe41a82f16a668ab251f.png
  description: |
    The ClickFunnels REST API that powers webhooks, native integrations, and Zapier lets you manage your ClickFunnels data, automate your workflows, and recreate ClickFunnels functionality in your own apps.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: '2.0.0'
tags:
  - name: Team
    description: Teams
  - name: User
    description: Users
  - name: Workspace
    description: Workspace
  - name: Contact
    description: Contact
  - name: Contacts::AppliedTag
    description: |
      > Contact Applied Tags

      The Contact Applied Tags APIs allow you to list, apply and remove tags associated with a specific contact.

      To utilize this, first obtain the Tag IDs for all the Contact Tags for your workspace via the Contacts::Tags API.

      You can manage tags for any contact by creating or deleting the corresponding Applied Tags as needed.

      Note:
      There is no 'update' method for this API since you should just remove and add a new tag to change them.
  - name: Contacts::Tag
    description: |
      # Contact Tags

      Contact Tags are unique to each workspace, allowing for customized organization of your Contacts. Once created, these tags can be applied to any contact within the same workspace using the Contacts::AppliedTag endpoint.

      This API allows you to manage the Contact Tags for your workspace.
  - name: Course
    description: |
      > Represents the volume of educational material

      The course is the top-level layer of a concept for educational material. It is the _thing_  to be sold
      to a customer. Once a customer purchases or otherwise opts into a course, they will be enrolled into
      the underlying sections and lessons.

      You can get a broader understanding of the structure of a course by studying the `Courses::Section`
      and `Courses::Lesson` endpoints.
  - name: Courses::Enrollment
    description: |
      > Controls access to course sections and lessons

      By purchasing or otherwise opting into a course, an enrollment record is created. Enrollments
      dictate which sections, sub-sections, and lessons the student can access.

      Progress for an enrollment can be tracked for a Course, Section, and Lesson.
  - name: Courses::Section
    description: |
      > Represents the modules within a Course

      The section is the organization layer of a course where the content is accessed and managed for
      a customer. Sections can have sub-sections and will have one or more lessons. Access to sections
      can be managed by the `Courses::Enrollment` and also by the completion of previous sections and lessons.
  - name: Courses::Lesson
    description: |
      > Represents the material within a Course

      The lesson is the part of the course which teaches the material described within the course. Completing
      lessons can unlock access to other lessons or sections within a course. Completing lessons increases the
      course progress percent.
  - name: Courses::LessonCompletion
    description: |
      > Marks a lesson as completed for enrollment.

      To mark a lesson as completed by an enrollment, create an `Courses::LessonCompletion` record.
      To undo this, the `Courses::LessonCompletion` record must be deleted.
  - name: Form
    description: |
      > Manage Forms, FieldSets, Fields, Submissions and Answers

      The Forms API and it's related resources allow you to manage in detail all parts of your ClickFunnels forms.
  - name: Forms::FieldSet
    description: Form FieldSets
  - name: Forms::Field
    description: Form Fields
  - name: Forms::Fields::Option
    description: Form Field Options
  - name: Forms::Submission
    description: |
      > Allows to submit and analyze forms programmatically

      The `Forms::Submission` resource together with the `Form` and other `Forms::` allows you to create
      form submission programmatically outside of ClickFunnels.

      To get the raw submission data, refer to the `FormSubmission` resource.
  - name: Forms::Submissions::Answer
    description: Form Submission Answers
  - name: FormSubmission
    description: |
      > Presents submitted forms including the detailed data breakdown

      The `FormSubmission` resource is a log of all the form submissions that happened for a given workspace. You can retrieve the form submissions including their recorded standard and custom fields data.

      Please refer to the `Form` and `Forms::Submission` resources if you would like to submit forms programmatically.
  - name: Funnel
    description: |
      > The Funnel resource contains relevant metadata about funnels.
  - name: Funnels::Tag
    description: |
      > Funnels::Tag are used to distinguish, segment and run additional automations on your funnels and the users who go through them.
  - name: Image
    description: |
      > Images can be used in a variety of use cases.

      An image can be created or updated from a URL by defining the `upload_source_url` parameter. Once created the ID
      of an image or of multiple images can be set on a `Product` by defining the `image_ids` parameter as an
      array of image IDs.

      > Limitations and Constraints

      Images have a file size limit of 10MB and a dimension size limit of 10,000 x 10,000 pixels. Image file types currently supported include:

      ```shell
      # IMAGE TYPES
      jpeg, png, webp, x-icon, vnd.microsoft.icon
      # TEXT TYPES
      svg+xml, gif
      ```

      Once uploaded, an image will return the following files and sizes

      | File Description | Width | Height                                                            |
      |--------------------------------------------------|--------------------|------------------------------------------------------------------------|
      | Thumbnail | 80 | 52 |
      | Small | 300 | 300 |
      | Medium | 600 | 600 |
      | Large | 800 | 800 |
      | X-Large | 2000 | 2000 |
      |--------------------------------------------------|--------------------|------------------------------------------------------------------------|
  - name: Fulfillment
    description: |
      > Fulfillments allow fulfilling orders and managing shipments.

      Please refer to [our Fulfillments guide](https://developers.myclickfunnels.com/docs/fulfillments) for more information.
  - name: Fulfillments::Location
    description: Fulfillment Locations
  - name: Order
    description: |
      > Orders describe a purchase made by a contact.

      Please refer to the [Orders Overview Guide](https://developers.myclickfunnels.com/docs/orders) for more information.
  - name: Orders::AppliedTag
    description: |
      > Order Applied Tags

      The Order Applied Tags APIs allow you to list, apply and remove tags associated with a specific order.

      To utilize this, first obtain the Tag IDs for all the Order Tags for your workspace via the Orders::Tag API.

      You can manage tags for any order by creating or deleting the corresponding Applied Tags as needed.

      Note:
      There is no 'update' method for this resource since you should just remove or add a new tag to change them.
  - name: Orders::Invoice
    description: |
      > Invoices track payments for orders.

      Order Invoices are the invoices issued against Orders. For more information please consult our [Orders Overview guide](https://developers.myclickfunnels.com/docs/orders).

      Orders can be fulfilled by fulfilling invoice line items. Please refer to [our Fulfillments guide](https://developers.myclickfunnels.com/docs/fulfillments) to see how this can be done.
  - name: Orders::Invoices::Restock
    description: |
      > Restocks make it possible to restock in case a priorly issued fulfillment is not going to be fulfilled.

      If a customer pays for an invoice that will not get fulfilled (e.g. the invoice may have been refunded), a restock needs to be created so the committed inventory quantity can be returned to available inventory.

      A restock can also be cancelled, in which case the inventory quantity will be adjusted back.
  - name: Orders::Transaction
    description: Order Transactions
  - name: Orders::Tag
    description: |
      > Order Tags

      Order Tags are unique to each workspace, allowing for customized organization of your orders. Once created, these tags can be applied to any order within the same workspace.

      This API allows you to manage the Order Tags for your workspace.
  - name: Page
    description: |
      > Page offers extra information about ClickFunnels pages, like those that are part of funnels.

      It's the main element that the user modifies when editing a Page in the ClickFunnels editor.

      You can also learn how to source Page name and public ID from your ClickFunnels UI
      [here](https://developers.myclickfunnels.com/docs/filtering-by-page).
  - name: Product
    description: |
      > Products can be used to create and edit sellable goods.

      Products have a few boolean attributes including `archived`, `visible_in_store`, and `visible_in_customer_center`.

      Products that are not `archived` are in a `live` state if they are `visible_in_store` or `visible_in_customer_center` or are associated with any live funnels.

      `Live` products cannot be archived.
      Products in an `archived` state can always be unarchived.

      Each product can have one or more variants expressed as a `Products::Variant`.
      All products have a "default variant" that acts as a parent to any further variants
      the product may have.

      When you create a `Product` we will implicitly create a default variant of type `digital`.
      If the product you want to create is actually `physical`, be sure to update the type of it's
      default variant in a subsequent request.

      The Product Object will always contain a `default_variant_id` attribute that lets you identify
      the default variant.

      If the Product will have variants you should set the `variant_properties` attribute to an array of the properties a variant can have (e.g. "Size", "Color", etc.)
  - name: Products::Collection
    description: Product Collections
  - name: Products::Price
    description: Product Prices
  - name: Products::Variant
    description: |
      > Product variants

      If there are multiple variants of a product (like when a T-shirt can come in many sizes or colors),
      then these should be created as `Products::Variant` records related to the `Product` record.

      When creating a variant it is mandatory to set the `properties_values` so that all the Product's `variant_properties` have a value.

      All products have a "default variant". Attributes like the below, if left as `null` on a variant (that is not the default)
      will inherit the value from the default variant:

      - `product_type`
      - `sku`
      - `taxable`
      - `tax_category_id`
      - `description`
      - `weight`
      - `weight_unit`
      - `height`
      - `width`
      - `length`
      - `image_id`
  - name: Products::Tag
    description: Product Tags
  - name: Sales::Pipeline
    description: |
      >  Sales Pipelines

      Pipelines allow you to organize, track and advance Opportunies between different Stages. A Pipeline consists of multiple Stages.

      When creating a Pipeline, you must specify one or more stages by passing them in the `stages_attributes` parameter. The Stages
      will be created in the order in which they are given in the `stages_attributes` parameter.
  - name: Sales::Pipelines::Stage
    description: |
      >  Sales Pipeline Stages

      Stages belong to a Pipeline, and allow you to track and advance Opportunities.

      You can re-order Stages in a Pipeline by updating the `sort_order` attribute of a Stage, giving the desired position of the Stage.
      Sort order values are zero-indexed, with 0 being the first stage of a pipeline.

      Currently, it's not possible to delete a stage if it's the last one left in the Pipeline.
  - name: Sales::Opportunity
    description: |
      >  Sales Opportunities

      Sales Opportunities are initially created in a specific stage of a Pipeline and can be moved between different stages within that Pipeline.

      Each Sales Opportunity requires a name and a reference to a Primary Contact. If the Opportunity is associated with a new Contact, you must first create the Contact using the Contacts API.

      The `value` field, which is optional, represents the potential value of the Opportunity in the default currency of the Workspace.

      You can assign an Opportunity to a Team Member using the `assignee_id` field. To reassign the Opportunity to a different team member, simply update this value. To remove the assignee, set the `assignee_id` to `null`. The `assignee_id` corresponds to the `membership.id` in the relevant Team, which can be retrieved using the Teams API.

      When an Opportunity is moved to a stage with a `close_probability` value of 0 or 100, the `closed_at` timestamp is automatically set. If the Opportunity is later moved to a different stage, the `closed_at` timestamp remains unchanged. You can also manually set the `closed_at` timestamp using the API.
  - name: Sales::Opportunities::Note
    description: Sales Opportunity Notes
  - name: Shipping::LocationGroup
    description: Shipping LocationGroup
  - name: Shipping::Package
    description: Shipping Package
  - name: Shipping::Profile
    description: Shipping Profile
  - name: Shipping::Rate
    description: Shipping Rate
  - name: Shipping::Zone
    description: Shipping Zone
  - name: Shipping::Rates::Name
    description: Shipping Rate Names
  - name: Store
    description: |
      > Stores
  - name: Style
    description: |
      > Styles determine some CSS specifics for a theme.
  - name: Theme
    description: |
      > Themes determine the look of the user-facing ClickFunnels pages.

      A theme bundles the relevant site pages, like home page, storefront, course pages, etc.
  - name: Webhooks::Outgoing::Endpoint
    description: Webhook Outgoing Endpoints
  - name: Webhooks::Outgoing::Event
    description: Webhooks Outgoing Events
externalDocs:
  description: More in-depth guides and further resources
  url: https://developers.myclickfunnels.com
servers:
  - url: https://{subdomain}.myclickfunnels.com/api/v2
    description: ClickFunnels API
    variables:
      subdomain:
        default: myworkspace
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    TeamAttributes:
      type: object
      title: Teams
      description: Teams
      required:
      - id
      properties:
        id:
          type: integer
          description: Team ID
        public_id:
          type:
          - string
          - 'null'
          description: Team public ID
        name:
          type: string
          description: The name of your Team
        time_zone:
          type:
          - string
          - 'null'
          description: |
            The human-readable time zone set manually by a ClickFunnels user or dynamically by the app.
            Read more about time zones and how to map them back to the TZ standard in [our Time Zones guide.](https://dash.readme.com/project/cf2/v2/docs/timezones).
        locale:
          type: string
          description: The main language used to create a new website.
          enum:
          - en
          - ja
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 42000
        public_id: TuxdWA
        name: Example Team
        time_zone: Pacific Time (US & Canada)
        locale: en
        created_at: '2025-05-21T12:18:51.571Z'
        updated_at: '2025-05-21T12:18:51.571Z'
    TeamParametersUpdate:
      type: object
      title: Teams
      description: Teams
      required: []
      properties:
        name:
          type: string
          description: The name of your Team
        time_zone:
          type:
          - string
          - 'null'
          description: |
            The human-readable time zone set manually by a ClickFunnels user or dynamically by the app.
            Read more about time zones and how to map them back to the TZ standard in [our Time Zones guide.](https://dash.readme.com/project/cf2/v2/docs/timezones).
        locale:
          type: string
          description: The main language used to create a new website.
          enum:
          - en
          - ja
          default: en
      example:
        team:
          name: Example Team
          time_zone: Pacific Time (US & Canada)
          locale: en

    UserAttributes:
      type: object
      title: Profile
      description: Profile
      required:
      - id
      - email
      - first_name
      - last_name
      properties:
        id:
          type: integer
          description: User ID
        public_id:
          type:
          - string
          - 'null'
          description: User public ID
        email:
          type: string
          description: Email Address
        first_name:
          type: string
          description: First Name
        last_name:
          type: string
          description: Last Name
        time_zone:
          type:
          - string
          - 'null'
          description: Your Time Zone
        locale:
          type:
          - string
          - 'null'
          description: Language
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Signed up
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 1
        public_id: EVFuKd
        email: earnest_davis@schumm-grimes.io
        first_name: Merlin
        last_name: Cruickshank
        time_zone: Pacific Time (US & Canada)
        locale: en
        created_at: '2025-06-21T12:18:51.716Z'
        updated_at: '2025-06-21T12:18:51.716Z'
    UserParametersUpdate:
      type: object
      title: Profile
      description: Profile
      required:
      - email
      - first_name
      - last_name
      properties:
        email:
          type: string
          description: Email Address
        first_name:
          type: string
          description: First Name
        last_name:
          type: string
          description: Last Name
        time_zone:
          type:
          - string
          - 'null'
          description: Your Time Zone
        locale:
          type:
          - string
          - 'null'
          description: Language
      example:
        user:
          email: earnest_davis@schumm-grimes.io
          first_name: Merlin
          last_name: Cruickshank
          time_zone: Pacific Time (US & Canada)
          locale: en

    WorkspaceAttributes:
      type: object
      title: Workspaces
      description: Workspaces
      required:
      - id
      - team_id
      - name
      - subdomain
      properties:
        id:
          type: integer
          description: Workspace ID
        public_id:
          type:
          - string
          - 'null'
          description: Workspace public ID
        team_id:
          type: integer
          description: Team ID
        name:
          type: string
          description: Workspace Name
        subdomain:
          type: string
          description: Subdomain
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 42000
        public_id: dSoHsm
        team_id: 42000
        name: Example Workspace
        subdomain: example
        created_at: '2025-05-21T12:18:51.730Z'
        updated_at: '2025-05-21T12:18:51.730Z'
    WorkspaceParameters:
      type: object
      title: Workspaces
      description: Workspaces
      required: []
      properties:
        name:
          type: string
          description: Workspace Name
        subdomain:
          type: string
          description: The subdomain can currently only be changed in rare cases right after
            the creation of your new workspace.
      example:
        workspace:
          name: My Workspace
          subdomain: mysubdomain
    WorkspaceParametersUpdate:
      type: object
      title: Workspaces
      description: Workspaces
      required: []
      properties:
        name:
          type: string
          description: Workspace Name
        subdomain:
          type: string
          description: The subdomain can currently only be changed in rare cases right after
            the creation of your new workspace.
      example:
        workspace:
          name: My Workspace
          subdomain: mysubdomain


    ContactAttributes:
      type: object
      title: Contacts
      description: Contacts
      required:
      - id
      - workspace_id
      - uuid
      properties:
        id:
          type: integer
          description: Contact ID
        public_id:
          type:
          - string
          - 'null'
          description: Contact public ID
        workspace_id:
          type: integer
          description: Workspace ID
        anonymous:
          type:
          - string
          - 'null'
          description: Anonymous
        email_address:
          type:
          - string
          - 'null'
          description: Email address
        first_name:
          type:
          - string
          - 'null'
          description: First name
        last_name:
          type:
          - string
          - 'null'
          description: Last name
        phone_number:
          type:
          - string
          - 'null'
          description: Phone number
        time_zone:
          type:
          - string
          - 'null'
          description: |
            The human-readable time zone, usually set dynamically by the app for the contact, for example, during opt-in.
            Read more about time zones and how to map them back to the TZ standard in [our Time Zones guide.](https://dash.readme.com/project/cf2/v2/docs/timezones).
        uuid:
          type: string
          description: UUID
        unsubscribed_at:
          type:
          - string
          - 'null'
          description: Unsubscribed
        last_notification_email_sent_at:
          type:
          - string
          - 'null'
          description: Last notification email sent
        fb_url:
          type:
          - string
          - 'null'
          description: Facebook URL
        twitter_url:
          type:
          - string
          - 'null'
          description: Twitter URL
        instagram_url:
          type:
          - string
          - 'null'
          description: Instagram URL
        linkedin_url:
          type:
          - string
          - 'null'
          description: LinkedIn URL
        website_url:
          type:
          - string
          - 'null'
          description: Website URL
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Date added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Last updated
        tags:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Contact Tags
            description: Contact Tags
            required:
            - id
            - name
            - color
            properties:
              id:
                type: integer
                description: Tag ID
              public_id:
                type:
                - string
                - 'null'
                description: Tag public ID
              name:
                type: string
                description: Name
              color:
                type: string
                description: Color
              applied_at:
                type:
                - string
                - 'null'
                description: The datetime the tag was applied by creating a Contacts::AppliedTag
                  that maps the tag to the contact.
          description: Contact Tags
        custom_attributes:
          type: object
          additionalProperties:
            type: string
          description: A dynamic key-value pair object where both the key and value are
            strings. Custom attributes are usually added to the contact when they submit
            forms that contain custom contact attributes. But you can also add them via
            the API using the modifying endpoints like Create/Update/Upsert Contact.
        visits:
          type:
          - object
          - 'null'
          allOf:
          - "$ref": "#/components/schemas/ResourceAttributes"
          description: 'Translation missing: en.contacts.fields.visits.api_description'
        avatar_image:
          type: object
          description: Avatar Image
      example:
        id: 1
        public_id: rPzimH
        workspace_id: 42000
        anonymous:
        email_address: test-72f06979b988bd09de34@example.com
        first_name: Cyrus
        last_name: Stanton
        phone_number: 527.979.7886
        time_zone: Pacific Time (US & Canada)
        uuid: 702a131f-6864-49b6-ba1c-5d32cb51be1b
        unsubscribed_at:
        last_notification_email_sent_at:
        fb_url: https://www.facebook.com/example
        twitter_url: https://twitter.com/example
        instagram_url:
        linkedin_url: https://www.linkedin.com/in/example
        website_url: https://example.com
        created_at: '2025-05-21T12:18:51.772Z'
        updated_at: '2025-05-21T12:18:51.772Z'
        tags:
        - id: 1
          public_id: KxhtrW
          name: Example Tag
          color: "#15cf00"
          applied_at:
        custom_attributes:
          favorite_food: Salad
          hobby: Coding
        visits:
          first_visit:
            id: 142
            public_id: WYmgGj
            contact_id: 1
            uuid: '123'
            utm_source:
            utm_medium:
            utm_campaign:
            utm_term:
            utm_content:
            ip:
            user_agent:
            referrer:
            referring_domain:
            landing_page:
            browser:
            os:
            device_type:
            started_at:
            created_at: '2025-06-17T13:44:36.277Z'
            updated_at: '2025-06-17T13:44:36.277Z'
          last_visit:
          last_visit_with_utm:
        avatar_image:
    ContactParameters:
      type: object
      title: Contacts
      description: Contacts
      required: []
      properties:
        email_address:
          type:
          - string
          - 'null'
          description: Email address
        first_name:
          type:
          - string
          - 'null'
          description: First name
        last_name:
          type:
          - string
          - 'null'
          description: Last name
        phone_number:
          type:
          - string
          - 'null'
          description: Phone number
        time_zone:
          type:
          - string
          - 'null'
          description: |
            The human-readable time zone, usually set dynamically by the app for the contact, for example, during opt-in.
            Read more about time zones and how to map them back to the TZ standard in [our Time Zones guide.](https://dash.readme.com/project/cf2/v2/docs/timezones).
        fb_url:
          type:
          - string
          - 'null'
          description: Facebook URL
        twitter_url:
          type:
          - string
          - 'null'
          description: Twitter URL
        instagram_url:
          type:
          - string
          - 'null'
          description: Instagram URL
        linkedin_url:
          type:
          - string
          - 'null'
          description: LinkedIn URL
        website_url:
          type:
          - string
          - 'null'
          description: Website URL
        tag_ids:
          type: array
          items:
            type: integer
          description: Contact Tag IDs. Any valid array, empty or with valid tags will overwrite
            existing values. To avoid losing existing tags first use the Fetch Contact endpoint,
            then be sure to include the existing tags in your payload along with any new
            addition(s).
        custom_attributes:
          type: object
          additionalProperties:
            type: string
          description: "Custom attributes are usually added in ClickFunnels to a contact
            when they submit forms that contain custom contact attributes. Here you can
            directly create them during contact modification.\n\nCustom attributes are provided
            as key-value pairs:\nA key that does not exist, will create a new custom contact
            attribute.\nA key that already exists, will update the value of an existing
            custom contact attribute.\n\nEmpty or null values, will set the custom attribute
            values to empty strings. A key that has special characters or spaces will be
            automatically converted to `snake_case` (For example, 'Favorite Food! \U0001F951'
            will be converted to 'favorite_food').\n\nEmpty keys will trigger a bad request
            response. Also, non-object inputs for custom_attributes (e.g. an array or string),
            it will be ignored.\nKeys that are default properties on the Contact resource
            or variations of it will result in an error. E.g., 'first_name', 'First Name',
            \ etc. are not valid inputs.\n"
      example:
        contact:
          email_address: test-72f06979b988bd09de34@example.com
          first_name: Cyrus
          last_name: Stanton
          phone_number: 527.979.7886
          time_zone: Pacific Time (US & Canada)
          fb_url: https://www.facebook.com/example
          twitter_url: https://twitter.com/example
          instagram_url:
          linkedin_url: https://www.linkedin.com/in/example
          website_url: https://example.com
    ContactParametersUpdate:
      type: object
      title: Contacts
      description: Contacts
      required: []
      properties:
        email_address:
          type:
          - string
          - 'null'
          description: Email address
        first_name:
          type:
          - string
          - 'null'
          description: First name
        last_name:
          type:
          - string
          - 'null'
          description: Last name
        phone_number:
          type:
          - string
          - 'null'
          description: Phone number
        time_zone:
          type:
          - string
          - 'null'
          description: |
            The human-readable time zone, usually set dynamically by the app for the contact, for example, during opt-in.
            Read more about time zones and how to map them back to the TZ standard in [our Time Zones guide.](https://dash.readme.com/project/cf2/v2/docs/timezones).
        fb_url:
          type:
          - string
          - 'null'
          description: Facebook URL
        twitter_url:
          type:
          - string
          - 'null'
          description: Twitter URL
        instagram_url:
          type:
          - string
          - 'null'
          description: Instagram URL
        linkedin_url:
          type:
          - string
          - 'null'
          description: LinkedIn URL
        website_url:
          type:
          - string
          - 'null'
          description: Website URL
        tag_ids:
          type: array
          items:
            type: integer
          description: Contact Tag IDs. Any valid array, empty or with valid tags will overwrite
            existing values. To avoid losing existing tags first use the Fetch Contact endpoint,
            then be sure to include the existing tags in your payload along with any new
            addition(s).
        custom_attributes:
          type: object
          additionalProperties:
            type: string
          description: "Custom attributes are usually added in ClickFunnels to a contact
            when they submit forms that contain custom contact attributes. Here you can
            directly create them during contact modification.\n\nCustom attributes are provided
            as key-value pairs:\nA key that does not exist, will create a new custom contact
            attribute.\nA key that already exists, will update the value of an existing
            custom contact attribute.\n\nEmpty or null values, will set the custom attribute
            values to empty strings. A key that has special characters or spaces will be
            automatically converted to `snake_case` (For example, 'Favorite Food! \U0001F951'
            will be converted to 'favorite_food').\n\nEmpty keys will trigger a bad request
            response. Also, non-object inputs for custom_attributes (e.g. an array or string),
            it will be ignored.\nKeys that are default properties on the Contact resource
            or variations of it will result in an error. E.g., 'first_name', 'First Name',
            \ etc. are not valid inputs.\n"
      example:
        contact:
          email_address: test-72f06979b988bd09de34@example.com
          first_name: Cyrus
          last_name: Stanton
          phone_number: 527.979.7886
          time_zone: Pacific Time (US & Canada)
          fb_url: https://www.facebook.com/example
          twitter_url: https://twitter.com/example
          instagram_url:
          linkedin_url: https://www.linkedin.com/in/example
          website_url: https://example.com

    ContactsAppliedTagAttributes:
      type: object
      title: Contacts Applied Tags
      description: Contacts Applied Tags
      required:
      - id
      - contact_id
      - tag_id
      - tag
      properties:
        id:
          type: integer
          description: Applied Tag ID
        public_id:
          type:
          - string
          - 'null'
          description: Applied Tag public ID
        contact_id:
          type: integer
          description: Contact ID
        tag_id:
          type: integer
          description: Tag ID
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Date added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Last updated
        tag:
          type: object
          title: Contact Tags
          description: Contact Tags
          required:
          - name
          - color
          properties:
            public_id:
              type:
              - string
              - 'null'
              description: Tag public ID
            name:
              type: string
              description: Name
            color:
              type: string
              description: Color
      example:
        id: 1
        public_id: uCVepw
        contact_id: 1
        tag_id: 2
        created_at: '2025-06-14T12:18:51.853Z'
        updated_at: '2025-06-14T12:18:51.853Z'
        tag:
          public_id: OjMAjq
          name: Example Tag
          color: "#cf58b7"
    ContactsAppliedTagParameters:
      type: object
      title: Contacts Applied Tags
      description: Contacts Applied Tags
      required:
      - tag_id
      properties:
        tag_id:
          type: integer
          description: Tag ID
      example:
        contacts_applied_tag:
          tag_id: 2
    ContactsAppliedTagParametersUpdate:
      type: object
      title: Contacts Applied Tags
      description: Contacts Applied Tags
      required:
      - tag_id
      properties:
        tag_id:
          type: integer
          description: Tag ID
      example:
        contacts_applied_tag:
          tag_id: 2

    ContactsTagAttributes:
      type: object
      title: Contact Tags
      description: Contact Tags
      required:
      - id
      - workspace_id
      - name
      - color
      properties:
        id:
          type: integer
          description: Tag ID
        public_id:
          type:
          - string
          - 'null'
          description: Tag public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Name
        color:
          type: string
          description: Color
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at datetime
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at datetime
      example:
        id: 3
        public_id: ayjvOT
        workspace_id: 42000
        name: Example Tag
        color: "#dd057a"
        created_at: '2025-06-21T12:18:51.864Z'
        updated_at: '2025-06-21T12:18:51.864Z'
    ContactsTagParameters:
      type: object
      title: Contact Tags
      description: Contact Tags
      required:
      - name
      properties:
        name:
          type: string
          description: Name
        color:
          type: string
          description: Tag Color
      example:
        contacts_tag:
          name: Example Tag
          color: "#FF5733"
    ContactsTagParametersUpdate:
      type: object
      title: Contact Tags
      description: Contact Tags
      required: []
      properties:
        name:
          type: string
          description: Tag Name
        color:
          type: string
          description: Tag Color
      example:
        contacts_tag:
          name: renamed-tag
          color: "#FF5733"


    CourseAttributes:
      type: object
      title: Courses
      description: Courses
      required:
      - id
      - title
      - description
      properties:
        id:
          type: integer
          description: Course ID
        public_id:
          type:
          - string
          - 'null'
          description: Course public ID
        title:
          type: string
          description: Title
        published_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Available at
        root_section_id:
          type:
          - string
          - 'null'
          description: Root section
        description:
          type: string
          description: Description
        current_path:
          type:
          - string
          - 'null'
          description: Course Path URL
        sharing_fingerprint:
          type:
          - string
          - 'null'
          description: Sharing Fingerprint
        show_in_community:
          type:
          - boolean
          - 'null'
          description: Show In Customer Center?
        show_to_non_members:
          type:
          - boolean
          - 'null'
          description: Show To Non Members
        upgrade_url:
          type:
          - string
          - 'null'
          description: Upgrade URL
        redirect_to_full_course:
          type:
          - boolean
          - 'null'
          description: Redirect To Full Course
        unauthorized_redirect_url:
          type:
          - string
          - 'null'
          description: Unauthorized Redirect
        comments_enabled:
          type:
          - boolean
          - 'null'
          description: Enable Lesson Comments?
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
        image_url:
          type:
          - string
          - 'null'
          description: The URL of the image that is shown on the storefront of the main
            course page
      example:
        id: 1
        public_id: wouPdA
        title: Example Course
        published_at: '2025-06-14T12:18:51.000Z'
        root_section_id:
        description: Dolorem ratione velit. Esse et ut. Voluptas aut ea.
        current_path:
        sharing_fingerprint:
        show_in_community: false
        show_to_non_members: false
        upgrade_url:
        redirect_to_full_course: true
        unauthorized_redirect_url:
        comments_enabled: false
        created_at: '2025-06-14T12:18:51.936Z'
        updated_at: '2025-06-14T12:18:51.936Z'
        image_url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
    CourseParameters:
      type: object
      title: Courses
      description: Courses
      required:
      - title
      - description
      properties:
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
        show_in_community:
          type:
          - boolean
          - 'null'
          description: Show In Customer Center?
        redirect_to_full_course:
          type:
          - boolean
          - 'null'
          description: Redirect To Full Course
      example:
        course:
          title: Example Course
          description: Dolorem ratione velit. Esse et ut. Voluptas aut ea.
          show_in_community: false
          redirect_to_full_course: true
    CourseParametersUpdate:
      type: object
      title: Courses
      description: Courses
      required:
      - title
      - description
      properties:
        title:
          type: string
          description: Title
        description:
          type: string
          description: Description
        show_in_community:
          type:
          - boolean
          - 'null'
          description: Show In Customer Center?
        redirect_to_full_course:
          type:
          - boolean
          - 'null'
          description: Redirect To Full Course
      example:
        course:
          title: Example Course
          description: Dolorem ratione velit. Esse et ut. Voluptas aut ea.
          show_in_community: false
          redirect_to_full_course: true

    CoursesEnrollmentAttributes:
      type: object
      title: Enrollments
      description: Enrollments
      required:
      - id
      - contact_id
      - course_id
      - origination_source_id
      properties:
        id:
          type: integer
          description: Enrollment ID
        public_id:
          type:
          - string
          - 'null'
          description: Enrollment public ID
        contact_id:
          type: integer
          description: Contact ID
        course_id:
          type: integer
          description: Course
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
        suspended:
          type:
          - boolean
          - 'null'
          description: Suspended
        suspension_reason:
          type:
          - string
          - 'null'
          description: Suspension Reason
        current_path:
          type:
          - string
          - 'null'
          description: Current Path
        origination_source_type:
          type:
          - string
          - 'null'
          description: Origination Source Type
        origination_source_id:
          type: integer
          description: Origination Source ID
      example:
        id: 1
        public_id: dJxmEW
        contact_id: 2
        course_id: 2
        created_at: '2025-04-21T12:18:52.082Z'
        updated_at: '2025-05-21T12:18:52.082Z'
        suspended: false
        suspension_reason: Call in to reapply after robot incident
        current_path: "/enrollments/22b3d6c6a4511b013f7c3d18b5ab942b66805ed68805c3940aa4af48ac20bc84ce"
        origination_source_type: Membership
        origination_source_id: 1
    CoursesEnrollmentParameters:
      type: object
      title: Enrollments
      description: Enrollments
      required:
      - contact_id
      properties:
        contact_id:
          type: integer
          description: Contact ID
        suspended:
          type:
          - boolean
          - 'null'
          description: Suspended
        suspension_reason:
          type:
          - string
          - 'null'
          description: Suspension Reason
      example:
        courses_enrollment:
          contact_id: 2
          suspended: false
          suspension_reason: Call in to reapply after robot incident
    CoursesEnrollmentParametersUpdate:
      type: object
      title: Enrollments
      description: Enrollments
      required: []
      properties:
        suspended:
          type:
          - boolean
          - 'null'
          description: Suspended
        suspension_reason:
          type:
          - string
          - 'null'
          description: Suspension Reason
      example:
        courses_enrollment:
          suspended: false
          suspension_reason: Call in to reapply after robot incident

    CoursesSectionAttributes:
      type: object
      title: Modules
      description: Modules
      required:
      - id
      - course_id
      - title
      - blocker_lesson_id
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Public ID
        course_id:
          type: integer
          description: Course ID
        title:
          type: string
          description: Title
        published_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Published at
        description:
          type:
          - string
          - 'null'
          description: Description
        days_till_drip_access:
          type:
          - integer
          - 'null'
          description: Days until drip access
        blocker_section_id:
          type:
          - string
          - 'null'
          description: Blocker section
        blocker_lesson_id:
          type: string
          description: Blocker lesson
        current_path:
          type:
          - string
          - 'null'
          description: Current Path
        is_hidden_from_non_members:
          type:
          - boolean
          - 'null'
          description: Current Path
        upgrade_url:
          type:
          - string
          - 'null'
          description: Upgrade URL
        parent_id:
          type:
          - string
          - 'null'
          description: Parent ID is pointing to the parent section. If it's `nil` then it's
            the <b>root</b> section.
        sort_order:
          type:
          - integer
          - 'null'
          description: Sort priority column that may define a specific sort order in the
            UI
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
      example:
        id: 1
        public_id: iXePIT
        course_id: 3
        title: Module 1
        published_at: '2025-04-21T12:18:52.000Z'
        description: Example Course Section
        days_till_drip_access: 5
        blocker_section_id:
        blocker_lesson_id:
        current_path: "/section-example"
        is_hidden_from_non_members: true
        upgrade_url:
        parent_id:
        sort_order: 0
        created_at: '2025-04-21T12:18:52.166Z'
        updated_at: '2025-05-21T12:18:52.166Z'
    CoursesSectionParameters:
      type: object
      title: Modules
      description: Modules
      required:
      - title
      - blocker_lesson_id
      properties:
        title:
          type: string
          description: Title
        description:
          type:
          - string
          - 'null'
          description: Description
        days_till_drip_access:
          type:
          - integer
          - 'null'
          description: Days until drip access
        blocker_section_id:
          type:
          - string
          - 'null'
          description: Blocker section
        blocker_lesson_id:
          type: string
          description: Blocker lesson
        is_hidden_from_non_members:
          type:
          - boolean
          - 'null'
          description: Current Path
      example:
        courses_section:
          title: Module 1
          description: Example Course Section
          days_till_drip_access: 5
          blocker_section_id:
          blocker_lesson_id:
          is_hidden_from_non_members: true
    CoursesSectionParametersUpdate:
      type: object
      title: Modules
      description: Modules
      required: []
      properties:
        title:
          type: string
          description: Title
        description:
          type:
          - string
          - 'null'
          description: Description
        days_till_drip_access:
          type:
          - integer
          - 'null'
          description: Days until drip access
        blocker_section_id:
          type: integer
          description: Blocker section
          nullable: true
        blocker_lesson_id:
          type: integer
          description: Blocker lesson
          nullable: true
        is_hidden_from_non_members:
          type:
          - boolean
          - 'null'
          description: Current Path
      example:
        courses_section:
          title: Module 1
          description: Example Course Section
          days_till_drip_access: 5
          blocker_section_id: 123
          blocker_lesson_id: 123
          is_hidden_from_non_members: true

    CoursesLessonAttributes:
      type: object
      title: Lessons
      description: Lessons
      required:
      - id
      - title
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Public ID
        title:
          type: string
          description: Title
        body:
          type:
          - string
          - 'null'
          description: Description
        section_id:
          type:
          - integer
          - 'null'
          description: Parent module
        published_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Schedule for
        current_path:
          type:
          - string
          - 'null'
          description: Current Path
        sort_order:
          type:
          - integer
          - 'null'
          description: Sort priority column that may define a specific sort order in the
            UI
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 1
        public_id: quglTp
        title: Lesson 1
        body: Example Lesson
        section_id: 2
        published_at: '2025-04-21T12:18:52.000Z'
        current_path:
        sort_order: 0
        created_at: '2025-04-21T12:18:52.189Z'
        updated_at: '2025-05-21T12:18:52.189Z'
    CoursesLessonParameters:
      type: object
      title: Lessons
      description: Lessons
      required:
      - title
      properties:
        title:
          type: string
          description: Title
        body:
          type:
          - string
          - 'null'
          description: Description
      example:
        courses_lesson:
          title: Lesson 1
          body: Example Lesson
    CoursesLessonParametersUpdate:
      type: object
      title: Lessons
      description: Lessons
      required: []
      properties:
        title:
          type: string
          description: Title
        body:
          type:
          - string
          - 'null'
          description: Description
      example:
        courses_lesson:
          title: Lesson 1
          body: Example Lesson

    CoursesLessonCompletionAttributes:
      type: object
      title: Completed lessons
      description: Completed lessons
      required:
      - id
      - enrollment_id
      - lesson_id
      - completed_at
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Public ID
        enrollment_id:
          type: integer
          description: The ID of the `Courses::Enrollment` record that completed the lesson
        lesson_id:
          type: integer
          description: The ID of the `Courses::Lesson` record that was completed
        completed_at:
          type: string
          format: date-time
          description: The time when the record was completed; It is set automatically to
            the current time when the record is created
      example:
        id: 1
        public_id: oONyXE
        enrollment_id: 2
        lesson_id: 2
        completed_at: '2025-06-21T12:17:52.000Z'
    CoursesLessonCompletionParameters:
      type: object
      title: Completed lessons
      description: Completed lessons
      required:
      - enrollment_id
      - lesson_id
      properties:
        enrollment_id:
          type: integer
          description: The ID of the `Courses::Enrollment` record that completed the lesson
        lesson_id:
          type: integer
          description: The ID of the `Courses::Lesson` record that was completed
      example:
        courses_lesson_completion:
          enrollment_id: 2
          lesson_id: 2
    CoursesLessonCompletionParametersUpdate:
      type: object
      title: Completed lessons
      description: Completed lessons
      required:
      - enrollment_id
      - lesson_id
      properties:
        enrollment_id:
          type: integer
          description: The ID of the `Courses::Enrollment` record that completed the lesson
        lesson_id:
          type: integer
          description: The ID of the `Courses::Lesson` record that was completed
      example:
        courses_lesson_completion:
          enrollment_id: 2
          lesson_id: 2


    FormAttributes:
      type: object
      title: Forms
      description: Forms
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Form ID
        public_id:
          type:
          - string
          - 'null'
          description: Form public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Name
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 7
        public_id: odsALG
        workspace_id: 42000
        name: Example Form
        created_at: '2025-06-21T12:18:52.346Z'
        updated_at: '2025-06-21T12:18:52.346Z'
    FormParameters:
      type: object
      title: Forms
      description: Forms
      required:
      - name
      properties:
        name:
          type: string
          description: Name
      example:
        form:
          name: Example Form
    FormParametersUpdate:
      type: object
      title: Forms
      description: Forms
      required: []
      properties:
        name:
          type: string
          description: Name
      example:
        form:
          name: Example Form

    FormsFieldSetAttributes:
      type: object
      title: Field sets
      description: Field sets
      required:
      - id
      - form_id
      - title
      properties:
        id:
          type: integer
          description: Field set ID
        public_id:
          type:
          - string
          - 'null'
          description: Field set public ID
        form_id:
          type: integer
          description: Form ID
        title:
          type: string
          description: Title
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 7
        public_id: CswfPr
        form_id: 8
        title: Example Field Set
        created_at: '2025-06-21T12:18:52.359Z'
        updated_at: '2025-06-21T12:18:52.359Z'
    FormsFieldSetParameters:
      type: object
      title: Field sets
      description: Field sets
      required:
      - title
      properties:
        title:
          type: string
          description: Title
      example:
        forms_field_set:
          title: Example Field Set
    FormsFieldSetParametersUpdate:
      type: object
      title: Field sets
      description: Field sets
      required: []
      properties:
        title:
          type: string
          description: Title
      example:
        forms_field_set:
          title: Example Field Set

    FormsFieldAttributes:
      type: object
      title: Fields
      description: Fields
      required:
      - id
      - field_set_id
      - label
      - key
      properties:
        id:
          type: integer
          description: Field ID
        public_id:
          type:
          - string
          - 'null'
          description: Field public ID
        field_set_id:
          type: integer
          description: Field set ID
        label:
          type: string
          description: Label
        field_type:
          type:
          - string
          - 'null'
          description: Field Type
        allow_multiple:
          type:
          - boolean
          - 'null'
          description: Allow Multiple
        key:
          type: string
          description: Key
        hidden:
          type:
          - boolean
          - 'null'
          description: Hidden
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 7
        public_id: RmJKpf
        field_set_id: 8
        label: MyString
        field_type: MyString
        allow_multiple: false
        key: CustomKey
        hidden: false
        created_at: '2025-06-21T12:18:52.375Z'
        updated_at: '2025-06-21T12:18:52.375Z'
    FormsFieldParameters:
      type: object
      title: Fields
      description: Fields
      required:
      - label
      - key
      properties:
        label:
          type: string
          description: Label
        field_type:
          type:
          - string
          - 'null'
          description: Field Type
        allow_multiple:
          type:
          - boolean
          - 'null'
          description: Allow Multiple
        key:
          type: string
          description: Key
        hidden:
          type:
          - boolean
          - 'null'
          description: Hidden
      example:
        forms_field:
          label: MyString
          field_type: MyString
          allow_multiple: false
          key: CustomKey
          hidden: false
    FormsFieldParametersUpdate:
      type: object
      title: Fields
      description: Fields
      required: []
      properties:
        label:
          type: string
          description: Label
        field_type:
          type:
          - string
          - 'null'
          description: Field Type
        allow_multiple:
          type:
          - boolean
          - 'null'
          description: Allow Multiple
        key:
          type: string
          description: Key
        hidden:
          type:
          - boolean
          - 'null'
          description: Hidden
      example:
        forms_field:
          label: Example Field
          field_type: MyString
          allow_multiple: false
          key: CustomKey
          hidden: false

    FormsFieldsOptionAttributes:
      type: object
      title: Options
      description: Options
      required:
      - id
      - field_id
      - label
      properties:
        id:
          type: integer
          description: Option ID
        public_id:
          type:
          - string
          - 'null'
          description: Option public ID
        field_id:
          type: integer
          description: Field ID
        label:
          type: string
          description: Label
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 23
        public_id: ljSsWH
        field_id: 8
        label: minus
        created_at: '2025-06-21T12:18:52.395Z'
        updated_at: '2025-06-21T12:18:52.395Z'
    FormsFieldsOptionParameters:
      type: object
      title: Options
      description: Options
      required:
      - label
      properties:
        label:
          type: string
          description: Label
      example:
        forms_fields_option:
          label: minus
    FormsFieldsOptionParametersUpdate:
      type: object
      title: Options
      description: Options
      required: []
      properties:
        label:
          type: string
          description: Label
      example:
        forms_fields_option:
          label: Example Option

    FormsSubmissionAttributes:
      type: object
      title: Submissions
      description: Submissions
      required:
      - id
      - form_id
      properties:
        id:
          type: integer
          description: Submission ID
        public_id:
          type:
          - string
          - 'null'
          description: Submission public ID
        form_id:
          type: integer
          description: Form ID
        contact_id:
          type:
          - integer
          - 'null'
          description: Contact
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 5
        public_id: ropNjZ
        form_id: 13
        contact_id: 4
        created_at: '2025-06-21T12:18:52.421Z'
        updated_at: '2025-06-21T12:18:52.421Z'
    FormsSubmissionParameters:
      type: object
      title: Submissions
      description: Submissions
      required: []
      properties:
        contact_id:
          type:
          - integer
          - 'null'
          description: Contact
      example:
        forms_submission:
          contact_id: 4
    FormsSubmissionParametersUpdate:
      type: object
      title: Submissions
      description: Submissions
      required: []
      properties:
        contact_id:
          type:
          - integer
          - 'null'
          description: Contact
      example:
        forms_submission:
          contact_id: 4

    FormsSubmissionsAnswerAttributes:
      type: object
      title: Answers
      description: Answers
      required:
      - id
      - submission_id
      - field_id
      properties:
        id:
          type: integer
          description: Answer ID
        public_id:
          type:
          - string
          - 'null'
          description: Answer public ID
        submission_id:
          type: integer
          description: Submission ID
        field_id:
          type: integer
          description: Field
        fields_option_id:
          type:
          - integer
          - 'null'
          description: ID of a record from the Forms::Fields::Option API.
        entry:
          type:
          - string
          - 'null'
          description: Entry
        fields_option_ids:
          type:
          - array
          - 'null'
          description: Fields Options
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 8
        public_id: yOtxjz
        submission_id: 7
        field_id: 18
        fields_option_id: 52
        entry: MyText
        fields_option_ids: []
        created_at: '2025-06-21T12:18:52.474Z'
        updated_at: '2025-06-21T12:18:52.474Z'
    FormsSubmissionsAnswerParameters:
      type: object
      title: Answers
      description: Answers
      required:
      - field_id
      properties:
        field_id:
          type: integer
          description: Field
        fields_option_id:
          type:
          - integer
          - 'null'
          description: ID of a record from the Forms::Fields::Option API.
        entry:
          type:
          - string
          - 'null'
          description: Entry
        fields_option_ids:
          type:
          - array
          - 'null'
          description: Fields Options
      example:
        forms_submissions_answer:
          field_id: 18
          fields_option_id: 52
          entry: MyText
          fields_option_ids: []
    FormsSubmissionsAnswerParametersUpdate:
      type: object
      title: Answers
      description: Answers
      required: []
      properties:
        field_id:
          type: string
          description: Field
        fields_option_id:
          type:
          - integer
          - 'null'
          description: ID of a record from the Forms::Fields::Option API.
        entry:
          type:
          - string
          - 'null'
          description: Entry
        fields_option_ids:
          type:
          - array
          - 'null'
          description: Fields Options
      example:
        forms_submissions_answer:
          field_id: 123
          fields_option_id: 52
          entry: MyText
          fields_option_ids: []

    FormSubmissionAttributes:
      type: object
      title: Form submissions
      description: Form submissions
      required:
      - id
      - workspace_id
      properties:
        id:
          type: integer
          description: The unique identifier for the form submission
        public_id:
          type:
          - string
          - 'null'
          description: The unique public identifier for the form submission
        contact_id:
          type:
          - integer
          - 'null'
          description: The unique identifier of the contact who submitted the form
        workspace_id:
          type: integer
          description: The unique identifier of the workspace that the form was part of
        page_id:
          type:
          - integer
          - 'null'
          description: The unique identifier of the page that the form was on
        created_at:
          type:
          - string
          - 'null'
          description: The date and time the form was submitted
        updated_at:
          type:
          - string
          - 'null'
          description: The date and time the form submission was last updated
        data:
          type: object
          additionalProperties:
            type: string
          description: The dynamic form field data submitted by the user. The HTML form
            input field names build the keys of this object, and the user's HTML inputs
            are the values.
      example:
        id: 1
        public_id: EOJiyS
        contact_id: 6
        workspace_id: 42000
        page_id: 1
        created_at:
        updated_at:
        data:
          url: "/contact"
          first_name: John
          last_name: Doe
          email: john@example.com
    FormSubmissionParameters:
      type: object
      title: Form submissions
      description: Form submissions
      required: []
      properties:
        contact_id:
          type:
          - integer
          - 'null'
          description: The unique identifier of the contact who submitted the form
        page_id:
          type:
          - integer
          - 'null'
          description: The unique identifier of the page that the form was on
        data:
          type: object
          additionalProperties:
            type: string
          description: The dynamic form field data submitted by the user. The HTML form
            input field names build the keys of this object, and the user's HTML inputs
            are the values.
      example:
        form_submission:
          contact_id: 6
          page_id: 1
          data:
            url: "/contact"
            first_name: John
            last_name: Doe
            email: john@example.com
    FormSubmissionParametersUpdate:
      type: object
      title: Form submissions
      description: Form submissions
      required: []
      properties:
        contact_id:
          type:
          - integer
          - 'null'
          description: The unique identifier of the contact who submitted the form
        page_id:
          type:
          - integer
          - 'null'
          description: The unique identifier of the page that the form was on
        data:
          type: object
          additionalProperties:
            type: string
          description: The dynamic form field data submitted by the user. The HTML form
            input field names build the keys of this object, and the user's HTML inputs
            are the values.
      example:
        form_submission:
          contact_id: 6
          page_id: 1
          data:
            url: "/contact"
            first_name: John
            last_name: Doe
            email: john@example.com


    FulfillmentAttributes:
      type: object
      title: Fulfillments
      description: Fulfillments
      required:
      - id
      - workspace_id
      - contact_id
      - status
      - location_id
      properties:
        id:
          type: integer
          description: Fulfillment ID
        public_id:
          type:
          - string
          - 'null'
          description: The fulfillment ID that would be visible to the customer within the
            CF app
        workspace_id:
          type: integer
          description: The workspace that the fulfillment belongs to
        contact_id:
          type: integer
          description: The contact that made the order that is being fulfilled.
        status:
          type: string
          enum:
          - cancelled
          - fulfilled
          - restocked
          description: The status of the fulfillment
        tracking_url:
          type:
          - string
          - 'null'
          description: Tracking URL
        shipping_provider:
          type:
          - string
          - 'null'
          description: Shipping Provider
        tracking_code:
          type:
          - string
          - 'null'
          description: Tracking Code
        location_id:
          type: integer
          description: The location that the fulfillment is being fulfilled from
        fulfillment_number:
          type:
          - integer
          - 'null'
          description: An auto-generated number of the fulfillment
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
        included_invoices_line_items:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Included orders invoices line item
            description: The orders invoice line item to fulfill as part of this fulfillment
            required:
            - id
            - fulfillment_id
            - quantity
            - invoices_line_item_id
            properties:
              id:
                type: integer
                description: Included orders line item ID
              public_id:
                type:
                - string
                - 'null'
                description: The public ID of the included order invoices line item
              fulfillment_id:
                type: integer
                description: Fulfillment ID
              quantity:
                type: integer
                description: The quantity of the invoices line item subject that is part
                  of this fulfillment. Your stock must have enough quantity for a successful
                  fulfillment.
              invoices_line_item_id:
                type: integer
                description: The invoice line item of an order that is part of this fulfillment.
          description: Line items that are included in your fulfillment. They reference
            invoice line items of one or more orders and have extra data about the line
            item that is being fulfilled like the quantity that is part of this fulfillment.
      example:
        id: 1
        public_id: KWONZC
        workspace_id: 42000
        contact_id: 7
        status: fulfilled
        tracking_url: https://usps.com/track/1234567890
        shipping_provider: USPS
        tracking_code: '1234567890'
        location_id: 1
        fulfillment_number: 1
        created_at: '2025-05-21T12:18:53.224Z'
        updated_at: '2025-05-21T12:18:53.224Z'
        included_invoices_line_items:
        - id: 1
          public_id: MjVLhR
          fulfillment_id: 1
          quantity: 1
          invoices_line_item_id: 2
    FulfillmentParameters:
      type: object
      title: Fulfillments
      description: Fulfillments
      required:
      - contact_id
      - location_id
      - included_orders_invoices_line_items_attributes
      properties:
        contact_id:
          type: integer
          description: The contact that made the order that is being fulfilled.
        tracking_url:
          type:
          - string
          - 'null'
          description: Tracking URL
        shipping_provider:
          type:
          - string
          - 'null'
          description: Shipping Provider
        tracking_code:
          type:
          - string
          - 'null'
          description: Tracking Code
        location_id:
          type: integer
          description: The location that the fulfillment is being fulfilled from
        ignore_out_of_stock:
          type: boolean
          description: Create a fulfillment despite the item being out of stock.
        notify_customer:
          type: boolean
          description: Send an email to the customer when the fulfillment is created. Will
            use workspace default behavior if left unset.
        included_orders_invoices_line_items_attributes:
          type: array
          description: The orders invoices line items to fulfill as part of this fulfillment.
          items:
            type: object
            properties:
              invoices_line_item_id:
                type: integer
                description: The orders invoice line item to fulfill
              quantity:
                type: integer
                description: The quantity to fulfill
      example:
        fulfillment:
          contact_id: 7
          tracking_url: https://usps.com/track/1234567890
          shipping_provider: USPS
          tracking_code: '1234567890'
          location_id: 1
          ignore_out_of_stock: true
          notify_customer: true
          included_orders_invoices_line_items_attributes:
          - invoices_line_item_id: 1
            quantity: 1
          - invoices_line_item_id: 2
            quantity: 2
    FulfillmentParametersUpdate:
      type: object
      title: Fulfillments
      description: Fulfillments
      required: []
      properties:
        tracking_url:
          type:
          - string
          - 'null'
          description: Tracking URL
        shipping_provider:
          type:
          - string
          - 'null'
          description: Shipping Provider
        tracking_code:
          type:
          - string
          - 'null'
          description: Tracking Code
        notify_customer:
          type: boolean
          description: Send an email to the customer when the fulfillment is updated. Will
            use workspace default behavior if left unset
      example:
        fulfillment:
          tracking_url: https://usps.com/track/1234567890
          shipping_provider: USPS
          tracking_code: '1234567890'
          notify_customer: true

    FulfillmentsLocationAttributes:
      type: object
      title: Locations
      description: Locations
      required:
      - id
      - workspace_id
      - name
      - address_name
      - email_address
      - address
      properties:
        id:
          type: integer
          description: Location ID
        public_id:
          type:
          - string
          - 'null'
          description: Public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Location name
        address_name:
          type: string
          description: Address name
        email_address:
          type: string
          description: Email address
        phone_number:
          type:
          - string
          - 'null'
          description: Phone number
        sort_order:
          type:
          - integer
          - 'null'
          description: Sort order
        archived:
          type: boolean
          description: Indicates if the location is archived
        external_app:
          type:
          - boolean
          - 'null'
          description: External app
        created_at:
          type:
          - string
          - 'null'
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          description: Updated
        address:
          type: object
          title: Locations
          description: Locations
          required: []
          properties:
            address_one:
              type:
              - string
              - 'null'
              description: Address line 1
            address_two:
              type:
              - string
              - 'null'
              description: Address line 2
            city:
              type:
              - string
              - 'null'
              description: City
            region:
              type:
              - string
              - 'null'
              description: Region
            country:
              type:
              - string
              - 'null'
              description: Country
            postal_code:
              type:
              - string
              - 'null'
              description: Postal code
      example:
        id: 2
        public_id: BSLhnd
        workspace_id: 42000
        name: Example Location
        address_name: Example Address
        email_address: myemail1750508333@example.com
        phone_number: "(123)-555-4567"
        sort_order: 1
        archived: false
        external_app: true
        created_at:
        updated_at:
        address:
          address_one: 3443 W. Bavaria St.
          address_two: Suite 100
          city: Eagle
          region: Idaho
          country: US
          postal_code: '83616'
    FulfillmentsLocationParameters:
      type: object
      title: Locations
      description: Locations
      required:
      - name
      - address_name
      - email_address
      properties:
        name:
          type: string
          description: Location name
        address_name:
          type: string
          description: Address name
        email_address:
          type: string
          description: Email address
        phone_number:
          type:
          - string
          - 'null'
          description: Phone number
        archived:
          type: boolean
          default: false
          description: Indicates if the location is archived
        external_app:
          type: boolean
          description: Indicates a location managed by an external integration. Only to
            be used for requests made with Oauth 2.0 access tokens. External app locations
            do not need to provide an address.
        address:
          type: object
          properties:
            address_one:
              type: string
              description: The first line of the address
            address_two:
              type: string
              description: The second line of the address
            city:
              type: string
              description: The city
            region:
              type: string
              description: The state or province
            country:
              type: string
              description: The country (ISO2 code)
            postal_code:
              type: string
              description: The postal code
      example:
        fulfillments_location:
          name: Example Location
          address_name: Example Address
          email_address: myemail1750508333@example.com
          phone_number: "(123)-555-4567"
          archived: false
    FulfillmentsLocationParametersUpdate:
      type: object
      title: Locations
      description: Locations
      required: []
      properties:
        name:
          type: string
          description: Location name
        address_name:
          type: string
          description: Address name
        email_address:
          type: string
          description: Email address
        phone_number:
          type:
          - string
          - 'null'
          description: Phone number
        archived:
          type: boolean
          default: false
          description: Indicates if the location is archived
        external_app:
          type: boolean
          description: Indicates a location managed by an external integration. Only to
            be used for requests made with Oauth 2.0 access tokens. External app locations
            do not need to provide an address.
        address:
          type: object
          properties:
            address_one:
              type: string
              description: The first line of the address
            address_two:
              type: string
              description: The second line of the address
            city:
              type: string
              description: The city
            region:
              type: string
              description: The state or province
            country:
              type: string
              description: The country (ISO2 code)
            postal_code:
              type: string
              description: The postal code
      example:
        fulfillments_location:
          name: Example Location
          address_name: Example Address
          email_address: myemail@example.com
          phone_number: "(123)-555-4567"
          archived: false


    FunnelAttributes:
      type: object
      title: Funnels
      description: Funnels
      required:
      - id
      - name
      - current_path
      properties:
        id:
          type: integer
          description: Funnel ID
        public_id:
          type:
          - string
          - 'null'
          description: Public Funnel ID
        workspace_id:
          type:
          - integer
          - 'null'
          description: The ID of the workspace that the funnel belongs to
        name:
          type: string
          description: Name of the Funnel
        archived:
          type:
          - boolean
          - 'null'
          description: Archived status
        current_path:
          type: string
          description: The URL path of the funnel
        live_mode:
          type:
          - boolean
          - 'null'
          description: In Live Mode your Funnel cannot be tested and will process live payments
        favicon_image_id:
          type:
          - string
          - 'null'
          description: The ID of the image used as the favicon for this funnel
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
        tags:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Funnel Tags
            description: Funnel Tags
            required:
            - id
            - name
            - color
            properties:
              id:
                type: integer
                description: ID
              public_id:
                type:
                - string
                - 'null'
                description: Public ID
              name:
                type: string
                description: The name of the funnel tag
              color:
                type: string
                description: The color of the funnel tag
          description: Funnel Tags
      example:
        id: 1
        public_id: HEPSna
        workspace_id: 42000
        name: Example Funnel
        archived: false
        current_path: "/example-path"
        live_mode: true
        favicon_image_id:
        created_at: '2025-05-21T12:18:53.296Z'
        updated_at: '2025-05-21T12:18:53.296Z'
        tags:
        - id: 1
          public_id: jRofDX
          name: Example Funnel Tag
          color: "#62dd6c"
    FunnelParameters:
      type: object
      title: Funnels
      description: Funnels
      required:
      - name
      properties:
        name:
          type: string
          description: Name of the Funnel
        live_mode:
          type:
          - boolean
          - 'null'
          description: In Live Mode your Funnel cannot be tested and will process live payments
      example:
        funnel:
          name: Example Funnel
          live_mode: true
    FunnelParametersUpdate:
      type: object
      title: Funnels
      description: Funnels
      required: []
      properties:
        name:
          type: string
          description: Name of the Funnel
        live_mode:
          type:
          - boolean
          - 'null'
          description: In Live Mode your Funnel cannot be tested and will process live payments
      example:
        funnel:
          name: Example Funnel
          live_mode: true

    FunnelsTagAttributes:
      type: object
      title: Funnel Tags
      description: Funnel Tags
      required:
      - id
      - workspace_id
      - name
      - color
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: The name of the funnel tag
        color:
          type: string
          description: The color of the funnel tag
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
      example:
        id: 2
        public_id: siRPXl
        workspace_id: 42000
        name: Example Funnel Tag
        color: "#90a164"
        created_at: '2025-05-21T12:18:53.311Z'
        updated_at: '2025-05-21T12:18:53.311Z'
    FunnelsTagParameters:
      type: object
      title: Funnel Tags
      description: Funnel Tags
      required:
      - name
      properties:
        name:
          type: string
          description: The name of the funnel tag
        color:
          type: string
          description: The color of the funnel tag
      example:
        funnels_tag:
          name: Example Funnel Tag
          color: "#FF5733"
    FunnelsTagParametersUpdate:
      type: object
      title: Funnel Tags
      description: Funnel Tags
      required: []
      properties:
        name:
          type: string
          description: Name of the funnel tag
        color:
          type: string
          description: The color of the funnel tag
      example:
        funnels_tag:
          name: Example Funnel Tag
          color: "#FF5733"


    ImageAttributes:
      type: object
      title: Images
      description: Images
      required:
      - id
      - workspace_id
      properties:
        id:
          type: integer
          description: Image ID
        public_id:
          type:
          - string
          - 'null'
          description: Public ID
        url:
          type: string
          description: The URL of the image
        workspace_id:
          type: integer
          description: Workspace ID
        alt_text:
          type:
          - string
          - 'null'
          description: Image alt attribute
        name:
          type:
          - string
          - 'null'
          description: Image name
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 11
        public_id: ZzQBws
        url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
        workspace_id: 42000
        alt_text: Alt text of the image
        name: Amazing Shot
        created_at: '2025-05-21T12:18:53.321Z'
        updated_at: '2025-05-21T12:18:53.321Z'
    ImageParameters:
      type: object
      title: Images
      description: Images
      required:
      - upload_source_url
      properties:
        alt_text:
          type:
          - string
          - 'null'
          description: Image alt attribute
        name:
          type:
          - string
          - 'null'
          description: Image name
        upload_source_url:
          type: string
          description: The source URL of the image that you want to upload. Not required
            on Update when not needed to re-upload the image.
      example:
        image:
          alt_text: Alt text of the image
          name: Amazing Shot
          upload_source_url: https://image-hosting-x.com/cdn/123
    ImageParametersUpdate:
      type: object
      title: Images
      description: Images
      required: []
      properties:
        alt_text:
          type:
          - string
          - 'null'
          description: Image alt attribute
        name:
          type:
          - string
          - 'null'
          description: Image name
        upload_source_url:
          type: string
          description: The source URL of the image that you want to upload. Not required
            on Update when not needed to re-upload the image.
      example:
        image:
          alt_text: Alt text of the image
          name: Amazing Shot
          upload_source_url: https://image-hosting-x.com/cdn/123


    OrderAttributes:
      type: object
      title: Orders
      description: Orders
      required:
      - id
      - workspace_id
      - contact_id
      - currency
      - origination_channel_id
      - contact
      - workspace
      properties:
        id:
          type: integer
          description: ClickFunnels Order ID
        public_id:
          type:
          - string
          - 'null'
          description: ClickFunnels Order public ID
        order_number:
          type:
          - string
          - 'null'
          description: A sequential number for bookkeeping purposes increased by 1 for each
            new order in a workspace starting from \#1001.
        workspace_id:
          type: integer
          description: ClickFunnels Workspace ID
        contact_id:
          type: integer
          description: The contact associated with the order.
        live_mode:
          type:
          - boolean
          - 'null'
          description: 'Indicates if the Order will use a live payment gateway and process
            real credit cards, or if it will use a test gateway and only process test cards.
      
            '
        total_amount:
          type:
          - string
          - 'null'
          description: The total amount of the order, considering taxes and discounts. For
            external orders, it's the sum of all line items' price amounts times their quantities.
        currency:
          type: string
          description: Currency
        origination_channel_id:
          type: integer
          description: Origination Channel ID
        origination_channel_type:
          type:
          - string
          - 'null'
          description: Origination Channel Type
        shipping_address_first_name:
          type:
          - string
          - 'null'
          description: 'The first name of the recipient''s shipping address.
      
            '
        shipping_address_last_name:
          type:
          - string
          - 'null'
          description: 'The last name of the recipient''s shipping address.
      
            '
        shipping_address_organization_name:
          type:
          - string
          - 'null'
          description: 'The organization name of the recipient''s shipping address.
      
            '
        shipping_address_phone_number:
          type:
          - string
          - 'null'
          description: 'The phone number of the recipient''s shipping address.
      
            '
        shipping_address_street_one:
          type:
          - string
          - 'null'
          description: The main street information of the shipping address, including the
            street name and number.
        shipping_address_street_two:
          type:
          - string
          - 'null'
          description: Additional street information for the shipping address, like entrance
            information and apartment numbers.
        shipping_address_city:
          type:
          - string
          - 'null'
          description: The city of the shipping address.
        shipping_address_region:
          type:
          - string
          - 'null'
          description: The region of the shipping address, like state or province.
        shipping_address_country:
          type:
          - string
          - 'null'
          description: 'The country of the shipping address.
      
            '
        shipping_address_postal_code:
          type:
          - string
          - 'null'
          description: Postal Code
        billing_address_street_one:
          type:
          - string
          - 'null'
          description: 'The main street information of the billing address, including the
            street name and number.
      
            '
        billing_address_street_two:
          type:
          - string
          - 'null'
          description: 'Additional street information of the billing address, like entrance
            information and apartment numbers.
      
            '
        billing_address_city:
          type:
          - string
          - 'null'
          description: 'The city of the billing address.
      
            '
        billing_address_region:
          type:
          - string
          - 'null'
          description: 'The region of the shipping address, like state or province.
      
            '
        billing_address_country:
          type:
          - string
          - 'null'
          description: 'The billing address country.
      
            '
        billing_address_postal_code:
          type:
          - string
          - 'null'
          description: 'Billing address postal (ZIP) code.
      
            '
        page_id:
          type:
          - integer
          - 'null'
          description: Page ID
        notes:
          type:
          - string
          - 'null'
          description: Your internal note about the order. This will be visible in ClickFunnels
            admin orders-related sections.
        in_trial:
          type:
          - boolean
          - 'null'
          description: In Trial
        billing_status:
          type:
          - string
          - 'null'
          description: |
            The billing status reflects the status of the invoice of an order.
            Billing status can be one of the following for Payments AI and Stripe orders:
            `pending`, `draft`, `paid`, `unpaid`, `partially-refunded`, `refunded`, `voided`, `disputed`, `past-due`.
      
            For external orders, the billing status can be one of: `pending`, `paid`, `unpaid`, `voided` and `refunded`.
        service_status:
          type:
          - string
          - 'null'
          description: |
            The service status reflects the activity state of the order. For subscriptions, it can control whether a subscription is ongoing, for example despite an irregular (unpaid) invoice status.
      
            For orders with Payments AI as the payment processor, it can be one of the following:
            `pending`, `active`, `completed`, `churned`, `canceled`, `suspended`, `paused`, `abandoned`, `voided`
            Stripe orders have the same order statuses, except for `voided`. For voided invoices, its service status becomes `abandoned`.
            You can read about the state transitions in more detail in our [orders overview guide](https://developers.myclickfunnels.com/docs/orders).
      
            For external one-time orders possible service statuses are `pending` or `completed`. For external subscription orders possible statuses are `pending`, `active`, `churned`, `canceled`, `completed`, `paused`.
        order_type:
          type:
          - string
          - 'null'
          description: Order Type
        next_charge_at:
          type:
          - string
          - 'null'
          description: Next Charge At
        tax_amount:
          type:
          - string
          - 'null'
          description: Tax Amount
        trial_end_at:
          type:
          - string
          - 'null'
          description: Trial End At
        billing_payment_method_id:
          type:
          - string
          - 'null'
          description: Payment Method
        funnel_name:
          type:
          - string
          - 'null'
          description: Funnel Name
        tag_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: integer
          description: Order Tags
        discount_ids:
          type:
          - array
          - 'null'
          description: Discounts
        activated_at:
          type:
          - string
          - 'null'
          description: Date Activated
        workspace_sharing_id:
          type:
          - string
          - 'null'
          description: Workspace Sharing ID
        canceled_at:
          type:
          - string
          - 'null'
          description: Order Canceled At
        canceled_by:
          type:
          - string
          - 'null'
          description: Order Canceled By
        cancel_reason:
          type:
          - string
          - 'null'
          description: |
            The reason _code_ for the cancelation, it is required when canceling an order.
      
            Possible codes for Payments AI orders are:
            `did-not-use`, `did-not-want`, `missing-features`, `too-expensive`, `bugs-or-problems`, `other`
      
            Possible codes for Stripe orders are:
            `customer_service`, `low_quality`, `missing_features`, `other`, `switched_service`, `too_complex`, `too_expensive`, `unused`
      
            External orders accept the same cancelation reasons as Stripe.
        cancel_description:
          type:
          - string
          - 'null'
          description: A free-text description of the cancellation reason.
        churned_at:
          type:
          - string
          - 'null'
          description: Churned At
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Date Ordered
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Date Updated
        external_id:
          type:
          - string
          - 'null'
          description: An external ID, e.g., a payment provider's ID or an ID managed by
            the client internally
        payment_processor:
          type:
          - string
          - 'null'
          description: The payment processor of the order. Currently, it can be one of `payments_ai`
            and `external`.
        phone_number:
          type:
          - string
          - 'null'
          description: Phone Number
        page_name:
          type:
          - string
          - 'null'
          description: Page Name. Want to filter by it? See our <i><u><a href="https://developers.myclickfunnels.com/docs/filtering-by-page"
            target="_blank">help guide on that topic</a><u><i>.
        origination_channel_name:
          type:
          - string
          - 'null'
          description: Origination Channel Name
        order_page:
          type:
          - object
          - 'null'
          title: Page
          description: Page
          required:
          - id
          - name
          properties:
            id:
              type: integer
              description: Page ID
            public_id:
              type:
              - string
              - 'null'
              description: Page Public ID
            name:
              type: string
              description: Page name of the editable page element. Want to filter by it?
                See our <i><u><a href="https://developers.myclickfunnels.com/docs/filtering-by-page"
                target="_blank">help guide on that topic</a><u><i>.
        contact:
          type: object
          allOf:
          - "$ref": "#/components/schemas/ContactAttributes"
          description: Customer
        contact_groups:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Groups
            description: Groups
            required:
            - id
            - name
            properties:
              id:
                type: integer
                description: Group ID
              public_id:
                type:
                - string
                - 'null'
                description: Group Public ID
              name:
                type: string
                description: Name
          description: Contact Groups
        workspace:
          type: object
          allOf:
          - "$ref": "#/components/schemas/WorkspaceAttributes"
          description: Workspace
        segments:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Segments
            description: Segments
            required:
            - id
            - name
            properties:
              id:
                type: integer
                description: Segment ID
              public_id:
                type:
                - string
                - 'null'
                description: Segment public ID
              name:
                type: string
                description: Name
          description: Segments
        line_items:
          type:
          - array
          - 'null'
          items:
            "$ref": "#/components/schemas/OrdersLineItemAttributes"
          description: Order Line Items
        previous_line_item:
          type:
          - string
          - 'null'
          description: An additional field, only available in outgoing subscription.upgrade/subscription.downgrade
            webhooks. It enables you to identify the former line item which is otherwise
            removed from the regular subscription line items when an upgrade or downgrade
            happens. Thus you can see the data of the previously active subscription. This
            property will not appear in regular API requests, but only in the event of a
            subscription upgrade or downgrade.
        affiliate:
          type:
          - object
          - 'null'
          title: Affiliate
          description: The affiliate who will receive a commission for the order
          required:
          - name
          properties:
            name:
              type: string
              description: The name of the affiliate. Can be a combination of first name,
                last name and the affiliate email.
            email:
              type:
              - string
              - 'null'
              description: The email address of the affiliate.
        referral_code:
          type:
          - object
          - 'null'
          title: Referral Code
          description: The referral code used to associate an order with an affiliate.
          required:
          - code
          properties:
            code:
              type: string
              description: The referral code value visible by users. It must be unique and
                can contain only letters, numbers, hyphens, and underscores.
            default:
              type:
              - boolean
              - 'null'
              description: Whether this code is the default code for the affiliate.
        visits:
          type:
          - object
          - 'null'
          allOf:
          - "$ref": "#/components/schemas/ResourceAttributes"
          description: 'Translation missing: en.orders.fields.visits.api_description'
      example:
        id: 2
        public_id: HldLOw
        order_number: '752648'
        workspace_id: 42000
        contact_id: 9
        live_mode: true
        total_amount: '123.00'
        currency: USD
        origination_channel_id: 3
        origination_channel_type: User
        shipping_address_first_name: Brooks
        shipping_address_last_name: Rau
        shipping_address_organization_name: Testing, Inc.
        shipping_address_phone_number: "+19053871234"
        shipping_address_street_one: 66557 Leuschke Falls
        shipping_address_street_two: Apt. 894
        shipping_address_city: Lake Trudiechester
        shipping_address_region: WA
        shipping_address_country: US
        shipping_address_postal_code: '94104'
        billing_address_street_one: 3244 Isaias Stravenue
        billing_address_street_two: Suite 507
        billing_address_city: Ryantown
        billing_address_region: WA
        billing_address_country: US
        billing_address_postal_code: '15876'
        page_id: 3
        notes: Et accusamus aspernatur ut.
        in_trial: false
        billing_status: pending
        service_status: pending
        order_type: one-time-order
        next_charge_at:
        tax_amount: '0.00'
        trial_end_at:
        billing_payment_method_id:
        funnel_name:
        tag_ids:
        - 2
        discount_ids: []
        activated_at:
        workspace_sharing_id:
        canceled_at:
        canceled_by:
        cancel_reason:
        cancel_description:
        churned_at:
        created_at: '2025-05-21T12:18:53.463Z'
        updated_at: '2025-05-21T12:18:53.463Z'
        external_id:
        payment_processor: payments_ai
        phone_number: 446-954-2723 x7637
        page_name: Great Page
        origination_channel_name: ''
        order_page:
          id: 3
          public_id: CJrGVH
          name: Great Page
        contact:
          id: 9
          public_id: gUlBOR
          workspace_id: 42000
          anonymous:
          email_address: test-1d9b8e3e8a4242eee46b@example.com
          first_name: Adolfo
          last_name: Will
          phone_number: 446-954-2723 x7637
          time_zone: Pacific Time (US & Canada)
          uuid: ee147820-547f-4151-bc2f-76f9f1337c39
          unsubscribed_at:
          last_notification_email_sent_at:
          fb_url: https://www.facebook.com/example
          twitter_url: https://twitter.com/example
          instagram_url:
          linkedin_url: https://www.linkedin.com/in/example
          website_url: https://example.com
          created_at: '2025-05-21T12:18:53.342Z'
          updated_at: '2025-05-21T12:18:53.342Z'
          tags:
          - id: 11
            public_id: xHqovE
            name: Example Tag
            color: "#f03042"
            applied_at:
          custom_attributes:
            CustomKey: MyText
          visits:
            first_visit:
            last_visit:
            last_visit_with_utm:
        contact_groups:
        - id: 2
          public_id: PvIYBW
          name: Example Group
        workspace:
          id: 42000
          public_id: XjZitU
          team_id: 42000
          name: Example Workspace
          subdomain: example
          created_at: '2025-05-21T12:18:53.334Z'
          updated_at: '2025-05-21T12:18:53.334Z'
        segments:
        - id: 2
          public_id: dhkcBM
          name: Example Segment
        line_items:
        - id: 2
          public_id: OJMAJB
          order_id: 2
          quantity: 1
          prorated:
          created_at: '2025-04-05T17:35:40.062Z'
          updated_at: '2025-05-26T10:01:31.870Z'
          original_product:
            id: 6503
            public_id: Ykznlj
            name: Cool Shirt
          products_price:
            id: 45
            public_id: ONzmDY
            amount: '29.00'
            currency: usd
            duration:
            interval:
            interval_count:
            key:
          products_variant:
            id: 12
            public_id: EYRpJx
            name: Cool Shirt
            description:
            sku: sku_8318764007
        - id: 2
          public_id: nCqArF
          order_id: 2
          quantity: 1
          prorated:
          created_at:
          updated_at:
          original_product:
            id: 5
            public_id: dlAfzb
            name: Fantastic Concrete Bench 44dc12
          products_price:
            id: 4
            public_id: CmADfE
            amount: '100.00'
            currency: USD
            duration:
            interval:
            interval_count:
            key:
          products_variant:
            id: 4
            public_id: FRfZvm
            name: Practical Wool Table variant 962d
            description: Reiciendis sed architecto id.
            sku: 8eH7Y5zaEHCoIwVH
        previous_line_item:
        affiliate:
          name: Josh Fancy
          email: test-5e0c8624124d5bb52e12@example.com
        referral_code:
          code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
          default: true
        visits:
          first_visit:
          last_visit:
          last_visit_with_utm:
    OrderParameters:
      type: object
      title: Orders
      description: Orders
      required:
      - contact_id
      properties:
        contact_id:
          type: integer
          description: The contact associated with the order.
        live_mode:
          type:
          - boolean
          - 'null'
          description: 'Indicates if the Order will use a live payment gateway and process
            real credit cards, or if it will use a test gateway and only process test cards.
      
            '
        shipping_address_first_name:
          type:
          - string
          - 'null'
          description: 'The first name of the recipient''s shipping address.
      
            '
        shipping_address_last_name:
          type:
          - string
          - 'null'
          description: 'The last name of the recipient''s shipping address.
      
            '
        shipping_address_organization_name:
          type:
          - string
          - 'null'
          description: 'The organization name of the recipient''s shipping address.
      
            '
        shipping_address_phone_number:
          type:
          - string
          - 'null'
          description: 'The phone number of the recipient''s shipping address.
      
            '
        shipping_address_street_one:
          type:
          - string
          - 'null'
          description: The main street information of the shipping address, including the
            street name and number.
        shipping_address_street_two:
          type:
          - string
          - 'null'
          description: Additional street information for the shipping address, like entrance
            information and apartment numbers.
        shipping_address_city:
          type:
          - string
          - 'null'
          description: The city of the shipping address.
        shipping_address_region:
          type:
          - string
          - 'null'
          description: The region of the shipping address, like state or province.
        shipping_address_country:
          type:
          - string
          - 'null'
          description: 'The country of the shipping address.
      
            '
        shipping_address_postal_code:
          type:
          - string
          - 'null'
          description: Postal Code
        billing_address_street_one:
          type:
          - string
          - 'null'
          description: 'The main street information of the billing address, including the
            street name and number.
      
            '
        billing_address_street_two:
          type:
          - string
          - 'null'
          description: 'Additional street information of the billing address, like entrance
            information and apartment numbers.
      
            '
        billing_address_city:
          type:
          - string
          - 'null'
          description: 'The city of the billing address.
      
            '
        billing_address_region:
          type:
          - string
          - 'null'
          description: 'The region of the shipping address, like state or province.
      
            '
        billing_address_country:
          type:
          - string
          - 'null'
          description: 'The billing address country.
      
            '
        billing_address_postal_code:
          type:
          - string
          - 'null'
          description: 'Billing address postal (ZIP) code.
      
            '
        notes:
          type:
          - string
          - 'null'
          description: Your internal note about the order. This will be visible in ClickFunnels
            admin orders-related sections.
        billing_status:
          type:
          - string
          - 'null'
          description: |
            The billing status reflects the status of the invoice of an order.
            Billing status can be one of the following for Payments AI and Stripe orders:
            `pending`, `draft`, `paid`, `unpaid`, `partially-refunded`, `refunded`, `voided`, `disputed`, `past-due`.
      
            For external orders, the billing status can be one of: `pending`, `paid`, `unpaid`, `voided` and `refunded`.
        service_status:
          type:
          - string
          - 'null'
          description: |
            The service status reflects the activity state of the order. For subscriptions, it can control whether a subscription is ongoing, for example despite an irregular (unpaid) invoice status.
      
            For orders with Payments AI as the payment processor, it can be one of the following:
            `pending`, `active`, `completed`, `churned`, `canceled`, `suspended`, `paused`, `abandoned`, `voided`
            Stripe orders have the same order statuses, except for `voided`. For voided invoices, its service status becomes `abandoned`.
            You can read about the state transitions in more detail in our [orders overview guide](https://developers.myclickfunnels.com/docs/orders).
      
            For external one-time orders possible service statuses are `pending` or `completed`. For external subscription orders possible statuses are `pending`, `active`, `churned`, `canceled`, `completed`, `paused`.
        order_type:
          type:
          - string
          - 'null'
          description: Order Type
        next_charge_at:
          type:
          - string
          - 'null'
          description: Next Charge At
        activated_at:
          type:
          - string
          - 'null'
          description: Date Activated
        canceled_at:
          type:
          - string
          - 'null'
          description: Order Canceled At
        canceled_by:
          type:
          - string
          - 'null'
          description: Order Canceled By
        cancel_reason:
          type:
          - string
          - 'null'
          description: |
            The reason _code_ for the cancelation, it is required when canceling an order.
      
            Possible codes for Payments AI orders are:
            `did-not-use`, `did-not-want`, `missing-features`, `too-expensive`, `bugs-or-problems`, `other`
      
            Possible codes for Stripe orders are:
            `customer_service`, `low_quality`, `missing_features`, `other`, `switched_service`, `too_complex`, `too_expensive`, `unused`
      
            External orders accept the same cancelation reasons as Stripe.
        cancel_description:
          type:
          - string
          - 'null'
          description: A free-text description of the cancellation reason.
        churned_at:
          type:
          - string
          - 'null'
          description: Churned At
        external_id:
          type:
          - string
          - 'null'
          description: An external ID, e.g., a payment provider's ID or an ID managed by
            the client internally
      example:
        order:
          contact_id: 9
          live_mode: true
          shipping_address_first_name: Brooks
          shipping_address_last_name: Rau
          shipping_address_organization_name: Testing, Inc.
          shipping_address_phone_number: "+19053871234"
          shipping_address_street_one: 66557 Leuschke Falls
          shipping_address_street_two: Apt. 894
          shipping_address_city: Lake Trudiechester
          shipping_address_region: WA
          shipping_address_country: US
          shipping_address_postal_code: '94104'
          billing_address_street_one: 3244 Isaias Stravenue
          billing_address_street_two: Suite 507
          billing_address_city: Ryantown
          billing_address_region: WA
          billing_address_country: US
          billing_address_postal_code: '15876'
          notes: Et accusamus aspernatur ut.
          billing_status: pending
          service_status: pending
          order_type: one-time-order
          next_charge_at:
          activated_at:
          canceled_at:
          canceled_by:
          cancel_reason:
          cancel_description:
          churned_at:
          external_id:
    OrderParametersUpdate:
      type: object
      title: Orders
      description: Orders
      required: []
      properties:
        notes:
          type:
          - string
          - 'null'
          description: Your internal note about the order. This will be visible in ClickFunnels
            admin orders-related sections.
      example:
        order:
          notes: Et accusamus aspernatur ut.


    OrdersAppliedTagAttributes:
      type: object
      title: Orders Applied Tags
      description: Orders Applied Tags
      required:
      - id
      - order_id
      - tag_id
      properties:
        id:
          type: integer
          description: Applied Tag ID
        public_id:
          type:
          - string
          - 'null'
          description: Applied Tag public ID
        order_id:
          type: integer
          description: Order ID
        tag_id:
          type: integer
          description: Tag ID
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Date added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Last updated
      example:
        id: 1
        public_id: IchoGa
        order_id: 3
        tag_id: 4
        created_at: '2025-06-21T12:18:53.706Z'
        updated_at: '2025-06-21T12:18:53.706Z'
    OrdersAppliedTagParameters:
      type: object
      title: Orders Applied Tags
      description: Orders Applied Tags
      required:
      - tag_id
      properties:
        tag_id:
          type: integer
          description: Tag ID
      example:
        orders_applied_tag:
          tag_id: 4
    OrdersAppliedTagParametersUpdate:
      type: object
      title: Orders Applied Tags
      description: Orders Applied Tags
      required:
      - tag_id
      properties:
        tag_id:
          type: integer
          description: Tag ID
      example:
        orders_applied_tag:
          tag_id: 4


    OrdersInvoiceAttributes:
      type: object
      title: Invoices
      description: Invoices
      required:
      - id
      - order_id
      - status
      - invoice_number
      - external_id
      - order
      properties:
        id:
          type: integer
          description: Invoice ID
        public_id:
          type:
          - string
          - 'null'
          description: Invoice public ID
        order_id:
          type: integer
          description: Order ID
        status:
          type: string
          description: |
            The billing status reflects the status of the invoice's payment.
            Billing status can be one of the following for Payments AI orders: `draft`, `paid`, `unpaid`, `partially-refunded`, `refunded`, `voided`, `disputed`, `past-due`.
      
            External invoice statuses of external one-time orders can be one of the following: `unpaid`, `paid`, `voided` and `refunded`, `disputed`, `past-due`.
            A change in status will update the `billing_status` of the parent order. If the status of a one-time order is changed to `paid`, the order's `service_status` will also be flipped to `completed`.
        due_amount:
          type:
          - string
          - 'null'
          description: Due Amount
        total_amount:
          type:
          - string
          - 'null'
          description: Total Amt
        subtotal_amount:
          type:
          - string
          - 'null'
          description: Subtotal Amount
        tax_amount:
          type:
          - string
          - 'null'
          description: Tax Amount
        shipping_amount:
          type:
          - string
          - 'null'
          description: Invoiced shipping amount. Cannot be negative.
        discount_amount:
          type:
          - string
          - 'null'
          description: Discount Amount
        currency:
          type:
          - string
          - 'null'
          description: Currency
        issued_at:
          type:
          - string
          - 'null'
          format: date-time
          description: 'The date the invoice was issued.
      
            '
        due_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date the invoice is due.
        paid_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date the invoice was paid.
        invoice_type:
          type:
          - string
          - 'null'
          enum:
          - initial
          - renewal
          - interim
          - cancellation
          - one_time
          - refund
          - charge
          - one_time_sale
          description: Invoice Type
        invoice_number:
          type: string
          description: The number of the invoice. Usually, this is a sequential number in
            a certain format to be used for bookkeeping purposes.
        fulfillment_status:
          type:
          - string
          - 'null'
          description: |
            The fulfillment status of the invoice.
            This can be one of:
             - `not_applicable` - the invoice is not eligible for fulfillment
             - `unfulfilled` - the entire invoice needs to be fulfilled
             - `partial` - some items have been fulfilled, but some are pending or restocked
             - `complete` - all items are fulfilled
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
        external_id:
          type: string
          description: External ID
        payment_processor:
          type:
          - string
          - 'null'
          description: The payment processor of the invoice's order. Currently, it can be
            one of `payments_ai` and `external`.
        eligible_for_fulfillment:
          type:
          - boolean
          - 'null'
          description: Invoice has been paid so is eligible for fulfillment (does not indicate
            if the invoice has any fulfillable items)
        line_items:
          type:
          - array
          - 'null'
          items:
            "$ref": "#/components/schemas/OrdersInvoicesLineItemAttributes"
          description: Invoice Line Items
        order:
          type: object
          title: Orders
          description: Orders
          required:
          - id
          - origination_channel_id
          - contact
          properties:
            id:
              type: integer
              description: ClickFunnels Order ID
            public_id:
              type:
              - string
              - 'null'
              description: ClickFunnels Order public ID
            order_number:
              type:
              - string
              - 'null'
              description: A sequential number for bookkeeping purposes increased by 1 for
                each new order in a workspace starting from \#1001.
            total_amount:
              type:
              - string
              - 'null'
              description: The total amount of the order, considering taxes and discounts.
                For external orders, it's the sum of all line items' price amounts times
                their quantities.
            origination_channel_id:
              type: integer
              description: Origination Channel ID
            origination_channel_type:
              type:
              - string
              - 'null'
              description: Origination Channel Type
            notes:
              type:
              - string
              - 'null'
              description: Your internal note about the order. This will be visible in ClickFunnels
                admin orders-related sections.
            live_mode:
              type:
              - boolean
              - 'null'
              description: 'Indicates if the Order will use a live payment gateway and process
                real credit cards, or if it will use a test gateway and only process test
                cards.
      
                '
            in_trial:
              type:
              - boolean
              - 'null'
              description: In Trial
            billing_status:
              type:
              - string
              - 'null'
              description: |
                The billing status reflects the status of the invoice of an order.
                Billing status can be one of the following for Payments AI and Stripe orders:
                `pending`, `draft`, `paid`, `unpaid`, `partially-refunded`, `refunded`, `voided`, `disputed`, `past-due`.
      
                For external orders, the billing status can be one of: `pending`, `paid`, `unpaid`, `voided` and `refunded`.
            service_status:
              type:
              - string
              - 'null'
              description: |
                The service status reflects the activity state of the order. For subscriptions, it can control whether a subscription is ongoing, for example despite an irregular (unpaid) invoice status.
      
                For orders with Payments AI as the payment processor, it can be one of the following:
                `pending`, `active`, `completed`, `churned`, `canceled`, `suspended`, `paused`, `abandoned`, `voided`
                Stripe orders have the same order statuses, except for `voided`. For voided invoices, its service status becomes `abandoned`.
                You can read about the state transitions in more detail in our [orders overview guide](https://developers.myclickfunnels.com/docs/orders).
      
                For external one-time orders possible service statuses are `pending` or `completed`. For external subscription orders possible statuses are `pending`, `active`, `churned`, `canceled`, `completed`, `paused`.
            order_type:
              type:
              - string
              - 'null'
              description: Order Type
            next_charge_at:
              type:
              - string
              - 'null'
              description: Next Charge At
            trial_end_at:
              type:
              - string
              - 'null'
              description: Trial End At
            tag_ids:
              type:
              - array
              - 'null'
              minContains: 0
              contains:
                type: integer
              description: Order Tags
            activated_at:
              type:
              - string
              - 'null'
              description: Date Activated
            canceled_at:
              type:
              - string
              - 'null'
              description: Order Canceled At
            canceled_by:
              type:
              - string
              - 'null'
              description: Order Canceled By
            cancel_reason:
              type:
              - string
              - 'null'
              description: |
                The reason _code_ for the cancelation, it is required when canceling an order.
      
                Possible codes for Payments AI orders are:
                `did-not-use`, `did-not-want`, `missing-features`, `too-expensive`, `bugs-or-problems`, `other`
      
                Possible codes for Stripe orders are:
                `customer_service`, `low_quality`, `missing_features`, `other`, `switched_service`, `too_complex`, `too_expensive`, `unused`
      
                External orders accept the same cancelation reasons as Stripe.
            cancel_description:
              type:
              - string
              - 'null'
              description: A free-text description of the cancellation reason.
            churned_at:
              type:
              - string
              - 'null'
              description: Churned At
            shipping_address_first_name:
              type:
              - string
              - 'null'
              description: 'The first name of the recipient''s shipping address.
      
                '
            shipping_address_last_name:
              type:
              - string
              - 'null'
              description: 'The last name of the recipient''s shipping address.
      
                '
            shipping_address_organization_name:
              type:
              - string
              - 'null'
              description: 'The organization name of the recipient''s shipping address.
      
                '
            shipping_address_phone_number:
              type:
              - string
              - 'null'
              description: 'The phone number of the recipient''s shipping address.
      
                '
            shipping_address_street_one:
              type:
              - string
              - 'null'
              description: The main street information of the shipping address, including
                the street name and number.
            shipping_address_street_two:
              type:
              - string
              - 'null'
              description: Additional street information for the shipping address, like
                entrance information and apartment numbers.
            shipping_address_city:
              type:
              - string
              - 'null'
              description: The city of the shipping address.
            shipping_address_region:
              type:
              - string
              - 'null'
              description: The region of the shipping address, like state or province.
            shipping_address_country:
              type:
              - string
              - 'null'
              description: 'The country of the shipping address.
      
                '
            shipping_address_postal_code:
              type:
              - string
              - 'null'
              description: Postal Code
            billing_address_street_one:
              type:
              - string
              - 'null'
              description: 'The main street information of the billing address, including
                the street name and number.
      
                '
            billing_address_street_two:
              type:
              - string
              - 'null'
              description: 'Additional street information of the billing address, like entrance
                information and apartment numbers.
      
                '
            billing_address_city:
              type:
              - string
              - 'null'
              description: 'The city of the billing address.
      
                '
            billing_address_region:
              type:
              - string
              - 'null'
              description: 'The region of the shipping address, like state or province.
      
                '
            billing_address_country:
              type:
              - string
              - 'null'
              description: 'The billing address country.
      
                '
            billing_address_postal_code:
              type:
              - string
              - 'null'
              description: 'Billing address postal (ZIP) code.
      
                '
            origination_channel_name:
              type:
              - string
              - 'null'
              description: Origination Channel Name
            contact:
              type: object
              allOf:
              - "$ref": "#/components/schemas/ContactAttributes"
              description: Customer
            affiliate:
              type:
              - object
              - 'null'
              title: Affiliate
              description: The affiliate who will receive a commission for the order
              required:
              - name
              properties:
                name:
                  type: string
                  description: The name of the affiliate. Can be a combination of first
                    name, last name and the affiliate email.
                email:
                  type:
                  - string
                  - 'null'
                  description: The email address of the affiliate.
            referral_code:
              type:
              - object
              - 'null'
              title: Referral Code
              description: The referral code used to associate an order with an affiliate.
              required:
              - code
              properties:
                code:
                  type: string
                  description: The referral code value visible by users. It must be unique
                    and can contain only letters, numbers, hyphens, and underscores.
                default:
                  type:
                  - boolean
                  - 'null'
                  description: Whether this code is the default code for the affiliate.
            order_page:
              type:
              - object
              - 'null'
              title: Page
              description: Page
              required:
              - id
              - name
              properties:
                id:
                  type: integer
                  description: Page ID
                public_id:
                  type:
                  - string
                  - 'null'
                  description: Page Public ID
                name:
                  type: string
                  description: Page name of the editable page element. Want to filter by
                    it? See our <i><u><a href="https://developers.myclickfunnels.com/docs/filtering-by-page"
                    target="_blank">help guide on that topic</a><u><i>.
        visits:
          type:
          - object
          - 'null'
          allOf:
          - "$ref": "#/components/schemas/ResourceAttributes"
          description: 'Translation missing: en.orders/invoices.fields.visits.api_description'
      example:
        id: 2
        public_id: JEaIyV
        order_id: 4
        status: paid
        due_amount: '0.00'
        total_amount: '9.99'
        subtotal_amount: '9.99'
        tax_amount: '9.99'
        shipping_amount: '9.99'
        discount_amount: '9.99'
        currency: USD
        issued_at: '2025-05-21T12:18:53.000Z'
        due_at: '2025-06-28T12:18:53.000Z'
        paid_at: '2025-06-14T12:18:53.000Z'
        invoice_type:
        invoice_number: '99'
        fulfillment_status: not_applicable
        created_at: '2025-05-21T12:18:53.896Z'
        updated_at: '2025-05-21T12:18:53.896Z'
        external_id:
        payment_processor: payments_ai
        eligible_for_fulfillment: true
        line_items:
        - id: 3
          public_id: tjKYkp
          invoice_id: 2
          external_id: Example External ID
          payment_type: one_time
          description: Example Description
          quantity: 1
          fulfillment_status: unfulfilled
          external_product_id: Example External Product ID
          discount_amount: '9.99'
          state_tax_amount: '3.33'
          county_tax_amount: '3.33'
          city_tax_amount: '2.22'
          district_tax_amount: '1.11'
          state_tax_rate: '0.3'
          county_tax_rate: '0.3'
          city_tax_rate: '0.2'
          district_tax_rate: '0.1'
          country_tax_jurisdiction: Example Country Tax Jurisdiction
          state_tax_jurisdiction: Example State Tax Jurisdiction
          county_tax_jurisdiction: Example County Tax Jurisdiction
          city_tax_jurisdiction: Example City Tax Jurisdiction
          period_start_at:
          period_end_at:
          period_number:
          created_at:
          updated_at:
          amount: '9.99'
          products_price:
            id: 7
            public_id: OsWbZY
            amount: '100.00'
            currency: USD
            duration:
            interval:
            interval_count:
          products_variant:
            id: 7
            public_id: spNvMo
            product_id: 11
            name: Incredible Marble Hat variant 8cba
            description: Ad magni voluptatibus ut.
            sku: zndxDLUByHu8T3iE
            fulfillment_required: false
        order:
          id: 4
          public_id: WVpdis
          order_number: '126773'
          total_amount: '123.00'
          origination_channel_id: 5
          origination_channel_type: User
          notes: Cupiditate qui rerum inventore.
          live_mode: true
          in_trial: false
          billing_status: pending
          service_status: pending
          order_type: one-time-order
          next_charge_at:
          trial_end_at:
          tag_ids:
          - 5
          activated_at:
          canceled_at:
          canceled_by:
          cancel_reason:
          cancel_description:
          churned_at:
          shipping_address_first_name: Ashely
          shipping_address_last_name: Schmeler
          shipping_address_organization_name: Testing, Inc.
          shipping_address_phone_number: "+19053871234"
          shipping_address_street_one: 5999 Bechtelar Estate
          shipping_address_street_two: Apt. 613
          shipping_address_city: Erdmanfurt
          shipping_address_region: WA
          shipping_address_country: US
          shipping_address_postal_code: 31315-8064
          billing_address_street_one: 328 Klein Haven
          billing_address_street_two: Apt. 253
          billing_address_city: Port Buddymouth
          billing_address_region: WA
          billing_address_country: US
          billing_address_postal_code: '97571'
          origination_channel_name: ''
          contact:
            id: 11
            public_id: Jsirfb
            workspace_id: 42000
            anonymous:
            email_address: test-54d52bc9472b689360c5@example.com
            first_name: Marcelina
            last_name: Powlowski
            phone_number: 930.357.1865 x1712
            time_zone: Pacific Time (US & Canada)
            uuid: 159c117e-428b-4dde-b8fe-f0be22e1eb60
            unsubscribed_at:
            last_notification_email_sent_at:
            fb_url: https://www.facebook.com/example
            twitter_url: https://twitter.com/example
            instagram_url:
            linkedin_url: https://www.linkedin.com/in/example
            website_url: https://example.com
            created_at: '2025-05-21T12:18:53.730Z'
            updated_at: '2025-05-21T12:18:53.730Z'
            tags:
            - id: 13
              public_id: SzJxyF
              name: Example Tag
              color: "#284e55"
              applied_at:
            custom_attributes:
              CustomKey: MyText
            visits:
              first_visit:
              last_visit:
              last_visit_with_utm:
          affiliate:
            name: Josh Fancy
            email: test-02a9765c08a48e8c58bc@example.com
          referral_code:
            code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
            default: true
          order_page:
            id: 5
            public_id: gHRFjI
            name: Great Page
        visits:
          first_visit:
          last_visit:
          last_visit_with_utm:
    OrdersInvoiceParameters:
      type: object
      title: Invoices
      description: Invoices
      required:
      - status
      - invoice_number
      - external_id
      properties:
        status:
          type: string
          description: |
            The billing status reflects the status of the invoice's payment.
            Billing status can be one of the following for Payments AI orders: `draft`, `paid`, `unpaid`, `partially-refunded`, `refunded`, `voided`, `disputed`, `past-due`.
      
            External invoice statuses of external one-time orders can be one of the following: `unpaid`, `paid`, `voided` and `refunded`, `disputed`, `past-due`.
            A change in status will update the `billing_status` of the parent order. If the status of a one-time order is changed to `paid`, the order's `service_status` will also be flipped to `completed`.
        shipping_amount:
          type:
          - string
          - 'null'
          description: Invoiced shipping amount. Cannot be negative.
        issued_at:
          type:
          - string
          - 'null'
          format: date-time
          description: 'The date the invoice was issued.
      
            '
        due_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date the invoice is due.
        paid_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date the invoice was paid.
        invoice_number:
          type: string
          description: The number of the invoice. Usually, this is a sequential number in
            a certain format to be used for bookkeeping purposes.
        external_id:
          type: string
          description: External ID
      example:
        orders_invoice:
          status: paid
          shipping_amount: '9.99'
          issued_at: '2025-05-21T12:18:53.000Z'
          due_at: '2025-06-28T12:18:53.000Z'
          paid_at: '2025-06-14T12:18:53.000Z'
          invoice_number: '99'
          external_id:
    OrdersInvoiceParametersUpdate:
      type: object
      title: Invoices
      description: Invoices
      required:
      - status
      - invoice_number
      - external_id
      properties:
        status:
          type: string
          description: |
            The billing status reflects the status of the invoice's payment.
            Billing status can be one of the following for Payments AI orders: `draft`, `paid`, `unpaid`, `partially-refunded`, `refunded`, `voided`, `disputed`, `past-due`.
      
            External invoice statuses of external one-time orders can be one of the following: `unpaid`, `paid`, `voided` and `refunded`, `disputed`, `past-due`.
            A change in status will update the `billing_status` of the parent order. If the status of a one-time order is changed to `paid`, the order's `service_status` will also be flipped to `completed`.
        shipping_amount:
          type:
          - string
          - 'null'
          description: Invoiced shipping amount. Cannot be negative.
        issued_at:
          type:
          - string
          - 'null'
          format: date-time
          description: 'The date the invoice was issued.
      
            '
        due_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date the invoice is due.
        paid_at:
          type:
          - string
          - 'null'
          format: date-time
          description: The date the invoice was paid.
        invoice_number:
          type: string
          description: The number of the invoice. Usually, this is a sequential number in
            a certain format to be used for bookkeeping purposes.
        external_id:
          type: string
          description: External ID
      example:
        orders_invoice:
          status: paid
          shipping_amount: '9.99'
          issued_at: '2025-05-21T12:18:53.000Z'
          due_at: '2025-06-28T12:18:53.000Z'
          paid_at: '2025-06-14T12:18:53.000Z'
          invoice_number: '99'
          external_id:

    OrdersInvoicesLineItemAttributes:
      type: object
      title: Line items
      description: Line items
      required:
      - id
      - invoice_id
      - external_id
      properties:
        id:
          type: integer
          description: Line item ID
        public_id:
          type:
          - string
          - 'null'
          description: ClickFunnels line item public ID
        invoice_id:
          type: integer
          description: Invoice ID
        external_id:
          type: string
          description: External
        payment_type:
          type:
          - string
          - 'null'
          description: Payment Type
        description:
          type:
          - string
          - 'null'
          description: Description
        quantity:
          type:
          - integer
          - 'null'
          description: Quantity
        fulfillment_status:
          type:
          - string
          - 'null'
          enum:
          - unfulfilled
          - partially_fulfilled
          - complete
          - ignored
          description: |
            Represents the current fulfillment status of the line item.
            This can be one of the following:
             - `unfulfilled` - the line item has not been fully fulfilled (fulfilled quantity is 0)
             - `partially_fulfilled` - the line item is partially fulfilled (fulfilled quantity is less than line item quantity)
             - `complete` - the line item is completely fulfilled (fulfilled quantity is equal to line item quantity)
             - `ignored` - the line item is marked as ignored for fulfillment
        external_product_id:
          type:
          - string
          - 'null'
          description: External Product
        discount_amount:
          type:
          - number
          - 'null'
          description: Discount Amount
        state_tax_amount:
          type:
          - number
          - 'null'
          description: State Tax Amount
        county_tax_amount:
          type:
          - number
          - 'null'
          description: County Tax Amount
        city_tax_amount:
          type:
          - number
          - 'null'
          description: City Tax Amount
        district_tax_amount:
          type:
          - number
          - 'null'
          description: District Tax Amount
        state_tax_rate:
          type:
          - number
          - 'null'
          description: State Tax Rate
        county_tax_rate:
          type:
          - number
          - 'null'
          description: County Tax Rate
        city_tax_rate:
          type:
          - number
          - 'null'
          description: City Tax Rate
        district_tax_rate:
          type:
          - number
          - 'null'
          description: District Tax Rate
        country_tax_jurisdiction:
          type:
          - string
          - 'null'
          description: Country Tax Jurisdiction
        state_tax_jurisdiction:
          type:
          - string
          - 'null'
          description: State Tax Jurisdiction
        county_tax_jurisdiction:
          type:
          - string
          - 'null'
          description: County Tax Jurisdiction
        city_tax_jurisdiction:
          type:
          - string
          - 'null'
          description: City Tax Jurisdiction
        period_start_at:
          type:
          - string
          - 'null'
          description: Period Start At
        period_end_at:
          type:
          - string
          - 'null'
          description: Period End At
        period_number:
          type:
          - string
          - 'null'
          description: Period Number
        created_at:
          type:
          - string
          - 'null'
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          description: Updated
        amount:
          type:
          - string
          - 'null'
          description: Amount
        products_price:
          type:
          - object
          - 'null'
          title: Product Price
          description: Product Price
          required:
          - id
          - amount
          - currency
          - duration
          - interval
          - interval_count
          properties:
            id:
              type: integer
              description: ID
            public_id:
              type:
              - string
              - 'null'
              description: Price public ID
            amount:
              type: string
              description: Amount
            currency:
              type: string
              description: Currency
            duration:
              type: string
              description: Duration
            interval:
              type: string
              description: Interval
            interval_count:
              type: string
              description: Interval count
        products_variant:
          type:
          - object
          - 'null'
          title: Product Variant
          description: Product Variant
          required:
          - id
          - product_id
          - name
          properties:
            id:
              type: integer
              description: ID
            public_id:
              type:
              - string
              - 'null'
              description: Variant public ID
            product_id:
              type: integer
              description: Product ID
            name:
              type: string
              description: Name
            description:
              type:
              - string
              - 'null'
              description: The description of the variant. The description of the **default
                variant** is the user-facing description of the `Product`.
            sku:
              type:
              - string
              - 'null'
              description: SKU
            fulfillment_required:
              type:
              - boolean
              - 'null'
              description: Fulfillment required
      example:
        id: 5
        public_id: dqNfEw
        invoice_id: 3
        external_id: Example External ID
        payment_type: one_time
        description: Example Description
        quantity: 1
        fulfillment_status: unfulfilled
        external_product_id: Example External Product ID
        discount_amount: '9.99'
        state_tax_amount: '3.33'
        county_tax_amount: '3.33'
        city_tax_amount: '2.22'
        district_tax_amount: '1.11'
        state_tax_rate: '0.3'
        county_tax_rate: '0.3'
        city_tax_rate: '0.2'
        district_tax_rate: '0.1'
        country_tax_jurisdiction: Example Country Tax Jurisdiction
        state_tax_jurisdiction: Example State Tax Jurisdiction
        county_tax_jurisdiction: Example County Tax Jurisdiction
        city_tax_jurisdiction: Example City Tax Jurisdiction
        period_start_at:
        period_end_at:
        period_number:
        created_at:
        updated_at:
        amount: '9.99'
        products_price:
          id: 10
          public_id: reIcJM
          amount: '100.00'
          currency: USD
          duration:
          interval:
          interval_count:
        products_variant:
          id: 10
          public_id: qhYJZr
          product_id: 15
          name: Synergistic Cotton Shirt variant 0e70
          description: Vel distinctio dicta expedita.
          sku: NgI2Ewi1FXQG1jMs
          fulfillment_required: false

    OrdersTransactionAttributes:
      type: object
      title: Payments
      description: Payments
      required:
      - id
      - order_id
      - status
      - external_id
      - result
      properties:
        id:
          type: integer
          description: Transaction ID
        public_id:
          type:
          - string
          - 'null'
          description: Transaction public ID
        order_id:
          type: integer
          description: Order ID
        status:
          type: string
          description: Status
        external_type:
          type:
          - string
          - 'null'
          description: Type
        external_id:
          type: string
          description: External ID
        amount:
          type:
          - string
          - 'null'
          description: Amount
        currency:
          type:
          - string
          - 'null'
          description: Currency
        reason:
          type:
          - string
          - 'null'
          description: Reason
        adjusted_transaction_id:
          type:
          - string
          - 'null'
          description: Adjusted transaction
        result:
          type: string
          description: Result
        billing_payment_instruction_id:
          type:
          - string
          - 'null'
          description: Billing Payment Instruction ID
        billing_payment_instruction_type:
          type:
          - string
          - 'null'
          description: Billing Payment Instruction Type
        arn:
          type:
          - string
          - 'null'
          description: Arn
        is_rebill:
          type:
          - boolean
          - 'null'
          description: Is Rebill
        rebill_number:
          type:
          - string
          - 'null'
          description: Rebill Number
        created_at:
          type:
          - string
          - 'null'
          description: Created
        updated_at:
          type:
          - string
          - 'null'
          description: Updated
        visits:
          type:
          - object
          - 'null'
          allOf:
          - "$ref": "#/components/schemas/ResourceAttributes"
          description: 'Translation missing: en.orders/transactions.fields.visits.api_description'
      example:
        id: 1
        public_id: hnkorz
        order_id: 6
        status: completed
        external_type: sale
        external_id: c795ff0f531f70b1679bdee5c3ab65c0
        amount: '100.00'
        currency: USD
        reason:
        adjusted_transaction_id:
        result: approved
        billing_payment_instruction_id:
        billing_payment_instruction_type:
        arn:
        is_rebill: false
        rebill_number:
        created_at:
        updated_at:
        visits:
          first_visit:
          last_visit:
          last_visit_with_utm:

    OrdersTagAttributes:
      type: object
      title: Order Tags
      description: Order Tags
      required:
      - id
      - workspace_id
      - name
      - color
      properties:
        id:
          type: integer
          description: Tag ID
        public_id:
          type:
          - string
          - 'null'
          description: Tag public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Name
        color:
          type: string
          description: Color
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 8
        public_id: bwzfrl
        workspace_id: 42000
        name: Example Tag
        color: "#e2a46e"
        created_at: '2025-06-21T12:18:54.328Z'
        updated_at: '2025-06-21T12:18:54.328Z'
    OrdersTagParameters:
      type: object
      title: Order Tags
      description: Order Tags
      required:
      - name
      properties:
        name:
          type: string
          description: Name
        color:
          type: string
          description: Tag Color
      example:
        orders_tag:
          name: Example Tag
          color: "#FF5733"
    OrdersTagParametersUpdate:
      type: object
      title: Order Tags
      description: Order Tags
      required: []
      properties:
        name:
          type: string
          description: Tag Name
        color:
          type: string
          description: Tag Color
      example:
        orders_tag:
          name: renamed-tag
          color: "#FF5733"

    OrdersLineItemAttributes:
      type: object
      title: Line items
      description: Line items
      required:
      - id
      - order_id
      - original_product
      - products_price
      properties:
        id:
          type: integer
          description: Line item ID
        public_id:
          type:
          - string
          - 'null'
          description: Line item public ID
        order_id:
          type: integer
          description: Order ID
        quantity:
          type:
          - integer
          - 'null'
          description: Quantity
        prorated:
          type:
          - string
          - 'null'
          description: Prorate invoice
        created_at:
          type:
          - string
          - 'null'
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          description: Updated
        original_product:
          type: object
          title: Product
          description: Product
          required:
          - id
          - name
          properties:
            id:
              type: integer
              description: ID
            name:
              type: string
              description: Product name
        products_price:
          type: object
          title: Product Price
          description: Product Price
          required:
          - id
          - amount
          - currency
          - duration
          - interval
          - interval_count
          properties:
            id:
              type: integer
              description: ID
            amount:
              type: string
              description: Amount
            currency:
              type: string
              description: Currency
            duration:
              type: string
              description: Duration
            interval:
              type: string
              description: Interval
            interval_count:
              type: string
              description: Interval count
        products_variant:
          type:
          - object
          - 'null'
          title: Product Variant
          description: Product Variant
          required:
          - id
          - name
          properties:
            id:
              type: integer
              description: ID
            name:
              type: string
              description: Name
            description:
              type:
              - string
              - 'null'
              description: The description of the variant. The description of the **default
                variant** is the user-facing description of the `Product`.
            sku:
              type:
              - string
              - 'null'
              description: SKU
      example:
        id: 8
        public_id: jlCXZK
        order_id: 7
        quantity: 1
        prorated:
        created_at:
        updated_at:
        original_product:
          id: 20
          name: Incredible Leather Shirt 97edb3
        products_price:
          id: 13
          amount: '100.00'
          currency: USD
          duration:
          interval:
          interval_count:
        products_variant:
          id: 13
          name: Awesome Cotton Bottle variant 1665
          description: Aut enim et exercitationem.
          sku: hrMXbTyopxDoehgY


    PageAttributes:
      type: object
      title: Pages
      description: Pages
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Page ID
        public_id:
          type:
          - string
          - 'null'
          description: Page Public ID
        workspace_id:
          type: integer
          description: Workspace ID that the page belongs to.
        name:
          type: string
          description: Page name of the editable page element. Want to filter by it? See
            our <i><u><a href="https://developers.myclickfunnels.com/docs/filtering-by-page"
            target="_blank">help guide on that topic</a><u><i>.
        theme_id:
          type:
          - string
          - 'null'
          description: Theme
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
      example:
        id: 9
        public_id: tIabpo
        workspace_id: 42000
        name: Great Page
        theme_id:
        created_at: '2025-05-21T12:18:54.551Z'
        updated_at: '2025-05-21T12:18:54.551Z'
    PageParameters:
      type: object
      title: Pages
      description: Pages
      required:
      - name
      properties:
        name:
          type: string
          description: Page name of the editable page element. Want to filter by it? See
            our <i><u><a href="https://developers.myclickfunnels.com/docs/filtering-by-page"
            target="_blank">help guide on that topic</a><u><i>.
      example:
        page:
          name: Great Page
    PageParametersUpdate:
      type: object
      title: Pages
      description: Pages
      required: []
      properties:
        name:
          type: string
          description: Page name of the editable page element.
      example:
        page:
          name: Example Page


    ProductAttributes:
      type: object
      title: Products
      description: Products
      required:
      - id
      - workspace_id
      - name
      - default_variant_id
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Product Public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Product name
        current_path:
          type:
          - string
          - 'null'
          description: Current Path
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
        visible_in_store:
          type:
          - boolean
          - 'null'
          description: Visible in Store
        visible_in_customer_center:
          type:
          - boolean
          - 'null'
          description: Visible in Customer Center
        image_id:
          type:
          - string
          - 'null'
          description: Image
        seo_title:
          type:
          - string
          - 'null'
          description: A clear title without branding or mentioning the domain itself. Longer
            is better, but max is 60 characters.
        seo_description:
          type:
          - string
          - 'null'
          description: A clear SEO description, at least two sentences long. Longer is better,
            but max is 160 characters. You will find the actual user-facing description
            on the **default variant of the product** (see the `Products::Variant` resource).
        seo_image_id:
          type:
          - string
          - 'null'
          description: SEO image
        commissionable:
          type:
          - boolean
          - 'null'
          description: Commissionable
        image_ids:
          type:
          - array
          - 'null'
          description: Images
        default_variant_id:
          type: integer
          description: The ID of the default variant of the product
        variant_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: integer
          description: Variant IDs
        price_ids:
          type:
          - array
          - 'null'
          description: Price IDs
        tag_ids:
          type:
          - array
          - 'null'
          description: Any valid array, empty or with valid tags will overwrite existing
            values. To avoid losing existing tags first use the Fetch Product endpoint,
            then be sure to include the existing tags in your payload along with any new
            addition(s)
        redirect_funnel_id:
          type:
          - string
          - 'null'
          description: Redirect funnel
        cancellation_funnel_url:
          type:
          - string
          - 'null'
          description: Cancellation Funnel Url
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
        variant_properties:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Product Properties
            description: Properties
            required:
            - id
            - name
            properties:
              id:
                type: integer
                description: ID
              name:
                type: string
                description: Name
          description: Properties that are specific to the default variant of a product
      example:
        id: 22
        public_id: BUglIe
        workspace_id: 42000
        name: Intelligent Paper Table 16d24c
        current_path:
        archived: false
        visible_in_store: true
        visible_in_customer_center: true
        image_id:
        seo_title: Non et commodi molestiae.
        seo_description: Sed et consequuntur debitis.
        seo_image_id:
        commissionable: true
        image_ids: []
        default_variant_id: 22
        variant_ids:
        - 22
        price_ids: []
        tag_ids: []
        redirect_funnel_id:
        cancellation_funnel_url:
        created_at: '2025-06-21T12:18:54.573Z'
        updated_at: '2025-06-21T12:18:54.573Z'
        variant_properties:
        - id: 22
          name: Color
    ProductParameters:
      type: object
      title: Products
      description: Products
      required:
      - name
      properties:
        name:
          type: string
          description: Product name
        current_path:
          type:
          - string
          - 'null'
          description: Current Path
        visible_in_store:
          type:
          - boolean
          - 'null'
          description: Visible in Store
        visible_in_customer_center:
          type:
          - boolean
          - 'null'
          description: Visible in Customer Center
        seo_title:
          type:
          - string
          - 'null'
          description: A clear title without branding or mentioning the domain itself. Longer
            is better, but max is 60 characters.
        seo_description:
          type:
          - string
          - 'null'
          description: A clear SEO description, at least two sentences long. Longer is better,
            but max is 160 characters. You will find the actual user-facing description
            on the **default variant of the product** (see the `Products::Variant` resource).
        seo_image_id:
          type:
          - string
          - 'null'
          description: SEO image
        commissionable:
          type:
          - boolean
          - 'null'
          description: Commissionable
        image_ids:
          type:
          - array
          - 'null'
          description: Images
        redirect_funnel_id:
          type:
          - string
          - 'null'
          description: Redirect funnel
        cancellation_funnel_url:
          type:
          - string
          - 'null'
          description: Cancellation Funnel Url
        tag_ids:
          type: array
          items:
            type: integer
          description: Any valid array, empty or with valid tag ids will overwrite existing
            values. To avoid losing existing tags first use the Fetch Product endpoint,
            then be sure to include the existing tags in your payload along with any new
            addition(s)
        variant_properties:
          type: array
          description: The properties of the product's variants. e.g. 'Size', 'Color' etc.
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the property, if updating the property
              name:
                type: string
                description: The name of the property
      example:
        product:
          name: Intelligent Paper Table 16d24c
          current_path:
          visible_in_store: true
          visible_in_customer_center: true
          seo_title: Non et commodi molestiae.
          seo_description: Sed et consequuntur debitis.
          seo_image_id:
          commissionable: true
          image_ids: []
          redirect_funnel_id:
          cancellation_funnel_url:
          tag_ids:
          - 1
          - 2
          - 3
          variant_properties:
          - id: 1
            name: Size
          - id: 2
            name: Color
    ProductParametersUpdate:
      type: object
      title: Products
      description: Products
      required: []
      properties:
        name:
          type: string
          description: Product name
        current_path:
          type:
          - string
          - 'null'
          description: Current Path
        visible_in_store:
          type:
          - boolean
          - 'null'
          description: Visible in Store
        visible_in_customer_center:
          type:
          - boolean
          - 'null'
          description: Visible in Customer Center
        seo_title:
          type:
          - string
          - 'null'
          description: A clear title without branding or mentioning the domain itself. Longer
            is better, but max is 60 characters.
        seo_description:
          type:
          - string
          - 'null'
          description: A clear SEO description, at least two sentences long. Longer is better,
            but max is 160 characters. You will find the actual user-facing description
            on the **default variant of the product** (see the `Products::Variant` resource).
        seo_image_id:
          type:
          - string
          - 'null'
          description: SEO image
        commissionable:
          type:
          - boolean
          - 'null'
          description: Commissionable
        image_ids:
          type:
          - array
          - 'null'
          description: Images
        variant_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: integer
          description: Variant IDs
        price_ids:
          type:
          - array
          - 'null'
          description: Price IDs
        redirect_funnel_id:
          type:
          - string
          - 'null'
          description: Redirect funnel
        cancellation_funnel_url:
          type:
          - string
          - 'null'
          description: Cancellation Funnel Url
        tag_ids:
          type: array
          items:
            type: integer
          description: Any valid array, empty or with valid tag ids will overwrite existing
            values. To avoid losing existing tags first use the Fetch Product endpoint,
            then be sure to include the existing tags in your payload along with any new
            addition(s)
        variant_properties:
          type: array
          description: The properties of the product's variants. e.g. 'Size', 'Color' etc.
          items:
            type: object
            properties:
              id:
                type: integer
                description: The ID of the property, if updating the property
              name:
                type: string
                description: The name of the property
      example:
        product:
          name: Heavy Duty Steel
          current_path:
          visible_in_store: true
          visible_in_customer_center: true
          seo_title: Non et commodi molestiae.
          seo_description: Sed et consequuntur debitis.
          seo_image_id:
          commissionable: true
          image_ids: []
          variant_ids:
          - 22
          price_ids: []
          redirect_funnel_id:
          cancellation_funnel_url:
          tag_ids:
          - 1
          - 2
          - 3
          variant_properties:
          - id: 1
            name: Size
          - id: 2
            name: Color

    ProductsCollectionAttributes:
      type: object
      title: Collections
      description: Collections
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Numeric ID of the collection
        public_id:
          type:
          - string
          - 'null'
          description: Public ID is a string version of the numeric ID
        workspace_id:
          type: integer
          description: ID reference to the workspace to which the collection belongs
        name:
          type: string
          description: Name of the products collection
        description:
          type:
          - string
          - 'null'
          description: Description of the collection
        collection_type:
          type:
          - string
          - 'null'
          description: Type of the collection (manual or automatic)
        product_ids:
          type:
          - array
          - 'null'
          description: Array of product IDs in the collection. Updating with invalid or
            non-workspace product IDs will result in an error. If IDs from existing products
            in the collection are left out, they will be removed from the collection. You
            can also remove all the products from a collection by providing an empty array.
        sort_method:
          type:
          - string
          - 'null'
          enum:
          - manually
          - name_asc
          - name_desc
          - price_desc
          - price_asc
          - added_at_desc
          - added_at_asc
          - created_at_desc
          - created_at_asc
          description: Method used to sort the products in the collection
        archived:
          type:
          - boolean
          - 'null'
          description: Whether the collection is archived
        image_id:
          type:
          - string
          - 'null'
          description: Collection image
        visible_in_store:
          type:
          - boolean
          - 'null'
          description: Whether the collection is visible in the online store
        current_path:
          type:
          - string
          - 'null'
          description: Current path of the collection
        seo_title:
          type:
          - string
          - 'null'
          description: Title of the collection for SEO purposes
        seo_description:
          type:
          - string
          - 'null'
          description: Description of the collection for SEO purposes
        seo_indexable:
          type:
          - string
          - 'null'
          description: Whether the collection is indexable by search engines
        social_image_id:
          type:
          - string
          - 'null'
          description: Image for social sharing
        created_at:
          type:
          - string
          - 'null'
          description: Date and time the collection was created
        updated_at:
          type:
          - string
          - 'null'
          description: Date and time the collection was last updated
      example:
        id: 1
        public_id: BpDIJj
        workspace_id: 42000
        name: Example Collection
        description: Example Description
        collection_type: manual
        product_ids: []
        sort_method: manually
        archived: false
        image_id:
        visible_in_store: true
        current_path:
        seo_title: Example SEO Title
        seo_description: Example SEO Description
        seo_indexable:
        social_image_id:
        created_at:
        updated_at:
    ProductsCollectionParameters:
      type: object
      title: Collections
      description: Collections
      required:
      - name
      properties:
        name:
          type: string
          description: Name of the products collection
        description:
          type:
          - string
          - 'null'
          description: Description of the collection
        collection_type:
          type:
          - string
          - 'null'
          description: Type of the collection (manual or automatic)
        product_ids:
          type:
          - array
          - 'null'
          description: Array of product IDs in the collection. Updating with invalid or
            non-workspace product IDs will result in an error. If IDs from existing products
            in the collection are left out, they will be removed from the collection. You
            can also remove all the products from a collection by providing an empty array.
        sort_method:
          type:
          - string
          - 'null'
          enum:
          - manually
          - name_asc
          - name_desc
          - price_desc
          - price_asc
          - added_at_desc
          - added_at_asc
          - created_at_desc
          - created_at_asc
          description: Method used to sort the products in the collection
        image_id:
          type:
          - string
          - 'null'
          description: Collection image
        visible_in_store:
          type:
          - boolean
          - 'null'
          description: Whether the collection is visible in the online store
        seo_title:
          type:
          - string
          - 'null'
          description: Title of the collection for SEO purposes
        seo_description:
          type:
          - string
          - 'null'
          description: Description of the collection for SEO purposes
        social_image_id:
          type:
          - string
          - 'null'
          description: Image for social sharing
      example:
        products_collection:
          name: Example Collection
          description: Example Description
          collection_type: manual
          product_ids: []
          sort_method: manually
          image_id:
          visible_in_store: true
          seo_title: Example SEO Title
          seo_description: Example SEO Description
          social_image_id:
    ProductsCollectionParametersUpdate:
      type: object
      title: Collections
      description: Collections
      required: []
      properties:
        name:
          type: string
          description: Name of the products collection
        description:
          type:
          - string
          - 'null'
          description: Description of the collection
        collection_type:
          type:
          - string
          - 'null'
          description: Type of the collection (manual or automatic)
        product_ids:
          type:
          - array
          - 'null'
          description: Array of product IDs in the collection. Updating with invalid or
            non-workspace product IDs will result in an error. If IDs from existing products
            in the collection are left out, they will be removed from the collection. You
            can also remove all the products from a collection by providing an empty array.
        sort_method:
          type:
          - string
          - 'null'
          enum:
          - manually
          - name_asc
          - name_desc
          - price_desc
          - price_asc
          - added_at_desc
          - added_at_asc
          - created_at_desc
          - created_at_asc
          description: Method used to sort the products in the collection
        image_id:
          type:
          - string
          - 'null'
          description: Collection image
        visible_in_store:
          type:
          - boolean
          - 'null'
          description: Whether the collection is visible in the online store
        seo_title:
          type:
          - string
          - 'null'
          description: Title of the collection for SEO purposes
        seo_description:
          type:
          - string
          - 'null'
          description: Description of the collection for SEO purposes
        social_image_id:
          type:
          - string
          - 'null'
          description: Image for social sharing
      example:
        products_collection:
          name: Example Collection
          description: Example Description
          collection_type: manual
          product_ids: []
          sort_method: manually
          image_id:
          visible_in_store: true
          seo_title: Example SEO Title
          seo_description: Example SEO Description
          social_image_id:

    ProductsPriceAttributes:
      type: object
      title: Prices
      description: Prices
      required:
      - id
      - amount
      - currency
      - duration
      - interval
      - trial_interval
      - trial_duration
      - trial_amount
      - interval_count
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Price public ID
        variant_id:
          type:
          - integer
          - 'null'
          description: Variant
        name:
          type:
          - string
          - 'null'
          description: Name
        amount:
          type: string
          description: Amount
        cost:
          type:
          - string
          - 'null'
          description: Cost
        currency:
          type: string
          description: Currency
        duration:
          type: string
          description: Duration
        interval:
          type: string
          description: Interval
        trial_interval:
          type: string
          description: Trial interval
        trial_duration:
          type: string
          description: Trial duration
        trial_amount:
          type: string
          description: Trial Amount
        setup_amount:
          type:
          - string
          - 'null'
          description: Setup amount
        self_cancel:
          type:
          - boolean
          - 'null'
          description: Customer can cancel
        self_upgrade:
          type:
          - boolean
          - 'null'
          description: Customer can upgrade
        self_downgrade:
          type:
          - boolean
          - 'null'
          description: Customer can downgrade
        self_reactivate:
          type:
          - boolean
          - 'null'
          description: Customer can reactivate
        interval_count:
          type: string
          description: Interval count
        payment_type:
          type:
          - string
          - 'null'
          enum:
          - one_time
          - subscription
          - payment_plan
          description: Defaults to 'one_time' if left blank
        visible:
          type:
          - boolean
          - 'null'
          description: Visible
        compare_at_amount:
          type:
          - string
          - 'null'
          description: Compare at amount
        key:
          type:
          - string
          - 'null'
          description: Key
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 14
        public_id: nFiThV
        variant_id: 14
        name: Example Price
        amount: '100.00'
        cost: '0.00'
        currency: USD
        duration:
        interval:
        trial_interval:
        trial_duration:
        trial_amount: '0.00'
        setup_amount:
        self_cancel: true
        self_upgrade: true
        self_downgrade: true
        self_reactivate: true
        interval_count:
        payment_type: one_time
        visible: true
        compare_at_amount:
        key:
        archived: false
        created_at: '2025-06-21T12:18:54.642Z'
        updated_at: '2025-06-21T12:18:54.642Z'
    ProductsPriceParameters:
      type: object
      title: Prices
      description: Prices
      required:
      - amount
      - currency
      - duration
      - interval
      - trial_interval
      - trial_duration
      - trial_amount
      - interval_count
      properties:
        name:
          type:
          - string
          - 'null'
          description: Name
        amount:
          type: string
          description: Amount
        cost:
          type:
          - string
          - 'null'
          description: Cost
        currency:
          type: string
          description: Currency
        duration:
          type: string
          description: Duration
        interval:
          type: string
          description: Interval
        trial_interval:
          type: string
          description: Trial interval
        trial_duration:
          type: string
          description: Trial duration
        trial_amount:
          type: string
          description: Trial Amount
        setup_amount:
          type:
          - string
          - 'null'
          description: Setup amount
        self_cancel:
          type:
          - boolean
          - 'null'
          description: Customer can cancel
        self_upgrade:
          type:
          - boolean
          - 'null'
          description: Customer can upgrade
        self_downgrade:
          type:
          - boolean
          - 'null'
          description: Customer can downgrade
        self_reactivate:
          type:
          - boolean
          - 'null'
          description: Customer can reactivate
        interval_count:
          type: string
          description: Interval count
        payment_type:
          type:
          - string
          - 'null'
          enum:
          - one_time
          - subscription
          - payment_plan
          description: Defaults to 'one_time' if left blank
        visible:
          type:
          - boolean
          - 'null'
          description: Visible
        compare_at_amount:
          type:
          - string
          - 'null'
          description: Compare at amount
        key:
          type:
          - string
          - 'null'
          description: Key
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
      example:
        products_price:
          name: Example Price
          amount: '100.00'
          cost: '0.00'
          currency: USD
          duration:
          interval:
          trial_interval:
          trial_duration:
          trial_amount: '0.00'
          setup_amount:
          self_cancel: true
          self_upgrade: true
          self_downgrade: true
          self_reactivate: true
          interval_count:
          payment_type: one_time
          visible: true
          compare_at_amount:
          key:
          archived: false
    ProductsPriceParametersUpdate:
      type: object
      title: Prices
      description: Prices
      required: []
      properties:
        name:
          type:
          - string
          - 'null'
          description: Name
        amount:
          type: string
          description: Amount
        cost:
          type:
          - string
          - 'null'
          description: Cost
        currency:
          type: string
          description: Currency
        duration:
          type: integer
          description: Duration
          nullable: true
        interval:
          type: string
          description: Interval
          nullable: true
        trial_interval:
          type: string
          description: Trial interval
          nullable: true
        trial_duration:
          type: integer
          description: Trial duration
          nullable: true
        trial_amount:
          type: string
          description: Trial amount
          nullable: true
        setup_amount:
          type:
          - string
          - 'null'
          description: Setup amount
        self_cancel:
          type:
          - boolean
          - 'null'
          description: Customer can cancel
        self_upgrade:
          type:
          - boolean
          - 'null'
          description: Customer can upgrade
        self_downgrade:
          type:
          - boolean
          - 'null'
          description: Customer can downgrade
        self_reactivate:
          type:
          - boolean
          - 'null'
          description: Customer can reactivate
        interval_count:
          type: integer
          description: Interval count
          nullable: true
        payment_type:
          type:
          - string
          - 'null'
          enum:
          - one_time
          - subscription
          - payment_plan
          description: Defaults to 'one_time' if left blank
        visible:
          type:
          - boolean
          - 'null'
          description: Visible
        compare_at_amount:
          type:
          - string
          - 'null'
          description: Compare at amount
        key:
          type:
          - string
          - 'null'
          description: Key
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
      example:
        products_price:
          name: Example Price
          amount: '100.00'
          cost: '0.00'
          currency: USD
          duration: 1
          interval: months
          trial_interval: days
          trial_duration: 14
          trial_amount: '0.00'
          setup_amount:
          self_cancel: true
          self_upgrade: true
          self_downgrade: true
          self_reactivate: true
          interval_count: 1
          payment_type: one_time
          visible: true
          compare_at_amount:
          key:
          archived: false

    ProductsVariantAttributes:
      type: object
      title: Variants
      description: Variants
      required:
      - id
      - product_id
      - name
      - product_type
      - weight_unit
      properties:
        id:
          type: integer
          description: ID
        public_id:
          type:
          - string
          - 'null'
          description: Variant public ID
        product_id:
          type: integer
          description: Product ID
        name:
          type: string
          description: Name
        description:
          type:
          - string
          - 'null'
          description: The description of the variant. The description of the **default
            variant** is the user-facing description of the `Product`.
        sku:
          type:
          - string
          - 'null'
          description: SKU
        product_type:
          type: string
          description: Type
        properties_value_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: string
          description: Properties values
        out_of_stock_sales:
          type:
          - string
          - 'null'
          description: Out of stock sales
        weight:
          type:
          - number
          - 'null'
          description: Weight
        weight_unit:
          type: string
          description: Weight unit
        height:
          type:
          - number
          - 'null'
          description: Height
        width:
          type:
          - number
          - 'null'
          description: Width
        length:
          type:
          - number
          - 'null'
          description: Length
        dimensions_unit:
          type:
          - string
          - 'null'
          description: Dimensions unit
        quantity:
          type:
          - integer
          - 'null'
          description: Quantity
        tag_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: integer
          description: Tags
        tax_category_id:
          type:
          - string
          - 'null'
          description: Tax category ID
        asset_ids:
          type:
          - array
          - 'null'
          description: Assets
        taxable:
          type:
          - string
          - 'null'
          description: Taxable
        track_quantity:
          type:
          - boolean
          - 'null'
          description: Track Quantity
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
        visible:
          type:
          - boolean
          - 'null'
          description: Is visible
        price_ids:
          type:
          - array
          - 'null'
          description: Price IDs
        fulfillment_required:
          type:
          - boolean
          - 'null'
          description: Fulfillment required
        country_of_manufacture_id:
          type:
          - string
          - 'null'
          description: Country of manufacture
        image_ids:
          type:
          - array
          - 'null'
          description: The images for the variant.
        fulfillments_location_ids:
          type:
          - array
          - 'null'
          description: The fulfillment locations for the variant.
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
        default:
          type:
          - boolean
          - 'null'
          description: Identifies if the variant is the default variant for the product.
        properties_values:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Properties Values
            description: Properties Values
            required: []
            properties:
              property_id:
                type:
                - integer
                - 'null'
                description: The ID of the property
              value:
                type:
                - string
                - 'null'
                description: The value
          description: The property values of the Variant. e.g. 'Large', 'Red' etc.
        created_by_platform_application:
          type: object
          description: The platform application that created the variant
          properties:
            public_id:
              type: string
              description: The public ID of the platform application
            trusted_skus:
              type: array
              description: Array of third party sources for which the SKUs can be relied
                on
              items:
                type: string
      example:
        id: 15
        public_id: wQAxOB
        product_id: 24
        name: Awesome Steel Plate variant 1482
        description: Repudiandae voluptatem quam fuga.
        sku: T8NoRRVr7AhNFaKP
        product_type: physical
        properties_value_ids:
        -
        out_of_stock_sales:
        weight: '12.0'
        weight_unit: lb
        height: '95.0'
        width: '250.0'
        length: '23.0'
        dimensions_unit: inches
        quantity: 0
        tag_ids:
        - 39
        tax_category_id:
        asset_ids: []
        taxable:
        track_quantity: false
        archived: false
        visible: true
        price_ids: []
        fulfillment_required: false
        country_of_manufacture_id:
        image_ids: []
        fulfillments_location_ids: []
        created_at: '2025-06-21T12:18:54.669Z'
        updated_at: '2025-06-21T12:18:54.669Z'
        default: false
        properties_values:
        - property_id: 15
          value: Peach
        created_by_platform_application:
    ProductsVariantParameters:
      type: object
      title: Variants
      description: Variants
      required:
      - name
      - product_type
      - weight_unit
      - properties_values
      properties:
        name:
          type: string
          description: Name
        description:
          type:
          - string
          - 'null'
          description: The description of the variant. The description of the **default
            variant** is the user-facing description of the `Product`.
        sku:
          type:
          - string
          - 'null'
          description: SKU
        product_type:
          type: string
          description: Type
        out_of_stock_sales:
          type: boolean
          description: Out of stock sales
          nullable: true
        weight:
          type:
          - number
          - 'null'
          description: Weight
        weight_unit:
          type: string
          description: Weight unit
        height:
          type:
          - number
          - 'null'
          description: Height
        width:
          type:
          - number
          - 'null'
          description: Width
        length:
          type:
          - number
          - 'null'
          description: Length
        dimensions_unit:
          type:
          - string
          - 'null'
          description: Dimensions unit
        tax_category_id:
          type:
          - string
          - 'null'
          description: Tax category ID
        taxable:
          type:
          - string
          - 'null'
          description: Taxable
        track_quantity:
          type:
          - boolean
          - 'null'
          description: Track Quantity
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
        visible:
          type:
          - boolean
          - 'null'
          description: Is visible
        fulfillment_required:
          type:
          - boolean
          - 'null'
          description: Fulfillment required
        country_of_manufacture_id:
          type:
          - string
          - 'null'
          description: Country of manufacture
        image_ids:
          type:
          - array
          - 'null'
          description: The images for the variant.
        fulfillments_location_ids:
          type:
          - array
          - 'null'
          description: The fulfillment locations for the variant.
        properties_values:
          type: array
          description: The property values of the Variant. e.g. 'Large', 'Red' etc.
          items:
            type: object
            properties:
              property_id:
                type: integer
                description: The ID of the property
              value:
                type: string
                description: The value
      example:
        products_variant:
          name: Awesome Steel Plate variant 1482
          description: Repudiandae voluptatem quam fuga.
          sku: T8NoRRVr7AhNFaKP
          product_type: physical
          out_of_stock_sales: true
          weight: '12.0'
          weight_unit: lb
          height: '95.0'
          width: '250.0'
          length: '23.0'
          dimensions_unit: inches
          tax_category_id:
          taxable:
          track_quantity: false
          archived: false
          visible: true
          fulfillment_required: false
          country_of_manufacture_id:
          image_ids: []
          fulfillments_location_ids: []
    ProductsVariantParametersUpdate:
      type: object
      title: Variants
      description: Variants
      required: []
      properties:
        name:
          type: string
          description: Variant name
        description:
          type:
          - string
          - 'null'
          description: The description of the variant. The description of the **default
            variant** is the user-facing description of the `Product`.
        sku:
          type:
          - string
          - 'null'
          description: SKU
        product_type:
          type: string
          description: Product type
        out_of_stock_sales:
          type: boolean
          description: Out of stock sales
          nullable: true
        weight:
          type:
          - number
          - 'null'
          description: Weight
        weight_unit:
          type: string
          description: Weight unit
        height:
          type:
          - number
          - 'null'
          description: Height
        width:
          type:
          - number
          - 'null'
          description: Width
        length:
          type:
          - number
          - 'null'
          description: Length
        dimensions_unit:
          type:
          - string
          - 'null'
          description: Dimensions unit
        tax_category_id:
          type:
          - string
          - 'null'
          description: Tax category ID
        taxable:
          type:
          - string
          - 'null'
          description: Taxable
        track_quantity:
          type:
          - boolean
          - 'null'
          description: Track Quantity
        archived:
          type:
          - boolean
          - 'null'
          description: Archived
        visible:
          type:
          - boolean
          - 'null'
          description: Is visible
        fulfillment_required:
          type:
          - boolean
          - 'null'
          description: Fulfillment required
        country_of_manufacture_id:
          type:
          - string
          - 'null'
          description: Country of manufacture
        image_ids:
          type:
          - array
          - 'null'
          description: The images for the variant.
        fulfillments_location_ids:
          type:
          - array
          - 'null'
          description: The fulfillment locations for the variant.
        properties_values:
          type: array
          description: The property values of the Variant. e.g. 'Large', 'Red' etc.
          items:
            type: object
            properties:
              property_id:
                type: integer
                description: The ID of the property
              value:
                type: string
                description: The value
      example:
        products_variant:
          name: Heavy Duty Steel variant
          description: Repudiandae voluptatem quam fuga.
          sku: T8NoRRVr7AhNFaKP
          product_type: physical
          out_of_stock_sales: true
          weight: '12.0'
          weight_unit: lb
          height: '95.0'
          width: '250.0'
          length: '23.0'
          dimensions_unit: inches
          tax_category_id:
          taxable:
          track_quantity: false
          archived: false
          visible: true
          fulfillment_required: false
          country_of_manufacture_id:
          image_ids: []
          fulfillments_location_ids: []

    ProductsTagAttributes:
      type: object
      title: Product Tags
      description: Product Tags
      required:
      - id
      - workspace_id
      - name
      - color
      properties:
        id:
          type: integer
          description: Tag ID
        public_id:
          type:
          - string
          - 'null'
          description: Tag public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Name
        color:
          type: string
          description: Color
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 40
        public_id: RDsgwJ
        workspace_id: 42000
        name: Example Tag
        color: copper
        created_at: '2025-06-21T12:18:54.706Z'
        updated_at: '2025-06-21T12:18:54.706Z'
    ProductsTagParameters:
      type: object
      title: Product Tags
      description: Product Tags
      required:
      - name
      properties:
        name:
          type: string
          description: Name
        color:
          type: string
          description: The color of the product tag
      example:
        products_tag:
          name: Example Tag
          color: "#FF5733"
    ProductsTagParametersUpdate:
      type: object
      title: Product Tags
      description: Product Tags
      required: []
      properties:
        name:
          type: string
          description: Name of the product tag
        color:
          type: string
          description: The color of the product tag
      example:
        products_tag:
          name: Example Product Tag
          color: "#FF5733"


    SalesPipelineAttributes:
      type: object
      title: Pipelines
      description: Pipelines
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Pipeline ID
        public_id:
          type:
          - string
          - 'null'
          description: Pipeline public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Pipeline name
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
        total_value:
          type:
          - integer
          - 'null'
          description: Total value of the opportunities
        stages:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Pipelines
            description: Pipelines
            required:
            - id
            - workspace_id
            - name
            properties:
              id:
                type: integer
                description: Pipeline ID
              public_id:
                type:
                - string
                - 'null'
                description: Pipeline public ID
              workspace_id:
                type: integer
                description: Workspace ID
              pipeline_id:
                type: integer
                description: Pipeline ID
              name:
                type: string
                description: Pipeline name
              sort_order:
                type:
                - integer
                - 'null'
                description: The position of the stage in the pipeline
              close_probability:
                type:
                - number
                - 'null'
                description: Close probability of the opportunities in this stage
              opportunity_ids:
                type:
                - array
                - 'null'
                minContains: 0
                contains:
                  type: integer
                description: Opportunities in this stage
              total_value:
                type:
                - integer
                - 'null'
                description: Total value of the opportunities
              weighted_value:
                type:
                - number
                - 'null'
                description: A calculation of the weighted value of all opportunities in
                  this stage
          description: Stages in the pipeline
      example:
        id: 1
        public_id: jkUcRT
        workspace_id: 42000
        name: Example Pipeline
        created_at: '2025-06-14T12:18:54.724Z'
        updated_at: '2025-06-14T12:18:54.724Z'
        total_value: 0
        stages:
        - id: 8
          public_id: bMfBGL
          workspace_id: 2
          pipeline_id: 1
          name: Example Stage
          sort_order: 1
          close_probability: 20.0
          opportunity_ids:
          - 1
          - 2
          total_value: 0
          weighted_value: 0.0
        - id: 9
          public_id: ZsStaC
          workspace_id: 2
          pipeline_id: 1
          name: Example Stage
          sort_order: 2
          close_probability: 20.0
          opportunity_ids:
          - 3
          - 4
          total_value: 0
          weighted_value: 0.0
    SalesPipelineParameters:
      type: object
      title: Pipelines
      description: Pipelines
      required:
      - name
      - stages_attributes
      properties:
        name:
          type: string
          description: Pipeline name
        stages_attributes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the stage
              close_probability:
                type: integer
                description: The probability of closing a deal in this stage
          description: The stages of the pipeline. The stages are ordered by the position
            attribute.
      example:
        sales_pipeline:
          name: Example Pipeline
    SalesPipelineParametersUpdate:
      type: object
      title: Pipelines
      description: Pipelines
      required: []
      properties:
        name:
          type: string
          description: Pipeline name
        stages_attributes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the stage
              close_probability:
                type: integer
                description: The probability of closing a deal in this stage
          description: The stages of the pipeline. The stages are ordered by the position
            attribute.
      example:
        sales_pipeline:
          name: Example Pipeline

    SalesPipelinesStageAttributes:
      type: object
      title: Stages
      description: Stages
      required:
      - id
      - pipeline_id
      - name
      - close_probability
      properties:
        id:
          type: integer
          description: Stage ID
        public_id:
          type:
          - string
          - 'null'
          description: Stage public ID
        workspace_id:
          type:
          - integer
          - 'null'
          description: Workspace ID
        pipeline_id:
          type: integer
          description: Pipeline ID
        name:
          type: string
          description: Stage name
        sort_order:
          type:
          - integer
          - 'null'
          description: |
            The position of the stage in the pipeline. The stages are ordered by the sort order attribute, starting at zero.
            If not provided, the stage will be added at the end of the pipeline.
            If provided, the stage will be inserted at the specified position, and the sort order of the subsequent stages will be incremented by one.
        close_probability:
          type: number
          description: Close probability of the opportunities in this stage
        opportunity_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: integer
          description: Opportunity IDs of all opportunities currently belonging to this
            stage
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
        total_value:
          type:
          - integer
          - 'null'
          description: Total value of all opportunities in this stage
        weighted_value:
          type:
          - number
          - 'null'
          description: A calculation of the weighted value of all opportunities in this
            stage
      example:
        id: 12
        public_id: MgvJel
        workspace_id: 3
        pipeline_id: 2
        name: Example Stage
        sort_order: 5
        close_probability: 20.0
        opportunity_ids:
        - 9
        - 10
        created_at: '2025-06-14T12:18:56.348Z'
        updated_at: '2025-06-14T12:18:56.348Z'
        total_value: 0
        weighted_value: 0.0
    SalesPipelinesStageParameters:
      type: object
      title: Stages
      description: Stages
      required:
      - name
      - close_probability
      properties:
        name:
          type: string
          description: Stage name
        sort_order:
          type:
          - integer
          - 'null'
          description: |
            The position of the stage in the pipeline. The stages are ordered by the sort order attribute, starting at zero.
            If not provided, the stage will be added at the end of the pipeline.
            If provided, the stage will be inserted at the specified position, and the sort order of the subsequent stages will be incremented by one.
        close_probability:
          type: number
          description: Close probability of the opportunities in this stage
      example:
        sales_pipelines_stage:
          name: Example Stage
          sort_order: 5
          close_probability: 20.0
    SalesPipelinesStageParametersUpdate:
      type: object
      title: Stages
      description: Stages
      required: []
      properties:
        name:
          type: string
          description: Stage name
        sort_order:
          type:
          - integer
          - 'null'
          description: |
            The position of the stage in the pipeline. The stages are ordered by the sort order attribute, starting at zero.
            If not provided, the stage will be added at the end of the pipeline.
            If provided, the stage will be inserted at the specified position, and the sort order of the subsequent stages will be incremented by one.
        close_probability:
          type: number
          description: Close probability of the opportunities in this stage
          nullable: true
      example:
        sales_pipelines_stage:
          name: Example Stage
          sort_order: 5
          close_probability: 20

    SalesOpportunityAttributes:
      type: object
      title: Opportunities
      description: Opportunities
      required:
      - id
      - name
      - workspace_id
      - pipelines_stage_id
      - primary_contact_id
      - primary_contact
      properties:
        id:
          type: integer
          description: Opportunity ID
        public_id:
          type:
          - string
          - 'null'
          description: Opportunity public ID
        name:
          type: string
          description: Name
        workspace_id:
          type: integer
          description: Workspace ID
        pipeline_id:
          type:
          - string
          - 'null'
          description: Pipeline ID
        pipelines_stage_id:
          type: integer
          description: Pipeline Stage
        primary_contact_id:
          type: integer
          description: Primary Contact
        value:
          type:
          - number
          - 'null'
          description: The potential value of this opportunity in the default currency of
            the workspace
        closed_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Close date
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
        pipeline:
          type: object
          description: Pipeline Details
          properties:
            id:
              type: integer
              description: Pipeline public ID
            public_id:
              type: string
              description: Pipeline Stage Public ID
            name:
              type: string
              description: The name of the pipeline
        pipelines_stage:
          type: object
          description: Pipeline Stage Details
          properties:
            id:
              type: integer
              description: Pipeline Stage ID
            public_id:
              type: string
              description: Pipeline Stage public ID
            name:
              type: string
              description: Name
        primary_contact:
          type: object
          title: Contacts
          description: Contact
          required:
          - id
          - workspace_id
          - uuid
          properties:
            id:
              type: integer
              description: Contact ID
            public_id:
              type:
              - string
              - 'null'
              description: Contact public ID
            workspace_id:
              type: integer
              description: Workspace ID
            anonymous:
              type:
              - string
              - 'null'
              description: Anonymous
            email_address:
              type:
              - string
              - 'null'
              description: Email address
            first_name:
              type:
              - string
              - 'null'
              description: First name
            last_name:
              type:
              - string
              - 'null'
              description: Last name
            phone_number:
              type:
              - string
              - 'null'
              description: Phone number
            time_zone:
              type:
              - string
              - 'null'
              description: |
                The human-readable time zone, usually set dynamically by the app for the contact, for example, during opt-in.
                Read more about time zones and how to map them back to the TZ standard in [our Time Zones guide.](https://dash.readme.com/project/cf2/v2/docs/timezones).
            uuid:
              type: string
              description: UUID
            unsubscribed_at:
              type:
              - string
              - 'null'
              description: Unsubscribed
            last_notification_email_sent_at:
              type:
              - string
              - 'null'
              description: Last notification email sent
            fb_url:
              type:
              - string
              - 'null'
              description: Facebook URL
            twitter_url:
              type:
              - string
              - 'null'
              description: Twitter URL
            instagram_url:
              type:
              - string
              - 'null'
              description: Instagram URL
            linkedin_url:
              type:
              - string
              - 'null'
              description: LinkedIn URL
            website_url:
              type:
              - string
              - 'null'
              description: Website URL
            created_at:
              type:
              - string
              - 'null'
              description: Date added
            updated_at:
              type:
              - string
              - 'null'
              description: Last updated
            tags:
              type:
              - array
              - 'null'
              minContains: 0
              contains:
                type: object
                properties:
                  id:
                    type: integer
                    description: Tag ID
                  public_id:
                    type: string
                    description: Tag public ID
                  name:
                    type: string
                    description: Tag name
                  color:
                    type: string
                    description: Tag color
                  applied_at:
                    type: string
                    description: The datetime the tag was applied by creating a Contacts::AppliedTag
                      that maps the tag to the contact.
              description: Any valid array, empty or with valid tags will overwrite existing
                values. To avoid losing existing tags first use the Fetch Contact endpoint,
                then be sure to include the existing tags in your payload along with any
                new addition(s)
            custom_attributes:
              type:
              - object
              - 'null'
              properties:
                CustomKey:
                  type: string
                  description: Custom Attribute Key
              description: A dynamic key-value pair object where both the key and value
                are strings. Custom attributes are usually added to the contact when they
                submit forms that contain custom contact attributes. But you can also add
                them via the API using the modifying endpoints like Create/Update/Upsert
                Contact.
            visits:
              type:
              - object
              - 'null'
              properties:
                first_visit:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.id.api_description'
                    public_id:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.public_id.api_description'
                    contact_id:
                      type: integer
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.contact_id.api_description'
                    uuid:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.uuid.api_description'
                    utm_source:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.utm_source.api_description'
                    utm_medium:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.utm_medium.api_description'
                    utm_campaign:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.utm_campaign.api_description'
                    utm_term:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.utm_term.api_description'
                    utm_content:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.utm_content.api_description'
                    ip:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.ip.api_description'
                    user_agent:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.user_agent.api_description'
                    referrer:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.referrer.api_description'
                    referring_domain:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.referring_domain.api_description'
                    landing_page:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.landing_page.api_description'
                    browser:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.browser.api_description'
                    os:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.os.api_description'
                    device_type:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.device_type.api_description'
                    started_at:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.started_at.api_description'
                    created_at:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.created_at.api_description'
                    updated_at:
                      type: string
                      description: 'Translation missing: en.contacts.fields.visits.first_visit.updated_at.api_description'
                  description: 'Translation missing: en.contacts.fields.visits.first_visit.api_description'
                last_visit:
                  type: string
                  description: 'Translation missing: en.contacts.fields.visits.last_visit.api_description'
                last_visit_with_utm:
                  type: string
                  description: 'Translation missing: en.contacts.fields.visits.last_visit_with_utm.api_description'
              description: 'Translation missing: en.contacts.fields.visits.api_description'
        assignee_id:
          type:
          - string
          - 'null'
          description: The ID of the Team-`Membership` to whom the opportunity is assigned.
        notes:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Sales Note
            description: Sales Note
            required:
            - id
            - content
            properties:
              id:
                type: integer
                description: Note ID
              public_id:
                type:
                - string
                - 'null'
                description: Note public ID
              content:
                type: string
                description: Content
              created_by_id:
                type:
                - integer
                - 'null'
                description: |-
                  The ID of the Team-`Membership` that created the note.
                  For notes created via the API, this defaults to the ClickFunnels API default User.
              created_at:
                type:
                - string
                - 'null'
                format: date-time
                description: Note creation date
              updated_at:
                type:
                - string
                - 'null'
                format: date-time
                description: Note last updated date
          description: Notes
      example:
        id: 17
        public_id: tbKcIn
        name: Example Opportunity
        workspace_id: 42000
        pipeline_id:
        pipelines_stage_id: 15
        primary_contact_id: 25
        value: '100.0'
        closed_at: '2025-06-14T12:18:57.946Z'
        created_at: '2025-06-14T12:18:57.946Z'
        updated_at: '2025-06-14T12:18:57.946Z'
        pipeline:
          id: 3
          public_id: TsERrw
          name: Example Pipeline
        pipelines_stage:
          id: 15
          public_id: gLnkGI
          name: Example Stage
        primary_contact:
          id: 25
          public_id: fglmCz
          workspace_id: 42000
          anonymous:
          email_address: test-f2032048f816b096db9d@example.com
          first_name: Juli
          last_name: Mayert
          phone_number: 778.279.6208 x60720
          time_zone: Pacific Time (US & Canada)
          uuid: 47acbb38-ca93-4e34-9233-dddc6ecd85a4
          unsubscribed_at:
          last_notification_email_sent_at:
          fb_url: https://www.facebook.com/example
          twitter_url: https://twitter.com/example
          instagram_url:
          linkedin_url: https://www.linkedin.com/in/example
          website_url: https://example.com
          created_at: '2025-05-21T12:18:56.755Z'
          updated_at: '2025-05-21T12:18:56.755Z'
          tags:
          - id: 27
            public_id: ItTgSN
            name: Example Tag
            color: "#38f919"
            applied_at:
          custom_attributes:
            CustomKey: MyText
          visits:
            first_visit:
              id: 8
              public_id: WjmMjw
              contact_id: 25
              uuid: bdf388e2-13f1-4ece-a457-33b57f83716e
              utm_source:
              utm_medium:
              utm_campaign:
              utm_term:
              utm_content:
              ip:
              user_agent:
              referrer:
              referring_domain:
              landing_page:
              browser:
              os:
              device_type:
              started_at:
              created_at: '2025-05-26T09:59:38.744Z'
              updated_at: '2025-05-26T09:59:38.744Z'
            last_visit:
            last_visit_with_utm:
        assignee_id:
        notes:
        - id: 33
          public_id: pXigHL
          content: Example note
          created_by_id: 35
          created_at: '2025-06-14T12:18:58.032Z'
          updated_at: '2025-06-14T12:18:58.032Z'
        - id: 34
          public_id: cAkJVo
          content: Example note
          created_by_id: 36
          created_at: '2025-06-14T12:18:58.118Z'
          updated_at: '2025-06-14T12:18:58.118Z'
    SalesOpportunityParameters:
      type: object
      title: Opportunities
      description: Opportunities
      required:
      - name
      - pipelines_stage_id
      - primary_contact_id
      properties:
        name:
          type: string
          description: Name
        pipelines_stage_id:
          type: integer
          description: Pipeline Stage
        primary_contact_id:
          type: integer
          description: Primary Contact
        value:
          type:
          - number
          - 'null'
          description: The potential value of this opportunity in the default currency of
            the workspace
        closed_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Close date
        assignee_id:
          type: integer
          description: |
            The ID of the Team `Membership` to assign the Opportunity to.
            An Opportunity can be assigned to any Team member since they have access to all your workspaces.
            You can get a list of available Memberships and their `id` via the `Team` resource's `memberships` property.
      
            If the opportunity is already assigned to a team member, the assignee will be updated.
            You can unset the assignee by passing a `null` value for `assignee_id`.
      example:
        sales_opportunity:
          name: Example Opportunity
          pipelines_stage_id: 15
          primary_contact_id: 25
          value: '100.0'
          closed_at: '2025-06-14T12:18:57.946Z'
          assignee_id: 42
    SalesOpportunityParametersUpdate:
      type: object
      title: Opportunities
      description: Opportunities
      required: []
      properties:
        name:
          type: string
          description: Name
        pipelines_stage_id:
          type: integer
          description: Pipeline Stage ID
        primary_contact_id:
          type: integer
          description: Primary Contact ID
        value:
          type:
          - number
          - 'null'
          description: The potential value of this opportunity in the default currency of
            the workspace
        closed_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Close date
        assignee_id:
          type: integer
          description: |
            The ID of the Team `Membership` to assign the Opportunity to.
            An Opportunity can be assigned to any Team member since they have access to all your workspaces.
            You can get a list of available Memberships and their `id` via the `Team` resource's `memberships` property.
      
            If the opportunity is already assigned to a team member, the assignee will be updated.
            You can unset the assignee by passing a `null` value for `assignee_id`.
      example:
        sales_opportunity:
          name: Example Opportunity
          pipelines_stage_id: 123
          primary_contact_id: 123
          value: '100.0'
          closed_at: '2025-06-14T12:18:57.946Z'
          assignee_id: 42

    SalesOpportunitiesNoteAttributes:
      type: object
      title: Notes
      description: Notes
      required:
      - id
      - opportunity_id
      - content
      properties:
        id:
          type: integer
          description: Note ID
        public_id:
          type:
          - string
          - 'null'
          description: Note public ID
        opportunity_id:
          type: integer
          description: Opportunity
        content:
          type: string
          description: Content
        created_by_id:
          type:
          - integer
          - 'null'
          description: |-
            The ID of the Team-`Membership` that created the note.
            For notes created via the API, this defaults to the ClickFunnels API default User.
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Note creation date
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Note last updated date
      example:
        id: 49
        public_id: DFqHbB
        opportunity_id: 24
        content: Example note
        created_by_id: 51
        created_at: '2025-06-14T12:18:59.622Z'
        updated_at: '2025-06-14T12:18:59.622Z'
    SalesOpportunitiesNoteParameters:
      type: object
      title: Notes
      description: Notes
      required:
      - content
      properties:
        content:
          type: string
          description: Content
        created_by_id:
          type: integer
          description: 'The ID of the Team-Membership that created the note. When creating
            notes via the API, this defaults to the ClickFunnels API default User''s Membership
            ID. You can retrieve a list of available Memberships and their id via the Team
            resource''s memberships property.
      
            '
      example:
        sales_opportunities_note:
          content: Example note
          created_by_id: 42
    SalesOpportunitiesNoteParametersUpdate:
      type: object
      title: Notes
      description: Notes
      required: []
      properties:
        content:
          type: string
          description: Content
        created_by_id:
          type: integer
          description: 'The ID of the Team-Membership that created the note. When creating
            notes via the API, this defaults to the ClickFunnels API default User''s Membership
            ID. You can retrieve a list of available Memberships and their id via the Team
            resource''s memberships property.
      
            '
      example:
        sales_opportunities_note:
          content: Example Note
          created_by_id: 42


    ShippingLocationGroupAttributes:
      type: object
      title: Location groups
      description: Location groups
      required:
      - id
      - profile_id
      - name
      properties:
        id:
          type: integer
          description: Location group ID
        public_id:
          type:
          - string
          - 'null'
          description: Location group public ID
        profile_id:
          type: integer
          description: Profile ID
        name:
          type: string
          description: Name
        fulfillments_location_ids:
          type:
          - array
          - 'null'
          description: Fulfillments Locations
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 1
        public_id: pWaeSE
        profile_id: 1
        name: Example Location Group
        fulfillments_location_ids: []
        created_at: '2025-06-21T12:18:59.655Z'
        updated_at: '2025-06-21T12:18:59.655Z'

    ShippingPackageAttributes:
      type: object
      title: Packages
      description: Packages
      required:
      - id
      - package_type
      - height
      - width
      - length
      - distance_unit
      - name
      properties:
        id:
          type: integer
          description: Package ID
        public_id:
          type:
          - string
          - 'null'
          description: Package public ID
        package_type:
          type: string
          enum:
          - box
          - envelope
          - soft_package
          description: Package Type
        height:
          type: number
          description: Height
        width:
          type: number
          description: Width
        length:
          type: number
          description: Length
        distance_unit:
          type: string
          enum:
          - in
          - cm
          - ft
          - m
          - mm
          description: Distance Unit
        empty_weight:
          type:
          - string
          - 'null'
          description: Empty Weight
        weight:
          type:
          - number
          - 'null'
          description: Weight
        weight_unit:
          type:
          - string
          - 'null'
          enum:
          - lb
          - kg
          - g
          - oz
          description: Weight Unit
        default_package:
          type:
          - boolean
          - 'null'
          description: Default Package
        name:
          type: string
          description: Name
        token:
          type:
          - string
          - 'null'
          description: Token
        carrier:
          type:
          - string
          - 'null'
          enum:
          - fedex
          - ups
          - usps
          description: Carrier
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 1
        public_id: FGZayj
        package_type: box
        height: '4.0'
        width: '2.0'
        length: '2.0'
        distance_unit: in
        empty_weight:
        weight: '0.0'
        weight_unit: lb
        default_package: false
        name: Example Package
        token:
        carrier:
        created_at: '2025-06-21T12:18:59.684Z'
        updated_at: '2025-06-21T12:18:59.684Z'
    ShippingPackageParameters:
      type: object
      title: Packages
      description: Packages
      required:
      - package_type
      - height
      - width
      - length
      - distance_unit
      - name
      properties:
        package_type:
          type: string
          enum:
          - box
          - envelope
          - soft_package
          description: Package Type
        height:
          type: number
          description: Height
        width:
          type: number
          description: Width
        length:
          type: number
          description: Length
        distance_unit:
          type: string
          enum:
          - in
          - cm
          - ft
          - m
          - mm
          description: Distance Unit
        empty_weight:
          type:
          - string
          - 'null'
          description: Empty Weight
        weight:
          type:
          - number
          - 'null'
          description: Weight
        weight_unit:
          type:
          - string
          - 'null'
          enum:
          - lb
          - kg
          - g
          - oz
          description: Weight Unit
        default_package:
          type:
          - boolean
          - 'null'
          description: Default Package
        name:
          type: string
          description: Name
        carrier:
          type:
          - string
          - 'null'
          enum:
          - fedex
          - ups
          - usps
          description: Carrier
      example:
        shipping_package:
          package_type: box
          height: '4.0'
          width: '2.0'
          length: '2.0'
          distance_unit: in
          empty_weight:
          weight: '0.0'
          weight_unit: lb
          default_package: false
          name: Example Package
          carrier:
    ShippingPackageParametersUpdate:
      type: object
      title: Packages
      description: Packages
      required: []
      properties:
        package_type:
          type: string
          description: Package Type
          enum:
          - box
          - envelope
          - soft_package
        height:
          type: number
          description: Height
        width:
          type: number
          description: Width
        length:
          type: number
          description: Length
        distance_unit:
          type: string
          description: Distance Unit
        empty_weight:
          type:
          - string
          - 'null'
          description: Empty Weight
        weight:
          type:
          - number
          - 'null'
          description: Weight
        weight_unit:
          type:
          - string
          - 'null'
          enum:
          - lb
          - kg
          - g
          - oz
          description: Weight Unit
        default_package:
          type:
          - boolean
          - 'null'
          description: Default Package
        name:
          type: string
          description: Name
        carrier:
          type:
          - string
          - 'null'
          enum:
          - fedex
          - ups
          - usps
          description: Carrier
      example:
        shipping_package:
          package_type: box
          height: '4.0'
          width: '2.0'
          length: '2.0'
          distance_unit: in
          empty_weight:
          weight: '0.0'
          weight_unit: lb
          default_package: false
          name: Example Package
          carrier:

    ShippingProfileAttributes:
      type: object
      title: Profiles
      description: Profiles
      required:
      - id
      - name
      properties:
        id:
          type: integer
          description: Profile ID
        public_id:
          type:
          - string
          - 'null'
          description: Profile public ID
        name:
          type: string
          description: Name
        variant_ids:
          type:
          - array
          - 'null'
          description: Variant IDs
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 2
        public_id: owgWhf
        name: Example Shipping Profile
        variant_ids: []
        created_at: '2025-06-21T12:18:59.697Z'
        updated_at: '2025-06-21T12:18:59.697Z'
    ShippingProfileParameters:
      type: object
      title: Profiles
      description: Profiles
      required:
      - name
      properties:
        name:
          type: string
          description: Name
        variant_ids:
          type:
          - array
          - 'null'
          description: Variant IDs
      example:
        shipping_profile:
          name: Example Shipping Profile
          variant_ids: []
    ShippingProfileParametersUpdate:
      type: object
      title: Profiles
      description: Profiles
      required: []
      properties:
        name:
          type: string
          description: Name
        variant_ids:
          type:
          - array
          - 'null'
          description: Variant IDs
      example:
        shipping_profile:
          name: Example Shipping
          variant_ids: []

    ShippingRateAttributes:
      type: object
      title: Rates
      description: Rates
      required:
      - id
      - zone_id
      - price
      - price_currency
      - rates_name_id
      properties:
        id:
          type: integer
          description: Rate ID
        public_id:
          type:
          - string
          - 'null'
          description: Rate public ID
        zone_id:
          type: integer
          description: Zone ID
        description:
          type:
          - string
          - 'null'
          description: Rate name
        provider_name:
          type:
          - string
          - 'null'
          description: Provider Name
        price:
          type: string
          description: Price
        price_currency:
          type: string
          description: Price Currency
        rates_name_id:
          type: integer
          description: Rate name ID
        live_rates_provider:
          type:
          - string
          - 'null'
          enum:
          - Shippo
          description: Live Rates Provider
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 1
        public_id: Kymwcf
        zone_id: 1
        description: Example Shipping Rates Name
        provider_name: Lamonica Erdman
        price: '10.00'
        price_currency: USD
        rates_name_id: 1
        live_rates_provider:
        created_at: '2025-06-21T12:18:59.734Z'
        updated_at: '2025-06-21T12:18:59.734Z'
    ShippingRateParameters:
      type: object
      title: Rates
      description: Rates
      required:
      - price
      - price_currency
      - rates_name_id
      properties:
        provider_name:
          type:
          - string
          - 'null'
          description: Provider Name
        price:
          type: string
          description: Price
        price_currency:
          type: string
          description: Price Currency
        rates_name_id:
          type: integer
          description: Rate name ID
        live_rates_provider:
          type:
          - string
          - 'null'
          enum:
          - Shippo
          description: Live Rates Provider
      example:
        shipping_rate:
          provider_name: Lamonica Erdman
          price: '10.00'
          price_currency: USD
          rates_name_id: 1
          live_rates_provider:
    ShippingRateParametersUpdate:
      type: object
      title: Rates
      description: Rates
      required: []
      properties:
        provider_name:
          type:
          - string
          - 'null'
          description: Provider Name
        price:
          type: string
          description: Price
        price_currency:
          type: string
          description: Price Currency
        rates_name_id:
          type: integer
          description: Rate name ID
        live_rates_provider:
          type:
          - string
          - 'null'
          enum:
          - Shippo
          description: Live Rates Provider
      example:
        shipping_rate:
          provider_name: Lamonica Erdman
          price: '10.00'
          price_currency: USD
          rates_name_id: 1
          live_rates_provider:

    ShippingRatesNameAttributes:
      type: object
      title: Rate Names
      description: Rate Names
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Rate Name ID
        public_id:
          type:
          - string
          - 'null'
          description: Rate Name public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: Rate Name
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated
      example:
        id: 2
        public_id: XdukGT
        workspace_id: 42000
        name: Example Shipping Rates Name
        created_at: '2025-06-21T12:18:59.747Z'
        updated_at: '2025-06-21T12:18:59.747Z'
    ShippingRatesNameParameters:
      type: object
      title: Rate Names
      description: Rate Names
      required:
      - name
      properties:
        name:
          type: string
          description: Rate Name
      example:
        shipping_rates_name:
          name: Example Shipping Rates Name
    ShippingRatesNameParametersUpdate:
      type: object
      title: Rate Names
      description: Rate Names
      required: []
      properties:
        name:
          type: string
          description: Rate Name
      example:
        shipping_rates_name:
          name: Example Shipping

    ShippingZoneAttributes:
      type: object
      title: Zones
      description: Zones
      required:
      - id
      - location_group_id
      - name
      properties:
        id:
          type: integer
          description: Zone ID
        public_id:
          type:
          - string
          - 'null'
          description: Zone public ID
        location_group_id:
          type: integer
          description: Location group ID
        name:
          type: string
          description: Name
        address_filter_id:
          type:
          - string
          - 'null'
          description: Zone
        region_ids:
          type:
          - array
          - 'null'
          description: Region IDs
        country_ids:
          type:
          - array
          - 'null'
          description: Country IDs
        includes_rest_of_world:
          type:
          - boolean
          - 'null'
          description: Includes Rest of the World
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          description: Updated
      example:
        id: 2
        public_id: badXBE
        location_group_id: 3
        name: Erwin Bernhard
        address_filter_id:
        region_ids: []
        country_ids: []
        includes_rest_of_world: false
        created_at: '2025-06-21T12:18:59.759Z'
        updated_at:
    ShippingZoneParameters:
      type: object
      title: Zones
      description: Zones
      required:
      - name
      properties:
        name:
          type: string
          description: Name
        address_filter_id:
          type:
          - string
          - 'null'
          description: Zone
        region_ids:
          type:
          - array
          - 'null'
          description: Region IDs
        country_ids:
          type:
          - array
          - 'null'
          description: Country IDs
        includes_rest_of_world:
          type:
          - boolean
          - 'null'
          description: Includes Rest of the World
      example:
        shipping_zone:
          name: Erwin Bernhard
          address_filter_id:
          region_ids: []
          country_ids: []
          includes_rest_of_world: false
    ShippingZoneParametersUpdate:
      type: object
      title: Zones
      description: Zones
      required: []
      properties:
        name:
          type: string
          description: Name
        address_filter_id:
          type:
          - string
          - 'null'
          description: Zone
        region_ids:
          type:
          - array
          - 'null'
          description: Region IDs
        country_ids:
          type:
          - array
          - 'null'
          description: Country IDs
        includes_rest_of_world:
          type:
          - boolean
          - 'null'
          description: Includes Rest of the World
      example:
        shipping_zone:
          name: Rory Metz
          address_filter_id:
          region_ids: []
          country_ids: []
          includes_rest_of_world: false


    StoreAttributes:
      type: object
      title: Stores
      description: Stores
      required:
      - id
      - name
      properties:
        id:
          type: integer
          description: Store ID
        public_id:
          type:
          - string
          - 'null'
          description: Store Public ID
        name:
          type: string
          description: Name
        current_path:
          type:
          - string
          - 'null'
          description: Current path
        seo_title:
          type:
          - string
          - 'null'
          description: SEO title
        seo_description:
          type:
          - string
          - 'null'
          description: SEO description
        seo_indexable:
          type:
          - boolean
          - 'null'
          description: SEO Indexable
        social_image_id:
          type:
          - string
          - 'null'
          description: Social image
        status:
          type:
          - string
          - 'null'
          enum:
          - draft
          - published
          description: Store Status
        created_at:
          type:
          - string
          - 'null'
          description: Added
        updated_at:
          type:
          - string
          - 'null'
          description: Updated
        workspace_id:
          type:
          - integer
          - 'null'
          description: Workspace ID
      example:
        id: 1
        public_id: WMogyO
        name: Example Store
        current_path: "/example-store"
        seo_title: Example Store
        seo_description: Example Store
        seo_indexable: true
        social_image_id:
        status: draft
        created_at:
        updated_at:
        workspace_id: 42000
    StoreParameters:
      type: object
      title: Stores
      description: Stores
      required:
      - name
      properties:
        name:
          type: string
          description: Name
        current_path:
          type:
          - string
          - 'null'
          description: Current path
        seo_title:
          type:
          - string
          - 'null'
          description: SEO title
        seo_description:
          type:
          - string
          - 'null'
          description: SEO description
        seo_indexable:
          type:
          - boolean
          - 'null'
          description: SEO Indexable
        social_image_id:
          type:
          - string
          - 'null'
          description: Social image
        status:
          type:
          - string
          - 'null'
          enum:
          - draft
          - published
          description: Store Status
      example:
        store:
          name: Example Store
          current_path: "/example-store"
          seo_title: Example Store
          seo_description: Example Store
          seo_indexable: true
          social_image_id:
          status: draft
    StoreParametersUpdate:
      type: object
      title: Stores
      description: Stores
      required: []
      properties:
        name:
          type: string
          description: Name
        current_path:
          type:
          - string
          - 'null'
          description: Current path
        seo_title:
          type:
          - string
          - 'null'
          description: SEO title
        seo_description:
          type:
          - string
          - 'null'
          description: SEO description
        seo_indexable:
          type:
          - boolean
          - 'null'
          description: SEO Indexable
        social_image_id:
          type:
          - string
          - 'null'
          description: Social image
        status:
          type:
          - string
          - 'null'
          enum:
          - draft
          - published
          description: Store Status
      example:
        store:
          name: Example Store
          current_path: "/example-store"
          seo_title: Example Store
          seo_description: Example Store
          seo_indexable: true
          social_image_id:
          status: draft

    StyleAttributes:
      type: object
      title: Styles
      description: Styles
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Style ID
        public_id:
          type:
          - string
          - 'null'
          description: Public Style ID
        workspace_id:
          type: integer
          description: Workspace ID
        theme_id:
          type:
          - integer
          - 'null'
          description: Theme ID
        name:
          type: string
          description: Name
        created_at:
          type:
          - string
          - 'null'
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          description: Updated at
      example:
        id: 3
        public_id: QgLvwD
        workspace_id: 42000
        theme_id: 1
        name: Example Style
        created_at:
        updated_at:


    ThemeAttributes:
      type: object
      title: Themes
      description: Themes
      required:
      - id
      - workspace_id
      - name
      properties:
        id:
          type: integer
          description: Theme ID
        public_id:
          type:
          - string
          - 'null'
          description: Theme public ID
        workspace_id:
          type: integer
          description: Workspace ID
        name:
          type: string
          description: The original name of the theme
        custom_name:
          type:
          - string
          - 'null'
          description: A custom name to override the theme name
        current_style_id:
          type:
          - integer
          - 'null'
          description: The style that will be applied to the theme
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
        styles:
          type:
          - array
          - 'null'
          items:
            type: object
            title: Styles
            description: Styles are used to switch between different designs for a theme
            required:
            - id
            - name
            properties:
              id:
                type: integer
                description: Style ID
              name:
                type: string
                description: Name
          description: Styles
      example:
        id: 2
        public_id: JbsnSY
        workspace_id: 42000
        name: Original Name
        custom_name: Custom Name
        current_style_id: 5
        created_at: '2025-05-21T12:18:59.844Z'
        updated_at: '2025-05-21T12:18:59.844Z'
        styles:
        - id: 5
          name: Example Style
        - id: 4
          name: Example Style
    ThemeParameters:
      type: object
      title: Themes
      description: Themes
      required: []
      properties:
        custom_name:
          type:
          - string
          - 'null'
          description: A custom name to override the theme name
        current_style_id:
          type:
          - integer
          - 'null'
          description: The style that will be applied to the theme
      example:
        theme:
          custom_name: Custom Name
          current_style_id: 5
    ThemeParametersUpdate:
      type: object
      title: Themes
      description: Themes
      required: []
      properties:
        custom_name:
          type:
          - string
          - 'null'
          description: A custom name to override the theme name
        current_style_id:
          type:
          - integer
          - 'null'
          description: The style that will be applied to the theme
      example:
        theme:
          custom_name: Custom Name
          current_style_id: 5


    WebhooksOutgoingEndpointAttributes:
      type: object
      title: Webhooks
      description: Webhooks
      required:
      - id
      - workspace_id
      - url
      - name
      properties:
        id:
          type: integer
          description: Unique identifier for the webhook endpoint
        public_id:
          type:
          - string
          - 'null'
          description: Unique identifier for the webhook endpoint visible in the UI
        workspace_id:
          type: integer
          description: Workspace ID
        url:
          type: string
          description: The URL that ClickFunnels event webhooks will be sent to.
        name:
          type: string
          description: The custom name for the webhook endpoint.
        event_type_ids:
          type:
          - array
          - 'null'
          minContains: 0
          contains:
            type: string
          description: The event types that the webhook endpoint subscribes for. Can be
            any event type from <a class='link' target='_blank' href='https://developers.myclickfunnels.com/docs/webhook-event-types'>the
            list of event types</a>.
        api_version:
          type:
          - integer
          - 'null'
          description: The version of the API that the webhook endpoint is using. Only V2
            endpoints can currently be created via the API, but V1 endpoints can be created
            via the UI. They will be visible when listing endpoints.
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Updated at
        page_ids:
          type: array
          nullable: true
          description: |
            The IDs of the pages that this endpoint is scoped to. Only events triggered from these pages will be sent to this endpoint.
            Can be null when first created. After an update, it can be null, an empty array or an array of page IDs.
        funnel_ids:
          type: array
          nullable: true
          description: |
            The IDs of the funnels that this endpoint is scoped to. Only events triggered from these funnels will be sent to this endpoint.
            Can be null when first created. After an update, it can be null, an empty array or an array of page IDs.
      example:
        id: 1
        public_id: KCrMDf
        workspace_id: 42000
        url: https://example.com/some-endpoint-url
        name: Example Endpoint
        event_type_ids:
        - contact.identified
        - one-time-order.completed
        api_version: 2
        created_at: '2025-05-21T12:18:59.874Z'
        updated_at: '2025-05-21T12:18:59.874Z'
        page_ids: []
        funnel_ids: []
    WebhooksOutgoingEndpointParameters:
      type: object
      title: Webhooks
      description: Webhooks
      required:
      - url
      - name
      properties:
        url:
          type: string
          description: The URL that ClickFunnels event webhooks will be sent to.
        name:
          type: string
          description: The custom name for the webhook endpoint.
        event_type_ids:
          type: array
          description: |
            Represents the event types to which the webhook is subscribed. On create one or more valid `event_type_ids` are required. See the <a class="link" href="https://developers.myclickfunnels.com/docs/webhook-event-types#order-webhooks" target="_blank">Webhook Event Types guide</a> for details.
      
            To remove one `event_type_id` on update, pass an array of all current `event_type_ids` less the one to be removed.
      
            On update to remove all `event_type_ids` pass an empty array.
        page_ids:
          type: array
          nullable: true
          description: |
            The pages scope of the webhook, i.e., the endpoint will only subscribe to events triggered by users from the pages with the given IDs.
            If not configured initially (equalling null) or empty, subscribes to events fired from any page in the workspace.
            Updating the array will override existing values. To remove all `page_ids` pass an empty array or null.
        funnel_ids:
          type: array
          nullable: true
          description: |
            The funnel scope of the webhook, i.e., the endpoint will only subscribe to events triggered by users from the funnels with the given IDs.
            If not configured initially (equalling null) or empty, subscribes to events fired from any funnel in the workspace.
            Updating the array will override existing values. To remove all `funnel_ids` pass an empty array or null.
      example:
        webhooks_outgoing_endpoint:
          url: https://example.com/some-endpoint-url
          name: Example Endpoint
          event_type_ids:
          - contact.identified
          - one-time-order.completed
          page_ids: []
          funnel_ids: []
    WebhooksOutgoingEndpointParametersUpdate:
      type: object
      title: Webhooks
      description: Webhooks
      required: []
      properties:
        url:
          type: string
          description: The URL that ClickFunnels event webhooks will be sent to.
        name:
          type: string
          description: The custom name for the webhook endpoint.
        event_type_ids:
          type: array
          description: |
            Represents the event types to which the webhook is subscribed. On create one or more valid `event_type_ids` are required. See the <a class="link" href="https://developers.myclickfunnels.com/docs/webhook-event-types#order-webhooks" target="_blank">Webhook Event Types guide</a> for details.
      
            To remove one `event_type_id` on update, pass an array of all current `event_type_ids` less the one to be removed.
      
            On update to remove all `event_type_ids` pass an empty array.
        page_ids:
          type: array
          nullable: true
          description: |
            The pages scope of the webhook, i.e., the endpoint will only subscribe to events triggered by users from the pages with the given IDs.
            If not configured initially (equalling null) or empty, subscribes to events fired from any page in the workspace.
            Updating the array will override existing values. To remove all `page_ids` pass an empty array or null.
        funnel_ids:
          type: array
          nullable: true
          description: |
            The funnel scope of the webhook, i.e., the endpoint will only subscribe to events triggered by users from the funnels with the given IDs.
            If not configured initially (equalling null) or empty, subscribes to events fired from any funnel in the workspace.
            Updating the array will override existing values. To remove all `funnel_ids` pass an empty array or null.
      example:
        webhooks_outgoing_endpoint:
          url: https://example.com/some-endpoint-url
          name: Example Endpoint
          event_type_ids:
          - contact.identified
          - one-time-order.completed
          page_ids: []
          funnel_ids: []

    WebhooksOutgoingEventAttributes:
      type: object
      title: Webhooks Events
      description: Webhooks Events
      required:
      - id
      - workspace_id
      - subject_id
      properties:
        id:
          type: integer
          description: Unique identifier for the webhook event
        public_id:
          type:
          - string
          - 'null'
          description: Unique identifier for the webhook event visible in the UI
        workspace_id:
          type: integer
          description: Workspace ID
        uuid:
          type:
          - string
          - 'null'
          description: Unique UUID identifier for the webhook event
        event_type_id:
          type:
          - string
          - 'null'
          description: The ID of the event type. Can be any ID from <a class='link' target='_blank'
            href='https://developers.myclickfunnels.com/docs/webhook-event-types'>the list
            of event types</a>.
        subject_id:
          type: integer
          description: The ID of the subject of the event. E.g., for the `one-time-order.completed`
            event_type_id, the `subject_id` is the ID of an Order.
        subject_type:
          type:
          - string
          - 'null'
          description: The type of the subject of the event. E.g., for the `contact.identified`
            event_type_id, the `subject_type` is `Contact`.
        data:
          type: object
          description: 'The webhook data payload with the data of the event. This data corresponds
            to the subject''s response schema. E.g., for the `contact.identified` event_type_id,
            the `subject_type` is `Contact`. So, you can expect the `data` structure to
            be as described in the response schema of the Contact endpoints. '
        api_version:
          type:
          - integer
          - 'null'
          description: API version of the webhook event. Only V2 webhook events will be
            triggered from endpoints created via the API, but in the list of events you
            will encounter V1 events if UI users set up V1 endpoints via the UI.
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: Created at
        page:
          type:
          - object
          - 'null'
          title: Page
          description: Page
          required:
          - id
          - name
          properties:
            id:
              type: integer
              description: Page ID
            public_id:
              type:
              - string
              - 'null'
              description: Page Public ID
            name:
              type: string
              description: Page name of the editable page element. Want to filter by it?
                See our <i><u><a href="https://developers.myclickfunnels.com/docs/filtering-by-page"
                target="_blank">help guide on that topic</a><u><i>.
        funnel:
          type:
          - object
          - 'null'
          title: Funnel
          description: Funnel
          required:
          - id
          - name
          properties:
            id:
              type: integer
              description: Funnel ID
            public_id:
              type:
              - string
              - 'null'
              description: Public Funnel ID
            name:
              type: string
              description: Name of the Funnel
      example:
        id: 1
        public_id: hOXkib
        workspace_id: 42000
        uuid: 8cc5509ace6ae0042235dd355aab779c
        event_type_id: contact.identified
        subject_id: 39
        subject_type: Contact
        data:
          id: 246579500
          tags: []
          uuid: 3783f37654f74bd2c088c2ffef1ce685
          fb_url:
          anonymous: 0
          last_name:
          public_id: YYEXRWP
          time_zone:
          created_at: '2024-04-24T09:23:56.649Z'
          first_name: Bobby
          updated_at: '2024-04-24T09:23:56.871Z'
          twitter_url:
          website_url:
          linkedin_url:
          phone_number:
          workspace_id: 152039
          email_address: bobby@fuzzy.com
          instagram_url:
          unsubscribed_at:
          custom_attributes:
            preference: always yes
          last_notification_email_sent_at:
        api_version: 2
        created_at: '2025-05-21T12:18:59.938Z'
        page:
          id: 10
          public_id: BkDieW
          name: Great Page
        funnel:
          id: 2
          public_id: HxurSv
          name: Example Funnel

  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    after:
      name: after
      in: query
      required: false
      schema:
        type: string
      description: ID of item after which the collection should be returned. More examples and info about pagination [in our guides](https://developers.myclickfunnels.com/docs/pagination).
    sort_order:
      name: sort_order
      in: query
      description: Sort order of a list response. Use 'desc' to reverse the default 'asc' (ascending) sort order. Examples [in our guides](https://developers.myclickfunnels.com/docs/pagination).
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
    sort_property:
      name: sort_property
      in: query
      description: |
        Sort property of a list response. The default is id and thus the created_at order.
        If you sort by other properties, we additionally sort by id implicitly as a secondary sort property, so that you can rely on the sort order to be deterministic even if the main sort property ends up with the same values.
      required: false
      schema:
        type: string
        enum:
          - id
          - updated_at
    # This is used in two places in the `orders/invoices/_paths.yaml.erb so we have one component
    # for it here to avoid divergence. It doesn't seem to be possible to declare this inside the
    # _paths.yaml.erb file, the schema validation errors with `Token "InvoiceFilter" does not exist.`
    # during doc gen if you put it there under:
    #
    #   components:
    #     parameters:
    #       InvoiceFilter:
    #         name: filter
    #         ...
    InvoiceFilter:
      name: filter
      in: query
      description: |
        Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`. Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
      required: false
      schema:
        type: object
        properties:
          id:
            type: string
            description: A comma-separated list of Invoice IDs to filter by.
            example: 1,42
          status:
            type: string
            description: The status of the invoice to filter by.
            example: pending
          invoice_type:
            type: string
            description: The type of the invoice to filter by.
            example: one_time_sale
          invoice_number:
            type: string
            description: A comma-separated list of Invoice Numbers to filter by.
            example: "#1000,#1001"
          external_id:
            type: string
            description: A comma-separated list of External IDs to filter by.
            example: inv_1234567890,inv_0987654321
      style: deepObject
      explode: true

  headers:
    PaginationNext:
      description: "ID of the last item in the current response after which more records exist.
        You can use it in an `after` query parameter for cursor-based pagination to get to the next page."
      schema:
        type: string
    Link:
      description: "A direct link to the next page for the cursor-based pagination. It includes the
        `after` and the Pagination-Next ID value."
      schema:
        type: string
security:
  - BearerAuth: []
paths:
  /teams:
    get:
      tags:
        - Team
      summary: List Teams
      description: List all teams for the current account
      operationId: listTeams
      parameters:
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamAttributes"
              example:
                - id: 42000
                  public_id: jsIrgi
                  name: Example Team
                  time_zone: Pacific Time (US & Canada)
                  locale: en
                  created_at: '2025-05-21T12:18:59.963Z'
                  updated_at: '2025-05-21T12:18:59.963Z'
                  memberships: []
                - id: 42000
                  public_id: RANHST
                  name: Example Team
                  time_zone: Pacific Time (US & Canada)
                  locale: en
                  created_at: '2025-05-21T12:18:59.966Z'
                  updated_at: '2025-05-21T12:18:59.966Z'
                  memberships: []
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /teams/{id}:
    get:
      tags:
        - Team
      summary: Fetch Team
      description: Retrieve a single team
      operationId: fetchTeam
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamAttributes"
              example:
                id: 42000
                public_id: wRWzoO
                name: Example Team
                time_zone: Pacific Time (US & Canada)
                locale: en
                created_at: '2025-05-21T12:18:59.977Z'
                updated_at: '2025-05-21T12:18:59.977Z'
                memberships: []
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Team
      summary: Update Team
      description: List all teams for the current account
      operationId: updateTeam
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Team"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team:
                  type: object
                  $ref: "#/components/schemas/TeamParametersUpdate"
            example:
              team:
                name: Example Team
                time_zone: Pacific Time (US & Canada)
                locale: en
  
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamAttributes"
              example:
                id: 42000
                public_id: ZuszIE
                name: Example Team
                time_zone: Pacific Time (US & Canada)
                locale: en
                created_at: '2025-05-21T12:18:59.989Z'
                updated_at: '2025-05-21T12:18:59.989Z'
                memberships: []
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
        "422":
            description: Unprocessable Entity

  /users:
    get:
      tags:
        - User
      summary: List Users
      description: List all users for the current account
      operationId: listUsers
      parameters:
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserAttributes"
              example:
                - id: 9
                  public_id: xwEnMm
                  email: ressie@schimmel.io
                  first_name: Felecia
                  last_name: Schowalter
                  time_zone: Pacific Time (US & Canada)
                  locale: en
                  created_at: '2025-06-21T12:19:00.082Z'
                  updated_at: '2025-06-21T12:19:00.082Z'
                  memberships:
                  - id: 10
                    public_id: vYxaJB
                    team_id: 5
                    user_id: 9
                    user_first_name:
                    user_last_name:
                    user_profile_photo_id:
                    user_email: noreply+d1ac8ee985741674927bd396484619ca@bullettrain.co
                    added_by_id:
                    platform_agent_of_id: 5
                    role_ids:
                    - admin
                    created_at: '2025-05-26T09:56:27.294Z'
                    updated_at: '2025-05-26T09:56:27.299Z'
                    user:
                      id: 5
                      public_id: AvWkvE
                      name: My Team
                      time_zone: Eastern Time (US & Canada)
                      locale: en
                      created_at: '2025-05-26T09:56:27.074Z'
                      updated_at: '2025-05-26T14:18:30.244Z'
                      billing_subscriptions:
                      - id: 23
                        public_id: RvpgYp
                        team_id: 5
                        status: active
                        cycle_ends_at:
                        created_at: '2025-05-26T09:56:27.150Z'
                        updated_at: '2025-05-26T09:56:27.161Z'
                        included_prices:
                        - id: 23
                          subscription_id: 23
                          price_id: basic_monthly_2022
                          quantity: 1
                          created_at: '2025-05-26T09:56:27.161Z'
                          updated_at: '2025-05-26T09:56:27.161Z'
                - id: 10
                  public_id: cCGxtF
                  email: regine.simonis@little-schoen.biz
                  first_name: Devorah
                  last_name: Armstrong
                  time_zone: Pacific Time (US & Canada)
                  locale: en
                  created_at: '2025-06-21T12:19:00.169Z'
                  updated_at: '2025-06-21T12:19:00.169Z'
                  memberships:
                  - id: 11
                    public_id: OezDJK
                    team_id: 6
                    user_id: 10
                    user_first_name:
                    user_last_name:
                    user_profile_photo_id:
                    user_email:
                    added_by_id:
                    platform_agent_of_id:
                    role_ids:
                    - admin
                    created_at: '2025-05-26T09:56:30.573Z'
                    updated_at: '2025-05-26T09:56:30.596Z'
                    user:
                      id: 6
                      public_id: GJPOeQ
                      name: My Team
                      time_zone: Eastern Time (US & Canada)
                      locale: en
                      created_at: '2025-05-26T09:56:30.570Z'
                      updated_at: '2025-05-26T14:18:30.683Z'
                      billing_subscriptions:
                      - id: 24
                        public_id: qNlVYz
                        team_id: 6
                        status: active
                        cycle_ends_at:
                        created_at: '2025-05-26T09:56:30.639Z'
                        updated_at: '2025-05-26T09:56:30.651Z'
                        included_prices:
                        - id: 24
                          subscription_id: 24
                          price_id: basic_monthly_2022
                          quantity: 1
                          created_at: '2025-05-26T09:56:30.650Z'
                          updated_at: '2025-05-26T09:56:30.650Z'
                      - id: 25
                        public_id: bYQZvd
                        team_id: 6
                        status: active
                        cycle_ends_at:
                        created_at: '2025-05-26T09:56:33.927Z'
                        updated_at: '2025-05-26T09:56:34.085Z'
                        included_prices:
                        - id: 25
                          subscription_id: 25
                          price_id: free
                          quantity: 1
                          created_at: '2025-05-26T09:56:34.083Z'
                          updated_at: '2025-05-26T09:56:34.083Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /users/{id}:
    get:
      tags:
        - User
      summary: Fetch User
      description: Retrieve a single user
      operationId: fetchUser
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAttributes"
              example:
                id: 11
                public_id: HidvKc
                email: elijah@mitchell-stehr.co
                first_name: Aldo
                last_name: D'Amore
                time_zone: Pacific Time (US & Canada)
                locale: en
                created_at: '2025-06-21T12:19:00.294Z'
                updated_at: '2025-06-21T12:19:00.294Z'
                memberships:
                - id: 12
                  public_id: EYRpjo
                  team_id: 6
                  user_id: 11
                  user_first_name:
                  user_last_name:
                  user_profile_photo_id:
                  user_email: noreply+13c96a3c1eafd62cef38132836f31fdf@bullettrain.co
                  added_by_id:
                  platform_agent_of_id: 6
                  role_ids:
                  - admin
                  created_at: '2025-05-26T09:56:30.778Z'
                  updated_at: '2025-05-26T09:56:30.782Z'
                  user:
                    id: 6
                    public_id: GJPOeQ
                    name: My Team
                    time_zone: Eastern Time (US & Canada)
                    locale: en
                    created_at: '2025-05-26T09:56:30.570Z'
                    updated_at: '2025-05-26T14:18:30.683Z'
                    billing_subscriptions:
                    - id: 24
                      public_id: qNlVYz
                      team_id: 6
                      status: active
                      cycle_ends_at:
                      created_at: '2025-05-26T09:56:30.639Z'
                      updated_at: '2025-05-26T09:56:30.651Z'
                      included_prices:
                      - id: 24
                        subscription_id: 24
                        price_id: basic_monthly_2022
                        quantity: 1
                        created_at: '2025-05-26T09:56:30.650Z'
                        updated_at: '2025-05-26T09:56:30.650Z'
                    - id: 25
                      public_id: bYQZvd
                      team_id: 6
                      status: active
                      cycle_ends_at:
                      created_at: '2025-05-26T09:56:33.927Z'
                      updated_at: '2025-05-26T09:56:34.085Z'
                      included_prices:
                      - id: 25
                        subscription_id: 25
                        price_id: free
                        quantity: 1
                        created_at: '2025-05-26T09:56:34.083Z'
                        updated_at: '2025-05-26T09:56:34.083Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "User not found"

  
  "/teams/{team_id}/workspaces":
    get:
      tags:
      - Workspace
      summary: List Workspaces
      description: List workspaces for a team
      operationId: listWorkspaces
      parameters:
      - name: team_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WorkspaceAttributes"
              example:
              - id: 42000
                public_id: rbveVU
                team_id: 42000
                name: Example Workspace
                subdomain: example
                created_at: '2025-05-21T12:19:00.315Z'
                updated_at: '2025-05-21T12:19:00.315Z'
              - id: 42000
                public_id: siGAIQ
                team_id: 42000
                name: Example Workspace
                subdomain: example
                created_at: '2025-05-21T12:19:00.322Z'
                updated_at: '2025-05-21T12:19:00.322Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/workspaces/{id}":
    get:
      tags:
      - Workspace
      summary: Fetch Workspace
      description: Retrieve a workspace
      operationId: getWorkspaces
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceAttributes"
              example:
                id: 42000
                public_id: HTwgRc
                team_id: 42000
                name: Example Workspace
                subdomain: example
                created_at: '2025-05-21T12:19:00.328Z'
                updated_at: '2025-05-21T12:19:00.328Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Workspace
      summary: Update Workspace
      description: Update a workspace
      operationId: updateWorkspaces
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Workspace
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workspace:
                  type: object
                  "$ref": "#/components/schemas/WorkspaceParametersUpdate"
            example:
              "$ref": "#/components/schemas/WorkspaceParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceAttributes"
              example:
                id: 42000
                public_id: syihIT
                team_id: 42000
                name: Example Workspace
                subdomain: example
                created_at: '2025-05-21T12:19:00.332Z'
                updated_at: '2025-05-21T12:19:00.332Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  

  
  "/workspaces/{workspace_id}/contacts":
    get:
      tags:
      - Contact
      summary: List Contacts
      description: List contacts for the given workspace. By default, only identified
        contacts are shown so you won&#39;t see anonymous or GDPR-redacted contacts.
      operationId: listContacts
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            email_address:
              type: string
              description: A comma-separated list of email addresses to filter by.
              example: russel@clickfunnels.com,todd@clickfunnels.com
            id:
              type: string
              description: A comma-separated list of contact IDs to filter by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactAttributes"
              example:
              - id: 40
                public_id: dCHKcl
                workspace_id: 42000
                anonymous:
                email_address: test-fb00bb66eb3786a691f6@example.com
                first_name: Carri
                last_name: Pfeffer
                phone_number: 832.596.1909 x665
                time_zone: Pacific Time (US & Canada)
                uuid: 670be351-d133-4182-a251-69b219c9c049
                unsubscribed_at:
                last_notification_email_sent_at:
                fb_url: https://www.facebook.com/example
                twitter_url: https://twitter.com/example
                instagram_url:
                linkedin_url: https://www.linkedin.com/in/example
                website_url: https://example.com
                created_at: '2025-05-21T12:19:00.341Z'
                updated_at: '2025-05-21T12:19:00.341Z'
                tags:
                - id: 42
                  public_id: DOtgbK
                  name: Example Tag
                  color: "#4a53c2"
                  applied_at:
                custom_attributes:
                  CustomKey: MyText
                visits:
                  first_visit:
                    id: 16
                    public_id: RjEoYD
                    contact_id: 40
                    uuid: 3b4809bb-6359-485f-9263-bc2d1897a046
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/opt-in-step
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/opt-in-step
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-05-26T14:47:45.000Z'
                    created_at: '2025-05-26T14:47:48.956Z'
                    updated_at: '2025-05-26T14:48:04.976Z'
                  last_visit:
                  last_visit_with_utm:
              - id: 41
                public_id: GxVkgU
                workspace_id: 42000
                anonymous:
                email_address: test-6bd713c2cb718edead58@example.com
                first_name: Marlin
                last_name: Lynch
                phone_number: 633.890.3662
                time_zone: Pacific Time (US & Canada)
                uuid: d04182e0-4076-4856-91d2-8e6bc836dc42
                unsubscribed_at:
                last_notification_email_sent_at:
                fb_url: https://www.facebook.com/example
                twitter_url: https://twitter.com/example
                instagram_url:
                linkedin_url: https://www.linkedin.com/in/example
                website_url: https://example.com
                created_at: '2025-05-21T12:19:00.355Z'
                updated_at: '2025-05-21T12:19:00.355Z'
                tags:
                - id: 43
                  public_id: awBkbJ
                  name: Example Tag
                  color: "#00acdb"
                  applied_at:
                custom_attributes:
                  CustomKey: MyText
                visits:
                  first_visit:
                    id: 17
                    public_id: QvOXjz
                    contact_id: 41
                    uuid: 3137a51a-30ec-4aeb-b5d8-b8f89573b6ea
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/opt-in-step
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/opt-in-step
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-05-26T14:47:53.000Z'
                    created_at: '2025-05-26T14:47:57.970Z'
                    updated_at: '2025-05-26T14:48:05.201Z'
                  last_visit:
                  last_visit_with_utm:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Contact
      summary: Create Contact
      description: Add a new contact to the workspace
      operationId: createContacts
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Contact
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  "$ref": "#/components/schemas/ContactParameters"
            example:
              "$ref": "#/components/schemas/ContactParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactAttributes"
              example:
                id: 43
                public_id: FdyaKi
                workspace_id: 42000
                anonymous:
                email_address: test-333924761ca7febf24f5@example.com
                first_name: Eleanora
                last_name: Satterfield
                phone_number: 1-766-054-5924
                time_zone: Pacific Time (US & Canada)
                uuid: 2583febe-51eb-4aad-9559-156842f3c166
                unsubscribed_at:
                last_notification_email_sent_at:
                fb_url: https://www.facebook.com/example
                twitter_url: https://twitter.com/example
                instagram_url:
                linkedin_url: https://www.linkedin.com/in/example
                website_url: https://example.com
                created_at: '2025-05-21T12:19:00.401Z'
                updated_at: '2025-05-21T12:19:00.401Z'
                tags:
                - id: 45
                  public_id: WYOird
                  name: Example Tag
                  color: "#886b00"
                  applied_at:
                custom_attributes:
                  CustomKey: MyText
                visits:
                  first_visit:
                    id: 19
                    public_id: oNwkNx
                    contact_id: 43
                    uuid: 6d85aed0-a616-4df1-a435-55ff0c958b80
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/opt-in-step
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/opt-in-step
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-05-26T14:48:03.000Z'
                    created_at: '2025-05-26T14:48:07.969Z'
                    updated_at: '2025-05-26T14:48:10.662Z'
                  last_visit:
                  last_visit_with_utm:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/contacts/{id}":
    get:
      tags:
      - Contact
      summary: Fetch Contact
      description: Retrieve a contact
      operationId: getContacts
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactAttributes"
              example:
                id: 42
                public_id: sRCUVr
                workspace_id: 42000
                anonymous:
                email_address: test-4893754e6e1b34274bf4@example.com
                first_name: Cassondra
                last_name: Berge
                phone_number: 1-553-890-7517
                time_zone: Pacific Time (US & Canada)
                uuid: 273034cc-3b28-4292-b075-f960321c1bed
                unsubscribed_at:
                last_notification_email_sent_at:
                fb_url: https://www.facebook.com/example
                twitter_url: https://twitter.com/example
                instagram_url:
                linkedin_url: https://www.linkedin.com/in/example
                website_url: https://example.com
                created_at: '2025-05-21T12:19:00.382Z'
                updated_at: '2025-05-21T12:19:00.382Z'
                tags:
                - id: 44
                  public_id: XOHevb
                  name: Example Tag
                  color: "#b32498"
                  applied_at:
                custom_attributes:
                  CustomKey: MyText
                visits:
                  first_visit:
                    id: 18
                    public_id: wjGJvG
                    contact_id: 42
                    uuid: f21823e2-366a-46f3-90e5-04c71efe8256
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/opt-in-step
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/opt-in-step
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-05-26T14:47:42.000Z'
                    created_at: '2025-05-26T14:48:05.725Z'
                    updated_at: '2025-05-26T14:48:05.751Z'
                  last_visit:
                    id: 22
                    public_id: OYypNG
                    contact_id: 42
                    uuid: 005c207b-195c-4677-9fdf-02fe8d8612dd
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/opt-in-step?pp=skip
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/opt-in-step?pp=skip
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-06-05T08:48:25.000Z'
                    created_at: '2025-06-05T08:48:32.918Z'
                    updated_at: '2025-06-05T08:48:32.954Z'
                  last_visit_with_utm:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Contact
      summary: Update Contact
      description: Update a contact
      operationId: updateContacts
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Contact
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  "$ref": "#/components/schemas/ContactParametersUpdate"
            example:
              "$ref": "#/components/schemas/ContactParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactAttributes"
              example:
                id: 44
                public_id: sUwTIr
                workspace_id: 42000
                anonymous:
                email_address: test-cea6ada768185f8051a2@example.com
                first_name: Santos
                last_name: Murphy
                phone_number: 1-972-018-4402 x8504
                time_zone: Pacific Time (US & Canada)
                uuid: 66438beb-0fce-4395-a9a0-f56ec80ea282
                unsubscribed_at:
                last_notification_email_sent_at:
                fb_url: https://www.facebook.com/example
                twitter_url: https://twitter.com/example
                instagram_url:
                linkedin_url: https://www.linkedin.com/in/example
                website_url: https://example.com
                created_at: '2025-05-21T12:19:00.421Z'
                updated_at: '2025-05-21T12:19:00.421Z'
                tags:
                - id: 46
                  public_id: FYebDK
                  name: Example Tag
                  color: "#63014c"
                  applied_at:
                custom_attributes:
                  CustomKey: MyText
                visits:
                  first_visit:
                    id: 20
                    public_id: wNVajZ
                    contact_id: 44
                    uuid: d0bf87f2-7699-464b-9b7d-ef9b244a17e5
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/my-second-funnel
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/my-second-funnel
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-05-28T06:48:27.000Z'
                    created_at: '2025-05-28T06:48:35.676Z'
                    updated_at: '2025-05-28T06:48:35.736Z'
                  last_visit:
                  last_visit_with_utm:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Contact
      summary: Remove Contact
      description: Delete a contact
      operationId: removeContacts
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
  "/contacts/{id}/gdpr_destroy":
    delete:
      tags:
      - Contact
      summary: Redact Contact
      description: This will destroy all personally identifiable information for a contact,
        including their name and phone number, but does not delete the contact record
        itself. This cannot be undone.
      operationId: gdpr_destroyContacts
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
  "/workspaces/{workspace_id}/contacts/upsert":
    post:
      tags:
      - Contact
      summary: Upsert a Contact
      description: Creates or updates a Contact, matching on the email address. If the
        Contact does not exist, it will be created. If the Contact does exist, it will
        be updated. It is not possible to delete a Contact via this endpoint. It is
        not possible to reset properties of a Contact by passing empty values. E.g.
        passing `null` for `first_name` or an empty array for `tag_ids` won&#39;t update
        previous values. To do that you would instead need to use the `Update Contact`
        endpoint.
      operationId: upsertContacts
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Contact to create or update, matching on the email address. Note
          that properties of a Contact are not reset when passed empty values, e.g.
          passing `null` for `first_name` or an empty array for `tag_ids` won't update
          previous values. To do that you would instead use the `Update Contact` endpoint.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contact:
                  type: object
                  "$ref": "#/components/schemas/ContactParameters"
            example:
              "$ref": "#/components/schemas/ContactParameters/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactAttributes"
              example:
                id: 43
                public_id: FdyaKi
                workspace_id: 42000
                anonymous:
                email_address: test-333924761ca7febf24f5@example.com
                first_name: Eleanora
                last_name: Satterfield
                phone_number: 1-766-054-5924
                time_zone: Pacific Time (US & Canada)
                uuid: 2583febe-51eb-4aad-9559-156842f3c166
                unsubscribed_at:
                last_notification_email_sent_at:
                fb_url: https://www.facebook.com/example
                twitter_url: https://twitter.com/example
                instagram_url:
                linkedin_url: https://www.linkedin.com/in/example
                website_url: https://example.com
                created_at: '2025-05-21T12:19:00.401Z'
                updated_at: '2025-05-21T12:19:00.401Z'
                tags:
                - id: 45
                  public_id: WYOird
                  name: Example Tag
                  color: "#886b00"
                  applied_at:
                custom_attributes:
                  CustomKey: MyText
                visits:
                  first_visit:
                    id: 19
                    public_id: oNwkNx
                    contact_id: 43
                    uuid: 6d85aed0-a616-4df1-a435-55ff0c958b80
                    utm_source:
                    utm_medium:
                    utm_campaign:
                    utm_term:
                    utm_content:
                    ip: 127.0.0.1
                    user_agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36
                      (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36
                    referrer: https://myteam.myclickfunnels.test/opt-in-step
                    referring_domain: myteam.myclickfunnels.test
                    landing_page: https://myteam.myclickfunnels.test/opt-in-step
                    browser: Chrome
                    os: Mac
                    device_type: Desktop
                    started_at: '2025-05-26T14:48:03.000Z'
                    created_at: '2025-05-26T14:48:07.969Z'
                    updated_at: '2025-05-26T14:48:10.662Z'
                  last_visit:
                  last_visit_with_utm:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactAttributes"
              example:
                "$ref": "#/components/schemas/ContactAttributes/example"

  
  "/contacts/{contact_id}/applied_tags":
    get:
      tags:
      - Contacts::AppliedTag
      summary: List Applied Tags
      description: List the applied tags for a contact
      operationId: listContactsAppliedTags
      parameters:
      - name: contact_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of applied tag IDs to filter by.
              example: 142
            tag_id:
              type: string
              description: A comma-separated list of tag IDs to filter by.
              example: cool-user,gold
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactsAppliedTagAttributes"
              example:
              - id: 2
                public_id: hfTjBu
                contact_id: 1
                tag_id: 47
                created_at: '2025-06-14T12:19:00.446Z'
                updated_at: '2025-06-14T12:19:00.446Z'
                tag:
                  public_id: neoXZj
                  name: Example Tag
                  color: "#200606"
              - id: 3
                public_id: fnCQxI
                contact_id: 1
                tag_id: 48
                created_at: '2025-06-14T12:19:00.448Z'
                updated_at: '2025-06-14T12:19:00.448Z'
                tag:
                  public_id: RjgDNv
                  name: Example Tag
                  color: "#2bcaeb"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Contacts::AppliedTag
      summary: Create Applied Tag
      description: Assign a tag to a contact by creating an applied tag
      operationId: createContactsAppliedTags
      parameters:
      - name: contact_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Applied Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts_applied_tag:
                  type: object
                  "$ref": "#/components/schemas/ContactsAppliedTagParameters"
            example:
              "$ref": "#/components/schemas/ContactsAppliedTagParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactsAppliedTagAttributes"
              example:
                id: 5
                public_id: jpuTFS
                contact_id: 1
                tag_id: 50
                created_at: '2025-06-14T12:19:00.459Z'
                updated_at: '2025-06-14T12:19:00.459Z'
                tag:
                  public_id: RjEDoe
                  name: Example Tag
                  color: "#0cd255"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/contacts/applied_tags/{id}":
    get:
      tags:
      - Contacts::AppliedTag
      summary: Fetch Applied Tag
      description: Retrieve an applied tag for a contact
      operationId: getContactsAppliedTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactsAppliedTagAttributes"
              example:
                id: 4
                public_id: jCxumn
                contact_id: 1
                tag_id: 49
                created_at: '2025-06-14T12:19:00.454Z'
                updated_at: '2025-06-14T12:19:00.454Z'
                tag:
                  public_id: MjnwNv
                  name: Example Tag
                  color: "#e8a332"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Contacts::AppliedTag
      summary: Remove Applied Tag
      description: Remove a tag from a contact by deleting an applied tag
      operationId: removeContactsAppliedTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/workspaces/{workspace_id}/contacts/tags":
    get:
      tags:
      - Contacts::Tag
      summary: List Tags
      description: List all Contact Tags for your workspace
      operationId: listContactsTags
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of tag IDs to filter by.
              example: 142
            name:
              type: string
              description: A comma-separated list of tag names to filter by.
              example: cool-user,gold
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactsTagAttributes"
              example:
              - id: 56
                public_id: vnAGEP
                workspace_id: 42000
                name: Example Tag
                color: "#6e7104"
                created_at: '2025-06-21T12:19:00.485Z'
                updated_at: '2025-06-21T12:19:00.485Z'
              - id: 57
                public_id: FIxavo
                workspace_id: 42000
                name: Example Tag
                color: "#a899b1"
                created_at: '2025-06-21T12:19:00.488Z'
                updated_at: '2025-06-21T12:19:00.488Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Contacts::Tag
      summary: Create Tag
      description: Add a new Contact Tag to your Workspace
      operationId: createContactsTags
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts_tag:
                  type: object
                  "$ref": "#/components/schemas/ContactsTagParameters"
            example:
              "$ref": "#/components/schemas/ContactsTagParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactsTagAttributes"
              example:
                id: 59
                public_id: qimgzQ
                workspace_id: 42000
                name: Example Tag
                color: "#b6135c"
                created_at: '2025-06-21T12:19:00.496Z'
                updated_at: '2025-06-21T12:19:00.496Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/contacts/tags/{id}":
    get:
      tags:
      - Contacts::Tag
      summary: Fetch Tag
      description: Retrieve a single Contact Tag
      operationId: getContactsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactsTagAttributes"
              example:
                id: 58
                public_id: LAvHTq
                workspace_id: 42000
                name: Example Tag
                color: "#3958de"
                created_at: '2025-06-21T12:19:00.492Z'
                updated_at: '2025-06-21T12:19:00.492Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Contacts::Tag
      summary: Update Tag
      description: Update a Contact Tag
      operationId: updateContactsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contacts_tag:
                  type: object
                  "$ref": "#/components/schemas/ContactsTagParametersUpdate"
            example:
              "$ref": "#/components/schemas/ContactsTagParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactsTagAttributes"
              example:
                id: 61
                public_id: ODTrfJ
                workspace_id: 42000
                name: Example Tag
                color: "#b019e5"
                created_at: '2025-06-21T12:19:00.502Z'
                updated_at: '2025-06-21T12:19:00.502Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Contacts::Tag
      summary: Remove Tag
      description: Delete a Contact Tag from your workspace
      operationId: removeContactsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  /workspaces/{workspace_id}/courses:
    get:
      tags:
        - Course
      summary: "List Courses"
      description: List courses for a team
      operationId: listCourses
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CourseAttributes"
              example:
                - id: 7
                  public_id: kDsoXP
                  title: Example Course
                  published_at: '2025-06-14T12:19:00.000Z'
                  root_section_id:
                  description: Quis magnam rerum. Minima velit est. Beatae aut sit.
                  current_path:
                  sharing_fingerprint:
                  show_in_community: false
                  show_to_non_members: false
                  upgrade_url:
                  redirect_to_full_course: true
                  unauthorized_redirect_url:
                  comments_enabled: false
                  created_at: '2025-06-14T12:19:00.530Z'
                  updated_at: '2025-06-14T12:19:00.530Z'
                  image_url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
                - id: 8
                  public_id: LRfEqm
                  title: Example Course
                  published_at: '2025-06-14T12:19:00.000Z'
                  root_section_id:
                  description: Minus ipsum excepturi. Tempore eos dolorem. Eum id ut.
                  current_path:
                  sharing_fingerprint:
                  show_in_community: false
                  show_to_non_members: false
                  upgrade_url:
                  redirect_to_full_course: true
                  unauthorized_redirect_url:
                  comments_enabled: false
                  created_at: '2025-06-14T12:19:00.540Z'
                  updated_at: '2025-06-14T12:19:00.540Z'
                  image_url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
  /courses/{id}:
    get:
      tags:
        - Course
      summary: "Fetch Course"
      description: Retrieve a course
      operationId: getCourses
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CourseAttributes"
              example:
                id: 9
                public_id: ndrUWO
                title: Example Course
                published_at: '2025-06-14T12:19:00.000Z'
                root_section_id:
                description: Nostrum unde est. Rerum illum ut. Ut et aspernatur.
                current_path:
                sharing_fingerprint:
                show_in_community: false
                show_to_non_members: false
                upgrade_url:
                redirect_to_full_course: true
                unauthorized_redirect_url:
                comments_enabled: false
                created_at: '2025-06-14T12:19:00.554Z'
                updated_at: '2025-06-14T12:19:00.554Z'
                image_url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  
  "/courses/{course_id}/enrollments":
    get:
      tags:
      - Courses::Enrollment
      summary: List Enrollments
      description: List enrollments for a course
      operationId: listCoursesEnrollments
      parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            contact_id:
              type: string
              description: A comma-separated list of contact IDs to filter by.
              example: 142
            id:
              type: string
              description: A comma-separated list of enrollment IDs to filter by.
              example: 123
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CoursesEnrollmentAttributes"
              example:
              - id: 3
                public_id: hUtdEL
                contact_id: 45
                course_id: 16
                created_at: '2025-04-21T12:19:00.750Z'
                updated_at: '2025-05-21T12:19:00.750Z'
                suspended: false
                suspension_reason: Call in to reapply after robot incident
                current_path: "/enrollments/d31e968d639d80d291c98cfe511edda2f8ccb6c561c74dab3633e5b07629622833"
                origination_source_type: Membership
                origination_source_id: 52
              - id: 4
                public_id: aUuboX
                contact_id: 46
                course_id: 17
                created_at: '2025-04-21T12:19:00.862Z'
                updated_at: '2025-05-21T12:19:00.862Z'
                suspended: false
                suspension_reason: Call in to reapply after robot incident
                current_path: "/enrollments/9b33eb6c8f8cac413b684864ba266afcb72ee3210f0d3b70ddba87c99dad6ec701"
                origination_source_type: Membership
                origination_source_id: 53
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Courses::Enrollment
      summary: Create Enrollment
      description: Add a new enrollment
      operationId: createCoursesEnrollments
      parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Enrollment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courses_enrollment:
                  type: object
                  "$ref": "#/components/schemas/CoursesEnrollmentParameters"
            example:
              "$ref": "#/components/schemas/CoursesEnrollmentParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesEnrollmentAttributes"
              example:
                id: 6
                public_id: xhZmrj
                contact_id: 48
                course_id: 19
                created_at: '2025-04-21T12:19:01.127Z'
                updated_at: '2025-05-21T12:19:01.127Z'
                suspended: false
                suspension_reason: Call in to reapply after robot incident
                current_path: "/enrollments/b41412cb0a6c8696f6f3dfdaf096c59ccc588a5eaf7b5a339821c3b83d95fd9d07"
                origination_source_type: Membership
                origination_source_id: 55
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/courses/enrollments/{id}":
    get:
      tags:
      - Courses::Enrollment
      summary: Fetch Enrollment
      description: Retrieve an enrollment
      operationId: getCoursesEnrollments
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesEnrollmentAttributes"
              example:
                id: 5
                public_id: oPtCUx
                contact_id: 47
                course_id: 18
                created_at: '2025-04-21T12:19:01.003Z'
                updated_at: '2025-05-21T12:19:01.003Z'
                suspended: false
                suspension_reason: Call in to reapply after robot incident
                current_path: "/enrollments/156bec4a6e975ab4df6482d7aa4a3817566cdd4adf039d2f6c0fed327fc780e099"
                origination_source_type: Membership
                origination_source_id: 54
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Courses::Enrollment
      summary: Update Enrollment
      description: Update an enrollment
      operationId: updateCoursesEnrollments
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Enrollment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courses_enrollment:
                  type: object
                  "$ref": "#/components/schemas/CoursesEnrollmentParametersUpdate"
            example:
              "$ref": "#/components/schemas/CoursesEnrollmentParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesEnrollmentAttributes"
              example:
                id: 8
                public_id: dUzEWV
                contact_id: 50
                course_id: 21
                created_at: '2025-04-21T12:19:01.365Z'
                updated_at: '2025-05-21T12:19:01.365Z'
                suspended: false
                suspension_reason: Call in to reapply after robot incident
                current_path: "/enrollments/3a1ae913aaf9c93cde103cbffb8112d83690f769096fa0afd64d860c0533294a8e"
                origination_source_type: Membership
                origination_source_id: 57
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/courses/{course_id}/sections":
    get:
      tags:
      - Courses::Section
      summary: List Sections
      description: List Sections
      operationId: listCoursesSections
      parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - name: sort_property
        in: query
        description: |
          Sort property of a list response. The default is id and thus the created_at order.
          If you sort by other properties, we additionally sort by id implicitly as a secondary sort property, so that you can rely on the sort order to be deterministic even if the main sort property ends up with the same values.
        required: false
        schema:
          type: string
          enum:
          - id
          - updated_at
          - sort_order
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CoursesSectionAttributes"
              example:
              - id: 4
                public_id: mnMzbN
                course_id: 25
                title: Module 4
                published_at: '2025-04-21T12:19:01.000Z'
                description: Example Course Section
                days_till_drip_access: 5
                blocker_section_id:
                blocker_lesson_id:
                current_path: "/section-example"
                is_hidden_from_non_members: true
                upgrade_url:
                parent_id:
                sort_order: 3
                created_at: '2025-04-21T12:19:01.745Z'
                updated_at: '2025-05-21T12:19:01.745Z'
              - id: 5
                public_id: tNZuva
                course_id: 26
                title: Module 5
                published_at: '2025-04-21T12:19:01.000Z'
                description: Example Course Section
                days_till_drip_access: 5
                blocker_section_id:
                blocker_lesson_id:
                current_path: "/section-example"
                is_hidden_from_non_members: true
                upgrade_url:
                parent_id:
                sort_order: 4
                created_at: '2025-04-21T12:19:01.753Z'
                updated_at: '2025-05-21T12:19:01.753Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/courses/sections/{id}":
    get:
      tags:
      - Courses::Section
      summary: Fetch Section
      description: Fetch Section
      operationId: getCoursesSections
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesSectionAttributes"
              example:
                id: 6
                public_id: TuqBeD
                course_id: 27
                title: Module 6
                published_at: '2025-04-21T12:19:01.000Z'
                description: Example Course Section
                days_till_drip_access: 5
                blocker_section_id:
                blocker_lesson_id:
                current_path: "/section-example"
                is_hidden_from_non_members: true
                upgrade_url:
                parent_id:
                sort_order: 5
                created_at: '2025-04-21T12:19:01.765Z'
                updated_at: '2025-05-21T12:19:01.765Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Courses::Section
      summary: Update Section
      description: Update Section
      operationId: updateCoursesSections
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Section
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courses_section:
                  type: object
                  "$ref": "#/components/schemas/CoursesSectionParametersUpdate"
            example:
              "$ref": "#/components/schemas/CoursesSectionParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesSectionAttributes"
              example:
                id: 9
                public_id: MLEDfz
                course_id: 30
                title: Module 9
                published_at: '2025-04-21T12:19:01.000Z'
                description: Example Course Section
                days_till_drip_access: 5
                blocker_section_id:
                blocker_lesson_id:
                current_path: "/section-example"
                is_hidden_from_non_members: true
                upgrade_url:
                parent_id:
                sort_order: 8
                created_at: '2025-04-21T12:19:01.797Z'
                updated_at: '2025-05-21T12:19:01.797Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/courses/sections/{section_id}/lessons":
    get:
      tags:
      - Courses::Lesson
      summary: List Lessons
      description: List Lessons
      operationId: listCoursesLessons
      parameters:
      - name: section_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - name: sort_property
        in: query
        description: |
          Sort property of a list response. The default is id and thus the created_at order.
          If you sort by other properties, we additionally sort by id implicitly as a secondary sort property, so that you can rely on the sort order to be deterministic even if the main sort property ends up with the same values.
        required: false
        schema:
          type: string
          enum:
          - id
          - updated_at
          - sort_order
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CoursesLessonAttributes"
              example:
              - id: 3
                public_id: gOykpL
                title: Lesson 3
                body: Example Lesson
                section_id: 13
                published_at: '2025-04-21T12:19:01.000Z'
                current_path:
                sort_order: 2
                created_at: '2025-04-21T12:19:01.846Z'
                updated_at: '2025-05-21T12:19:01.846Z'
              - id: 4
                public_id: NtXGEq
                title: Lesson 4
                body: Example Lesson
                section_id: 14
                published_at: '2025-04-21T12:19:01.000Z'
                current_path:
                sort_order: 3
                created_at: '2025-04-21T12:19:01.857Z'
                updated_at: '2025-05-21T12:19:01.857Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/courses/lessons/{id}":
    get:
      tags:
      - Courses::Lesson
      summary: Fetch Lesson
      description: Fetch Lesson
      operationId: getCoursesLessons
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesLessonAttributes"
              example:
                id: 5
                public_id: adnVmb
                title: Lesson 5
                body: Example Lesson
                section_id: 15
                published_at: '2025-04-21T12:19:01.000Z'
                current_path:
                sort_order: 4
                created_at: '2025-04-21T12:19:01.869Z'
                updated_at: '2025-05-21T12:19:01.869Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Courses::Lesson
      summary: Update Lesson
      description: Update Lesson
      operationId: updateCoursesLessons
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Lesson
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courses_lesson:
                  type: object
                  "$ref": "#/components/schemas/CoursesLessonParametersUpdate"
            example:
              "$ref": "#/components/schemas/CoursesLessonParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesLessonAttributes"
              example:
                id: 8
                public_id: yxdDAq
                title: Lesson 8
                body: Example Lesson
                section_id: 18
                published_at: '2025-04-21T12:19:01.000Z'
                current_path:
                sort_order: 7
                created_at: '2025-04-21T12:19:01.937Z'
                updated_at: '2025-05-21T12:19:01.937Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/courses/{course_id}/lesson_completions":
    get:
      tags:
      - Courses::LessonCompletion
      summary: List Lesson Completions
      description: List of enrollment-completion records showing which lessons have
        been completed by which enrollments. You can filter on one or more `enrollment_id`
        or `lesson_id` records (see filter params).
      operationId: listCoursesLessonCompletions
      parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            enrollment_id:
              type: string
              description: A comma-separated list of enrollement IDs to filter by.
              example: 142
            lesson_id:
              type: string
              description: A comma-separated list of lesson IDs to filter by.
              example: 123
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CoursesLessonCompletionAttributes"
              example:
              - id: 2
                public_id: kjKhnC
                enrollment_id: 12
                lesson_id: 12
                completed_at: '2025-06-21T12:18:02.000Z'
              - id: 3
                public_id: qoxsdM
                enrollment_id: 13
                lesson_id: 13
                completed_at: '2025-06-21T12:18:02.000Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Courses::LessonCompletion
      summary: Create Lesson Completion
      description: Mark a lesson as completed by a specific enrollment. You can only
        mark a lesson as completed once. Subsequent completions for the same lesson
        by the same enrollment will return a conflict error.
      operationId: createCoursesLessonCompletions
      parameters:
      - name: course_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Lesson Completion
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courses_lesson_completion:
                  type: object
                  "$ref": "#/components/schemas/CoursesLessonCompletionParameters"
            example:
              "$ref": "#/components/schemas/CoursesLessonCompletionParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesLessonCompletionAttributes"
              example:
                id: 5
                public_id: VLUYIJ
                enrollment_id: 15
                lesson_id: 15
                completed_at: '2025-06-21T12:18:02.000Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/courses/lesson_completions/{id}":
    get:
      tags:
      - Courses::LessonCompletion
      summary: Fetch Lesson Completion
      description: Retrieve a enrollment-lesson completion record
      operationId: getCoursesLessonCompletions
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CoursesLessonCompletionAttributes"
              example:
                id: 4
                public_id: YAtnof
                enrollment_id: 14
                lesson_id: 14
                completed_at: '2025-06-21T12:18:02.000Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Courses::LessonCompletion
      summary: Remove Lesson Completion
      description: Unmark a lesson as completed. This action deletes the record.
      operationId: removeCoursesLessonCompletions
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  /workspaces/{workspace_id}/forms:
    get:
      tags:
        - Form
      summary: "List Forms"
      description: List forms for a workspace
      operationId: listForms
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormAttributes"
              example:
                - id: 136
                  public_id: FbQjVs
                  workspace_id: 42000
                  name: Example Form
                  created_at: '2025-06-21T12:19:03.172Z'
                  updated_at: '2025-06-21T12:19:03.172Z'
                - id: 137
                  public_id: FeKLXM
                  workspace_id: 42000
                  name: Example Form
                  created_at: '2025-06-21T12:19:03.175Z'
                  updated_at: '2025-06-21T12:19:03.175Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Form
      summary: "Create Form"
      description: Add a new form 
      operationId: createForms
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Form"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form:
                  type: object
                  $ref: "#/components/schemas/FormParameters"
            example:
              $ref: "#/components/schemas/FormParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormAttributes"
              example:
                id: 139
                public_id: rQJZeY
                workspace_id: 42000
                name: Example Form
                created_at: '2025-06-21T12:19:03.187Z'
                updated_at: '2025-06-21T12:19:03.187Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /forms/{id}:
    get:
      tags:
        - Form
      summary: "Fetch Form"
      description: Retrieve a form
      operationId: getForms
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormAttributes"
              example:
                id: 138
                public_id: kWjYqN
                workspace_id: 42000
                name: Example Form
                created_at: '2025-06-21T12:19:03.181Z'
                updated_at: '2025-06-21T12:19:03.181Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Form
      summary: "Update Form"
      description: Update a form
      operationId: updateForms
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Form"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                form:
                  type: object
                  $ref: "#/components/schemas/FormParametersUpdate"
            example:
              $ref: "#/components/schemas/FormParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormAttributes"
              example:
                id: 141
                public_id: kRgOhK
                workspace_id: 42000
                name: Example Form
                created_at: '2025-06-21T12:19:03.201Z'
                updated_at: '2025-06-21T12:19:03.201Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Form
      summary: "Remove Form"
      description: Delete a form
      operationId: removeForms
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /forms/{form_id}/field_sets:
    get:
      tags:
        - Forms::FieldSet
      summary: "List Field Sets"
      description: List field sets for a form
      operationId: listFormsFieldSets
      parameters:
        - name: form_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormsFieldSetAttributes"
              example:
                - id: 134
                  public_id: zKgMsO
                  form_id: 145
                  title: Example Field Set
                  created_at: '2025-06-21T12:19:03.224Z'
                  updated_at: '2025-06-21T12:19:03.224Z'
                - id: 135
                  public_id: LAYtRo
                  form_id: 146
                  title: Example Field Set
                  created_at: '2025-06-21T12:19:03.227Z'
                  updated_at: '2025-06-21T12:19:03.227Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Forms::FieldSet
      summary: "Create Field Set"
      description: Add a new field set 
      operationId: createFormsFieldSets
      parameters:
        - name: form_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Field Set"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_field_set:
                  type: object
                  $ref: "#/components/schemas/FormsFieldSetParameters"
            example:
              $ref: "#/components/schemas/FormsFieldSetParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsFieldSetAttributes"
              example:
                id: 137
                public_id: GSBxmQ
                form_id: 148
                title: Example Field Set
                created_at: '2025-06-21T12:19:03.237Z'
                updated_at: '2025-06-21T12:19:03.237Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /forms/field_sets/{id}:
    get:
      tags:
        - Forms::FieldSet
      summary: "Fetch Field Set"
      description: Retrieve a field set
      operationId: getFormsFieldSets
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsFieldSetAttributes"
              example:
                id: 136
                public_id: pxJgKA
                form_id: 147
                title: Example Field Set
                created_at: '2025-06-21T12:19:03.232Z'
                updated_at: '2025-06-21T12:19:03.232Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Forms::FieldSet
      summary: "Update Field Set"
      description: Update a field set
      operationId: updateFormsFieldSets
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Field Set"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_field_set:
                  type: object
                  $ref: "#/components/schemas/FormsFieldSetParametersUpdate"
            example:
              $ref: "#/components/schemas/FormsFieldSetParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsFieldSetAttributes"
              example:
                id: 139
                public_id: Pcswpj
                form_id: 150
                title: Example Field Set
                created_at: '2025-06-21T12:19:03.245Z'
                updated_at: '2025-06-21T12:19:03.245Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Forms::FieldSet
      summary: "Remove Field Set"
      description: Delete a field set
      operationId: removeFormsFieldSets
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  
  "/forms/field_sets/{field_set_id}/fields":
    get:
      tags:
      - Forms::Field
      summary: List Fields
      description: List fields for a field set
      operationId: listFormsFields
      parameters:
      - name: field_set_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FormsFieldAttributes"
              example:
              - id: 133
                public_id: IhPUAW
                field_set_id: 143
                label: MyString
                field_type: MyString
                allow_multiple: false
                key: CustomKey
                hidden: false
                created_at: '2025-06-21T12:19:03.266Z'
                updated_at: '2025-06-21T12:19:03.266Z'
              - id: 134
                public_id: mjQyMd
                field_set_id: 144
                label: MyString
                field_type: MyString
                allow_multiple: false
                key: CustomKey
                hidden: false
                created_at: '2025-06-21T12:19:03.272Z'
                updated_at: '2025-06-21T12:19:03.272Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Forms::Field
      summary: Create Field
      description: Add a new field
      operationId: createFormsFields
      parameters:
      - name: field_set_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Field
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_field:
                  type: object
                  "$ref": "#/components/schemas/FormsFieldParameters"
            example:
              "$ref": "#/components/schemas/FormsFieldParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FormsFieldAttributes"
              example:
                id: 136
                public_id: cuNthC
                field_set_id: 146
                label: MyString
                field_type: MyString
                allow_multiple: false
                key: CustomKey
                hidden: false
                created_at: '2025-06-21T12:19:03.289Z'
                updated_at: '2025-06-21T12:19:03.289Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/forms/fields/{id}":
    get:
      tags:
      - Forms::Field
      summary: Fetch Field
      description: Retrieve a field
      operationId: getFormsFields
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FormsFieldAttributes"
              example:
                id: 135
                public_id: hORwqe
                field_set_id: 145
                label: MyString
                field_type: MyString
                allow_multiple: false
                key: CustomKey
                hidden: false
                created_at: '2025-06-21T12:19:03.281Z'
                updated_at: '2025-06-21T12:19:03.281Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Forms::Field
      summary: Update Field
      description: Update a field
      operationId: updateFormsFields
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Field
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_field:
                  type: object
                  "$ref": "#/components/schemas/FormsFieldParametersUpdate"
            example:
              "$ref": "#/components/schemas/FormsFieldParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FormsFieldAttributes"
              example:
                id: 137
                public_id: cwmOrA
                field_set_id: 147
                label: MyString
                field_type: MyString
                allow_multiple: false
                key: CustomKey
                hidden: false
                created_at: '2025-06-21T12:19:03.297Z'
                updated_at: '2025-06-21T12:19:03.297Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Forms::Field
      summary: Remove Field
      description: Delete a field
      operationId: removeFormsFields
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
  "/forms/field_sets/{field_set_id}/fields/reorder":
    post:
      tags:
      - Forms::Field
      summary: Reorder Fields
      description: Reorders the fields of a field set.
      operationId: reorderFormsFields
      parameters:
      - name: field_set_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ordered_field_ids:
                    type: array
                    items:
                      type: string
                    description: An array of field IDs in the desired order.
              example:
                ordered_field_ids:
                - 5
                - 4
                - 3
                - 2
                - 1
        '404':
          description: Not Found
      requestBody:
        description: |
          Reordering
  
  
          The reordering endpoint expects an array of IDs in the desired order to be passed to the `ids_in_order` parameter. For example, `{ids_in_order: [1,2,3,4,5]}`.
        required: true
        content:
          application/json:
            schema:
              type: array
              properties:
                ids_in_order:
                  type: array
                  items:
                    type: integer
                  description: An array of field IDs in the desired order.
              example:
                ids_in_order:
                - 5
                - 4
                - 3
                - 2
                - 1

  /forms/fields/{field_id}/options:
    get:
      tags:
        - Forms::Fields::Option
      summary: "List Options"
      description: List options for a field
      operationId: listFormsFieldsOptions
      parameters:
        - name: field_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormsFieldsOptionAttributes"
              example:
                - id: 408
                  public_id: oqbuPC
                  field_id: 138
                  label: aut
                  created_at: '2025-06-21T12:19:03.311Z'
                  updated_at: '2025-06-21T12:19:03.311Z'
                - id: 411
                  public_id: BDpFXH
                  field_id: 139
                  label: eligendi
                  created_at: '2025-06-21T12:19:03.317Z'
                  updated_at: '2025-06-21T12:19:03.317Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Forms::Fields::Option
      summary: "Create Option"
      description: Add a new option to a field
      operationId: createFormsFieldsOptions
      parameters:
        - name: field_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Option"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_fields_option:
                  type: object
                  $ref: "#/components/schemas/FormsFieldsOptionParameters"
            example:
              $ref: "#/components/schemas/FormsFieldsOptionParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsFieldsOptionAttributes"
              example:
                id: 417
                public_id: ZXgiVb
                field_id: 141
                label: ad
                created_at: '2025-06-21T12:19:03.341Z'
                updated_at: '2025-06-21T12:19:03.341Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /forms/fields/options/{id}:
    get:
      tags:
        - Forms::Fields::Option
      summary: "Fetch Option"
      description: Retrieve a option for a field
      operationId: getFormsFieldsOptions
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsFieldsOptionAttributes"
              example:
                id: 414
                public_id: fDVluK
                field_id: 140
                label: deserunt
                created_at: '2025-06-21T12:19:03.326Z'
                updated_at: '2025-06-21T12:19:03.326Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Forms::Fields::Option
      summary: "Update Option"
      description: Update a option for a field
      operationId: updateFormsFieldsOptions
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Option"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_fields_option:
                  type: object
                  $ref: "#/components/schemas/FormsFieldsOptionParametersUpdate"
            example:
              $ref: "#/components/schemas/FormsFieldsOptionParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsFieldsOptionAttributes"
              example:
                id: 423
                public_id: VEhNYt
                field_id: 143
                label: doloribus
                created_at: '2025-06-21T12:19:03.355Z'
                updated_at: '2025-06-21T12:19:03.355Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Forms::Fields::Option
      summary: "Remove Option"
      description: Delete a option for a field
      operationId: removeFormsFieldsOptions
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /forms/{form_id}/submissions:
    get:
      tags:
        - Forms::Submission
      summary: "List Submissions"
      description: List submissions for a form
      operationId: listFormsSubmissions
      parameters:
        - name: form_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormsSubmissionAttributes"
              example:
                - id: 66
                  public_id: ltgFWy
                  form_id: 182
                  contact_id: 63
                  created_at: '2025-06-21T12:19:03.400Z'
                  updated_at: '2025-06-21T12:19:03.400Z'
                - id: 68
                  public_id: ZDhAzb
                  form_id: 186
                  contact_id: 64
                  created_at: '2025-06-21T12:19:03.426Z'
                  updated_at: '2025-06-21T12:19:03.426Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Forms::Submission
      summary: "Create Submission"
      description: Add a new submission to a form
      operationId: createFormsSubmissions
      parameters:
        - name: form_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Submission"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_submission:
                  type: object
                  $ref: "#/components/schemas/FormsSubmissionParameters"
            example:
              $ref: "#/components/schemas/FormsSubmissionParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsSubmissionAttributes"
              example:
                id: 72
                public_id: pMOAxG
                form_id: 194
                contact_id: 66
                created_at: '2025-06-21T12:19:03.496Z'
                updated_at: '2025-06-21T12:19:03.496Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /forms/submissions/{id}:
    get:
      tags:
        - Forms::Submission
      summary: "Fetch Submission"
      description: Retrieve a submission for a form
      operationId: getFormsSubmissions
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsSubmissionAttributes"
              example:
                id: 70
                public_id: cEbdlt
                form_id: 190
                contact_id: 65
                created_at: '2025-06-21T12:19:03.459Z'
                updated_at: '2025-06-21T12:19:03.459Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Forms::Submission
      summary: "Update Submission"
      description: Update a submission for a form
      operationId: updateFormsSubmissions
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Submission"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_submission:
                  type: object
                  $ref: "#/components/schemas/FormsSubmissionParametersUpdate"
            example:
              $ref: "#/components/schemas/FormsSubmissionParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsSubmissionAttributes"
              example:
                id: 76
                public_id: kXSscM
                form_id: 202
                contact_id: 68
                created_at: '2025-06-21T12:19:03.565Z'
                updated_at: '2025-06-21T12:19:03.565Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Forms::Submission
      summary: "Remove Submission"
      description: Delete a submission for a form
      operationId: removeFormsSubmissions
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /forms/submissions/{submission_id}/answers:
    get:
      tags:
        - Forms::Submissions::Answer
      summary: "List Answers"
      description: List answers for a submission
      operationId: listFormsSubmissionsAnswers
      parameters:
        - name: submission_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormsSubmissionsAnswerAttributes"
              example:
                - id: 86
                  public_id: sRvZGD
                  submission_id: 84
                  field_id: 188
                  fields_option_id: 557
                  entry: MyText
                  fields_option_ids: []
                  created_at: '2025-06-21T12:19:03.716Z'
                  updated_at: '2025-06-21T12:19:03.716Z'
                - id: 89
                  public_id: JZPpGa
                  submission_id: 86
                  field_id: 194
                  fields_option_id: 575
                  entry: MyText
                  fields_option_ids: []
                  created_at: '2025-06-21T12:19:03.753Z'
                  updated_at: '2025-06-21T12:19:03.753Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Forms::Submissions::Answer
      summary: "Create Answer"
      description: Add a new answer to a submission
      operationId: createFormsSubmissionsAnswers
      parameters:
        - name: submission_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Answer"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_submissions_answer:
                  type: object
                  $ref: "#/components/schemas/FormsSubmissionsAnswerParameters"
            example:
              $ref: "#/components/schemas/FormsSubmissionsAnswerParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsSubmissionsAnswerAttributes"
              example:
                id: 95
                public_id: wjmoHG
                submission_id: 90
                field_id: 206
                fields_option_id: 611
                entry: MyText
                fields_option_ids: []
                created_at: '2025-06-21T12:19:03.849Z'
                updated_at: '2025-06-21T12:19:03.849Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /forms/submissions/answers/{id}:
    get:
      tags:
        - Forms::Submissions::Answer
      summary: "Fetch Answer"
      description: Retrieve a answer for a submission
      operationId: getFormsSubmissionsAnswers
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsSubmissionsAnswerAttributes"
              example:
                id: 92
                public_id: wKustI
                submission_id: 88
                field_id: 200
                fields_option_id: 593
                entry: MyText
                fields_option_ids: []
                created_at: '2025-06-21T12:19:03.797Z'
                updated_at: '2025-06-21T12:19:03.797Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Forms::Submissions::Answer
      summary: "Update Answer"
      description: Update a answer for a submission
      operationId: updateFormsSubmissionsAnswers
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Answer"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forms_submissions_answer:
                  type: object
                  $ref: "#/components/schemas/FormsSubmissionsAnswerParametersUpdate"
            example:
              $ref: "#/components/schemas/FormsSubmissionsAnswerParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormsSubmissionsAnswerAttributes"
              example:
                id: 101
                public_id: CrbRNA
                submission_id: 94
                field_id: 218
                fields_option_id: 647
                entry: MyText
                fields_option_ids: []
                created_at: '2025-06-21T12:19:03.934Z'
                updated_at: '2025-06-21T12:19:03.934Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Forms::Submissions::Answer
      summary: "Remove Answer"
      description: Delete a answer for a submission
      operationId: removeFormsSubmissionsAnswers
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  
  "/workspaces/{workspace_id}/form_submissions":
    get:
      tags:
      - FormSubmission
      summary: List Form Submissions
      description: List form submissions. This is a list of all form submissions for
        the workspace, including the submitted standard and custom fields. Please refer
        to the `Form` and `Forms::Submission` resources if you would like to submit
        forms programmatically.
      operationId: listFormSubmissions
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of form submission IDs to filter by.
              example: 123
            page_id:
              type: string
              description: A comma-separated list of page IDs to filter by.
              example: 324325544
            contact_id:
              type: string
              description: A comma-separated list of contact IDs to filter by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FormSubmissionAttributes"
              example:
              - id: 2
                public_id: sVMxjd
                contact_id: 81
                workspace_id: 42000
                page_id: 11
                created_at:
                updated_at:
                data:
                  url: "/contact"
                  first_name: John
                  last_name: Doe
                  email: john@example.com
              - id: 3
                public_id: NpeQTK
                contact_id: 82
                workspace_id: 42000
                page_id: 12
                created_at:
                updated_at:
                data:
                  url: "/contact"
                  first_name: John
                  last_name: Doe
                  email: john@example.com
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/form_submissions/{id}":
    get:
      tags:
      - FormSubmission
      summary: Fetch Form Submission
      description: Retrieve a form submission. This is a record of a form submission,
        including the submitted standard and custom fields. Please refer to the `Form`
        and `Forms::Submission` resources if you would like to submit forms programmatically.
      operationId: getFormSubmissions
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FormSubmissionAttributes"
              example:
                id: 4
                public_id: esAqhJ
                contact_id: 83
                workspace_id: 42000
                page_id: 13
                created_at:
                updated_at:
                data:
                  url: "/contact"
                  first_name: John
                  last_name: Doe
                  email: john@example.com
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  
  "/workspaces/{workspace_id}/fulfillments":
    get:
      tags:
      - Fulfillment
      summary: List Fulfillments
      description: List all fulfillments for your workspace. You will find detailed
        information about fulfilling orders is in [our Fulfillments guide](https://developers.myclickfunnels.com/docs/fulfillments).
      operationId: listFulfillments
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FulfillmentAttributes"
              example:
              - id: 2
                public_id: DQVLUo
                workspace_id: 42000
                contact_id: 90
                status: fulfilled
                tracking_url: https://usps.com/track/1234567890
                shipping_provider: USPS
                tracking_code: '1234567890'
                location_id: 3
                fulfillment_number: 2
                created_at: '2025-05-21T12:19:04.611Z'
                updated_at: '2025-05-21T12:19:04.611Z'
                included_invoices_line_items:
                - id: 2
                  public_id: ULRDTu
                  fulfillment_id: 2
                  quantity: 1
                  invoices_line_item_id: 7
              - id: 3
                public_id: jypuHM
                workspace_id: 42000
                contact_id: 92
                status: fulfilled
                tracking_url: https://usps.com/track/1234567890
                shipping_provider: USPS
                tracking_code: '1234567890'
                location_id: 4
                fulfillment_number: 3
                created_at: '2025-05-21T12:19:04.849Z'
                updated_at: '2025-05-21T12:19:04.849Z'
                included_invoices_line_items:
                - id: 3
                  public_id: TgVvRL
                  fulfillment_id: 3
                  quantity: 1
                  invoices_line_item_id: 9
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Fulfillment
      summary: Create Fulfillment
      description: Fulfill an order or a part of an order. More information in [our
        Fulfillments guide](https://developers.myclickfunnels.com/docs/fulfillments).
      operationId: createFulfillments
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Fulfillment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fulfillment:
                  type: object
                  "$ref": "#/components/schemas/FulfillmentParameters"
            example:
              "$ref": "#/components/schemas/FulfillmentParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FulfillmentAttributes"
              example:
                id: 5
                public_id: DJdqwZ
                workspace_id: 42000
                contact_id: 96
                status: fulfilled
                tracking_url: https://usps.com/track/1234567890
                shipping_provider: USPS
                tracking_code: '1234567890'
                location_id: 6
                fulfillment_number: 5
                created_at: '2025-05-21T12:19:05.312Z'
                updated_at: '2025-05-21T12:19:05.312Z'
                included_invoices_line_items:
                - id: 5
                  public_id: SwcHGZ
                  fulfillment_id: 5
                  quantity: 1
                  invoices_line_item_id: 13
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/fulfillments/{id}":
    get:
      tags:
      - Fulfillment
      summary: Fetch Fulfillment
      description: Retrieve a specific fulfillment in the current workspace
      operationId: getFulfillments
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FulfillmentAttributes"
              example:
                id: 4
                public_id: ZxqHYW
                workspace_id: 42000
                contact_id: 94
                status: fulfilled
                tracking_url: https://usps.com/track/1234567890
                shipping_provider: USPS
                tracking_code: '1234567890'
                location_id: 5
                fulfillment_number: 4
                created_at: '2025-05-21T12:19:05.083Z'
                updated_at: '2025-05-21T12:19:05.083Z'
                included_invoices_line_items:
                - id: 4
                  public_id: tkdnil
                  fulfillment_id: 4
                  quantity: 1
                  invoices_line_item_id: 11
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Fulfillment
      summary: Update Fulfillment
      description: Update a specific fulfillment.
      operationId: updateFulfillments
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Fulfillment
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fulfillment:
                  type: object
                  "$ref": "#/components/schemas/FulfillmentParametersUpdate"
            example:
              "$ref": "#/components/schemas/FulfillmentParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FulfillmentAttributes"
              example:
                id: 6
                public_id: oAPvdn
                workspace_id: 42000
                contact_id: 98
                status: fulfilled
                tracking_url: https://usps.com/track/1234567890
                shipping_provider: USPS
                tracking_code: '1234567890'
                location_id: 7
                fulfillment_number: 6
                created_at: '2025-05-21T12:19:05.538Z'
                updated_at: '2025-05-21T12:19:05.538Z'
                included_invoices_line_items:
                - id: 6
                  public_id: ehdkAK
                  fulfillment_id: 6
                  quantity: 1
                  invoices_line_item_id: 15
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Fulfillment
      summary: Remove Fulfillment
      description: Remove Fulfillment
      operationId: removeFulfillments
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
  "/fulfillments/{id}/cancel":
    post:
      tags:
      - Fulfillment
      summary: Cancel a Fulfillment
      description: This will cancel a Fulfillment. A Fulfillment can only be cancelled
        when it&#39;s in a &quot;fulfilled&quot; state. The &quot;cancelled&quot; state
        is final.
      operationId: cancelFulfillments
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FulfillmentAttributes"
              example:
                "$ref": "#/components/schemas/FulfillmentAttributes/example"
                status: cancelled
        '404':
          description: Not Found
        '409':
          description: Conflict - occurs if product is already cancelled.
        '422':
          description: Unprocessable Entity

  /workspaces/{workspace_id}/fulfillments/locations:
    get:
      tags:
        - Fulfillments::Location
      summary: "List Locations"
      description: List Locations
      operationId: listFulfillmentsLocations
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FulfillmentsLocationAttributes"
              example:
                - id: 8
                  public_id: RcQIKj
                  workspace_id: 42000
                  name: Example Location
                  address_name: Example Address
                  email_address: myemail1750508345@example.com
                  phone_number: "(123)-555-4567"
                  sort_order: 1
                  archived: false
                  external_app: true
                  created_at:
                  updated_at:
                  address:
                    address_one: 3443 W. Bavaria St.
                    address_two: Suite 100
                    city: Eagle
                    region: Idaho
                    country: US
                    postal_code: '83616'
                - id: 9
                  public_id: oJbIiK
                  workspace_id: 42000
                  name: Example Location
                  address_name: Example Address
                  email_address: myemail1750508345@example.com
                  phone_number: "(123)-555-4567"
                  sort_order: 1
                  archived: false
                  external_app: true
                  created_at:
                  updated_at:
                  address:
                    address_one: 3443 W. Bavaria St.
                    address_two: Suite 100
                    city: Eagle
                    region: Idaho
                    country: US
                    postal_code: '83616'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Fulfillments::Location
      summary: "Create Location"
      description: Create Location
      operationId: createFulfillmentsLocations
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Location"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fulfillments_location:
                  type: object
                  $ref: "#/components/schemas/FulfillmentsLocationParameters"
            example:
              $ref: "#/components/schemas/FulfillmentsLocationParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentsLocationAttributes"
              example:
                id: 11
                public_id: VqZkAb
                workspace_id: 42000
                name: Example Location
                address_name: Example Address
                email_address: myemail1750508345@example.com
                phone_number: "(123)-555-4567"
                sort_order: 1
                archived: false
                external_app: true
                created_at:
                updated_at:
                address:
                  address_one: 3443 W. Bavaria St.
                  address_two: Suite 100
                  city: Eagle
                  region: Idaho
                  country: US
                  postal_code: '83616'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /fulfillments/locations/{id}:
    get:
      tags:
        - Fulfillments::Location
      summary: "Fetch Location"
      description: Fetch Location
      operationId: getFulfillmentsLocations
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentsLocationAttributes"
              example:
                id: 10
                public_id: iHlIPN
                workspace_id: 42000
                name: Example Location
                address_name: Example Address
                email_address: myemail1750508345@example.com
                phone_number: "(123)-555-4567"
                sort_order: 1
                archived: false
                external_app: true
                created_at:
                updated_at:
                address:
                  address_one: 3443 W. Bavaria St.
                  address_two: Suite 100
                  city: Eagle
                  region: Idaho
                  country: US
                  postal_code: '83616'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Fulfillments::Location
      summary: "Update Location"
      description: Update Location
      operationId: updateFulfillmentsLocations
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Location"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fulfillments_location:
                  type: object
                  $ref: "#/components/schemas/FulfillmentsLocationParametersUpdate"
            example:
              $ref: "#/components/schemas/FulfillmentsLocationParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FulfillmentsLocationAttributes"
              example:
                id: 13
                public_id: nMxqOc
                workspace_id: 42000
                name: Example Location
                address_name: Example Address
                email_address: myemail1750508345@example.com
                phone_number: "(123)-555-4567"
                sort_order: 1
                archived: false
                external_app: true
                created_at:
                updated_at:
                address:
                  address_one: 3443 W. Bavaria St.
                  address_two: Suite 100
                  city: Eagle
                  region: Idaho
                  country: US
                  postal_code: '83616'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Fulfillments::Location
      summary: "Remove Location"
      description: Remove Location
      operationId: removeFulfillmentsLocations
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


  
  "/workspaces/{workspace_id}/funnels":
    get:
      tags:
      - Funnel
      summary: List Funnels
      description: List Funnels
      operationId: listFunnels
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of funnel IDs to filter by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FunnelAttributes"
              example:
              - id: 3
                public_id: xdwzKp
                workspace_id: 42000
                name: Example Funnel
                archived: false
                current_path: "/example-path"
                live_mode: true
                favicon_image_id:
                created_at: '2025-05-21T12:19:05.609Z'
                updated_at: '2025-05-21T12:19:05.609Z'
                tags:
                - id: 4
                  public_id: cHpfSj
                  name: Example Funnel Tag
                  color: "#f9d40e"
              - id: 4
                public_id: towqTy
                workspace_id: 42000
                name: Example Funnel
                archived: false
                current_path: "/example-path"
                live_mode: true
                favicon_image_id:
                created_at: '2025-05-21T12:19:05.619Z'
                updated_at: '2025-05-21T12:19:05.619Z'
                tags:
                - id: 5
                  public_id: sAICjn
                  name: Example Funnel Tag
                  color: "#00d070"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/funnels/{id}":
    get:
      tags:
      - Funnel
      summary: Fetch Funnel
      description: Fetch Funnel
      operationId: getFunnels
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FunnelAttributes"
              example:
                id: 5
                public_id: HIADRS
                workspace_id: 42000
                name: Example Funnel
                archived: false
                current_path: "/example-path"
                live_mode: true
                favicon_image_id:
                created_at: '2025-05-21T12:19:05.632Z'
                updated_at: '2025-05-21T12:19:05.632Z'
                tags:
                - id: 6
                  public_id: SGhFIr
                  name: Example Funnel Tag
                  color: "#801587"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Funnel
      summary: Update Funnel
      description: Update Funnel
      operationId: updateFunnels
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Funnel
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                funnel:
                  type: object
                  "$ref": "#/components/schemas/FunnelParametersUpdate"
            example:
              "$ref": "#/components/schemas/FunnelParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FunnelAttributes"
              example:
                id: 8
                public_id: VLxXRH
                workspace_id: 42000
                name: Example Funnel
                archived: false
                current_path: "/example-path"
                live_mode: true
                favicon_image_id:
                created_at: '2025-05-21T12:19:05.673Z'
                updated_at: '2025-05-21T12:19:05.673Z'
                tags:
                - id: 9
                  public_id: sIPBXD
                  name: Example Funnel Tag
                  color: "#6cc09d"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/workspaces/{workspace_id}/funnels/tags":
    get:
      tags:
      - Funnels::Tag
      summary: List Tags
      description: List Tags
      operationId: listFunnelsTags
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of funnel tag IDs to filter by.
              example: 142
            name:
              type: string
              description: A comma-separated list of funnel tag names to filter by.
              example: cool-funnel,gold
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FunnelsTagAttributes"
              example:
              - id: 13
                public_id: ldfNYu
                workspace_id: 42000
                name: Example Funnel Tag
                color: "#a818c3"
                created_at: '2025-05-21T12:19:05.715Z'
                updated_at: '2025-05-21T12:19:05.715Z'
              - id: 14
                public_id: fKqmFW
                workspace_id: 42000
                name: Example Funnel Tag
                color: "#357449"
                created_at: '2025-05-21T12:19:05.718Z'
                updated_at: '2025-05-21T12:19:05.718Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Funnels::Tag
      summary: Create Tag
      description: Create Tag
      operationId: createFunnelsTags
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                funnels_tag:
                  type: object
                  "$ref": "#/components/schemas/FunnelsTagParameters"
            example:
              "$ref": "#/components/schemas/FunnelsTagParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FunnelsTagAttributes"
              example:
                id: 16
                public_id: HydboJ
                workspace_id: 42000
                name: Example Funnel Tag
                color: "#78294a"
                created_at: '2025-05-21T12:19:05.726Z'
                updated_at: '2025-05-21T12:19:05.726Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/funnels/tags/{id}":
    get:
      tags:
      - Funnels::Tag
      summary: Fetch Tag
      description: Fetch Tag
      operationId: getFunnelsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FunnelsTagAttributes"
              example:
                id: 15
                public_id: tdqUej
                workspace_id: 42000
                name: Example Funnel Tag
                color: "#8ca271"
                created_at: '2025-05-21T12:19:05.722Z'
                updated_at: '2025-05-21T12:19:05.722Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Funnels::Tag
      summary: Update Tag
      description: Update Tag
      operationId: updateFunnelsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                funnels_tag:
                  type: object
                  "$ref": "#/components/schemas/FunnelsTagParametersUpdate"
            example:
              "$ref": "#/components/schemas/FunnelsTagParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FunnelsTagAttributes"
              example:
                id: 18
                public_id: sHjrGb
                workspace_id: 42000
                name: Example Funnel Tag
                color: "#f92c9c"
                created_at: '2025-05-21T12:19:05.733Z'
                updated_at: '2025-05-21T12:19:05.733Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Funnels::Tag
      summary: Remove Tag
      description: Remove Tag
      operationId: removeFunnelsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  /workspaces/{workspace_id}/images:
    get:
      tags:
        - Image
      summary: "List Images"
      description: List Images
      operationId: listImages
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ImageAttributes"
              example:
                - id: 106
                  public_id: MHqlLb
                  url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
                  workspace_id: 42000
                  alt_text: Alt text of the image
                  name: Amazing Shot
                  created_at: '2025-05-21T12:19:05.750Z'
                  updated_at: '2025-05-21T12:19:05.750Z'
                - id: 107
                  public_id: apGHgL
                  url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
                  workspace_id: 42000
                  alt_text: Alt text of the image
                  name: Amazing Shot
                  created_at: '2025-05-21T12:19:05.753Z'
                  updated_at: '2025-05-21T12:19:05.753Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Image
      summary: "Create Image"
      description: Create Image
      operationId: createImages
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Image"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: object
                  $ref: "#/components/schemas/ImageParameters"
            example:
              $ref: "#/components/schemas/ImageParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageAttributes"
              example:
                id: 109
                public_id: MfWNPr
                url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
                workspace_id: 42000
                alt_text: Alt text of the image
                name: Amazing Shot
                created_at: '2025-05-21T12:19:05.762Z'
                updated_at: '2025-05-21T12:19:05.762Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /images/{id}:
    get:
      tags:
        - Image
      summary: "Fetch Image"
      description: Fetch Image
      operationId: getImages
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageAttributes"
              example:
                id: 108
                public_id: LuUpEn
                url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
                workspace_id: 42000
                alt_text: Alt text of the image
                name: Amazing Shot
                created_at: '2025-05-21T12:19:05.758Z'
                updated_at: '2025-05-21T12:19:05.758Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Image
      summary: "Update Image"
      description: Update Image
      operationId: updateImages
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Image"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: object
                  $ref: "#/components/schemas/ImageParametersUpdate"
            example:
              $ref: "#/components/schemas/ImageParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageAttributes"
              example:
                id: 111
                public_id: pVxItU
                url: https://example.myclickfunnels.com/uploads/image/1/file/9c8d1e7d480dc9882c519d4b4528826f.png
                workspace_id: 42000
                alt_text: Alt text of the image
                name: Amazing Shot
                created_at: '2025-05-21T12:19:05.770Z'
                updated_at: '2025-05-21T12:19:05.770Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Image
      summary: "Remove Image"
      description: Remove Image
      operationId: removeImages
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


  /orders/{order_id}/applied_tags:
    get:
      tags:
        - Orders::AppliedTag
      summary: "List Applied Tags"
      description: List the applied tags for an order
      operationId: listOrdersAppliedTags
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrdersAppliedTagAttributes"
              example:
                - id: 2
                  public_id: shVyjg
                  order_id: 13
                  tag_id: 16
                  created_at: '2025-06-21T12:19:05.943Z'
                  updated_at: '2025-06-21T12:19:05.943Z'
                - id: 3
                  public_id: IFNTjt
                  order_id: 14
                  tag_id: 18
                  created_at: '2025-06-21T12:19:06.106Z'
                  updated_at: '2025-06-21T12:19:06.106Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Orders::AppliedTag
      summary: "Create Applied Tag"
      description: Assign a tag to an order by creating an applied tag
      operationId: createOrdersAppliedTags
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Applied Tag"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders_applied_tag:
                  type: object
                  $ref: "#/components/schemas/OrdersAppliedTagParameters"
            example:
              $ref: "#/components/schemas/OrdersAppliedTagParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersAppliedTagAttributes"
              example:
                id: 5
                public_id: zekgMf
                order_id: 16
                tag_id: 22
                created_at: '2025-06-21T12:19:06.425Z'
                updated_at: '2025-06-21T12:19:06.425Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /orders/applied_tags/{id}:
    get:
      tags:
        - Orders::AppliedTag
      summary: "Fetch Applied Tag"
      description: Retrieve an applied tag for an order
      operationId: getOrdersAppliedTags
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersAppliedTagAttributes"
              example:
                id: 4
                public_id: klRNKh
                order_id: 15
                tag_id: 20
                created_at: '2025-06-21T12:19:06.269Z'
                updated_at: '2025-06-21T12:19:06.269Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Orders::AppliedTag
      summary: "Remove Applied Tag"
      description: Remove a tag from an order by deleting an applied tag
      operationId: removeOrdersAppliedTags
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  
  "/workspaces/{workspace_id}/orders":
    get:
      tags:
      - Order
      summary: List Orders
      description: List all orders for the current workspace. Please refer to [our Orders
        Overview guide](https://developers.myclickfunnels.com/docs/orders) for more
        information about the different types of orders and payment processors.
      operationId: listOrders
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            contact_id:
              type: string
              description: A comma-separated list of Contact IDs to filter by.
              example: 142
            id:
              type: string
              description: A comma-separated list of Order IDs to filter by.
              example: 142
            order_type:
              type: string
              description: The order type to filter by.
              enum:
              - subscription-order
              - one-time-order
              example: subscription-order
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderAttributes"
              example:
              - id: 22
                public_id: UNRxen
                order_number: '288296'
                workspace_id: 42000
                contact_id: 109
                live_mode: true
                total_amount: '123.00'
                currency: USD
                origination_channel_id: 26
                origination_channel_type: User
                shipping_address_first_name: Wilmer
                shipping_address_last_name: Schmidt
                shipping_address_organization_name: Testing, Inc.
                shipping_address_phone_number: "+19053871234"
                shipping_address_street_one: 99477 Powlowski Circle
                shipping_address_street_two: Suite 715
                shipping_address_city: West Samira
                shipping_address_region: WA
                shipping_address_country: US
                shipping_address_postal_code: '59481'
                billing_address_street_one: 99512 Tromp Mills
                billing_address_street_two: Suite 640
                billing_address_city: Olenbury
                billing_address_region: WA
                billing_address_country: US
                billing_address_postal_code: '49104'
                page_id: 34
                notes: Facere molestiae consequatur nihil.
                in_trial: false
                billing_status: pending
                service_status: pending
                order_type: one-time-order
                next_charge_at:
                tax_amount: '0.00'
                trial_end_at:
                billing_payment_method_id:
                funnel_name:
                tag_ids:
                - 33
                discount_ids: []
                activated_at:
                workspace_sharing_id:
                canceled_at:
                canceled_by:
                cancel_reason:
                cancel_description:
                churned_at:
                created_at: '2025-05-21T12:19:07.398Z'
                updated_at: '2025-05-21T12:19:07.398Z'
                external_id:
                payment_processor: payments_ai
                phone_number: 735.047.4654 x54243
                page_name: Great Page
                origination_channel_name: ''
                order_page:
                  id: 34
                  public_id: GEigjI
                  name: Great Page
                contact:
                  id: 109
                  public_id: MJxroL
                  workspace_id: 42000
                  anonymous:
                  email_address: test-fedd4ca36ee70398db47@example.com
                  first_name: August
                  last_name: Hoppe
                  phone_number: 735.047.4654 x54243
                  time_zone: Pacific Time (US & Canada)
                  uuid: 77e1c239-5423-4c52-8d4e-9674dbc6b1cd
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:07.278Z'
                  updated_at: '2025-05-21T12:19:07.278Z'
                  tags:
                  - id: 129
                    public_id: TtzPSo
                    name: Example Tag
                    color: "#7a8545"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                contact_groups:
                - id: 22
                  public_id: fSiRDL
                  name: Example Group
                workspace:
                  id: 42000
                  public_id: doXntK
                  team_id: 42000
                  name: Example Workspace
                  subdomain: example
                  created_at: '2025-05-21T12:19:07.271Z'
                  updated_at: '2025-05-21T12:19:07.271Z'
                segments:
                - id: 22
                  public_id: PCeKmh
                  name: Example Segment
                line_items:
                - id: 22
                  public_id: OJypjv
                  order_id: 22
                  quantity: 3
                  prorated:
                  created_at: '2025-04-04T05:40:56.769Z'
                  updated_at: '2025-05-26T10:01:34.312Z'
                  original_product:
                    id: 6505
                    public_id: JWkEqJ
                    name: My Subscription Newsletter
                  products_price:
                    id: 47
                    public_id: nYoXZN
                    amount: '39.99'
                    currency: usd
                    duration:
                    interval: months
                    interval_count: 1
                    key:
                  products_variant:
                    id: 23
                    public_id: RNpgYl
                    name: My Subscription Newsletter
                    description:
                    sku: sku_7291380226
                - id: 23
                  public_id: nEgtxv
                  order_id: 22
                  quantity: 1
                  prorated:
                  created_at:
                  updated_at:
                  original_product:
                    id: 63
                    public_id: nVhHSg
                    name: Heavy Duty Silk Bench 09bb0d
                  products_price:
                    id: 39
                    public_id: ZKmGQH
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                    key:
                  products_variant:
                    id: 40
                    public_id: vuIfAy
                    name: Heavy Duty Iron Coat variant e988
                    description: Possimus laudantium molestias sunt.
                    sku: hzGu6EdmJqnwqPmg
                previous_line_item:
                affiliate:
                  name: Josh Fancy
                  email: test-61a3072406ef2378592d@example.com
                referral_code:
                  code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                  default: true
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
              - id: 23
                public_id: JOUVPp
                order_number: '860327'
                workspace_id: 42000
                contact_id: 110
                live_mode: true
                total_amount: '123.00'
                currency: USD
                origination_channel_id: 27
                origination_channel_type: User
                shipping_address_first_name: Eugenio
                shipping_address_last_name: Keeling
                shipping_address_organization_name: Testing, Inc.
                shipping_address_phone_number: "+19053871234"
                shipping_address_street_one: 1972 Margarete Overpass
                shipping_address_street_two: Suite 713
                shipping_address_city: Waelchihaven
                shipping_address_region: WA
                shipping_address_country: US
                shipping_address_postal_code: '36108'
                billing_address_street_one: 15157 Thompson Square
                billing_address_street_two: Suite 820
                billing_address_city: West Julian
                billing_address_region: WA
                billing_address_country: US
                billing_address_postal_code: '25863'
                page_id: 35
                notes: Consequatur non nulla ad.
                in_trial: false
                billing_status: pending
                service_status: pending
                order_type: one-time-order
                next_charge_at:
                tax_amount: '0.00'
                trial_end_at:
                billing_payment_method_id:
                funnel_name:
                tag_ids:
                - 34
                discount_ids: []
                activated_at:
                workspace_sharing_id:
                canceled_at:
                canceled_by:
                cancel_reason:
                cancel_description:
                churned_at:
                created_at: '2025-05-21T12:19:07.601Z'
                updated_at: '2025-05-21T12:19:07.601Z'
                external_id:
                payment_processor: payments_ai
                phone_number: "(395) 035-2243"
                page_name: Great Page
                origination_channel_name: ''
                order_page:
                  id: 35
                  public_id: hxZBoc
                  name: Great Page
                contact:
                  id: 110
                  public_id: DhWcyL
                  workspace_id: 42000
                  anonymous:
                  email_address: test-6aa26ea67d9ab4ec9c27@example.com
                  first_name: Harley
                  last_name: Will
                  phone_number: "(395) 035-2243"
                  time_zone: Pacific Time (US & Canada)
                  uuid: e9b1cfb4-66c2-4374-a089-24e1c1f99492
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:07.438Z'
                  updated_at: '2025-05-21T12:19:07.438Z'
                  tags:
                  - id: 130
                    public_id: jhezlg
                    name: Example Tag
                    color: "#4e6e9d"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                contact_groups:
                - id: 23
                  public_id: TiWXRP
                  name: Example Group
                workspace:
                  id: 42000
                  public_id: VgSIjU
                  team_id: 42000
                  name: Example Workspace
                  subdomain: example
                  created_at: '2025-05-21T12:19:07.431Z'
                  updated_at: '2025-05-21T12:19:07.431Z'
                segments:
                - id: 23
                  public_id: rZBHdU
                  name: Example Segment
                line_items:
                - id: 23
                  public_id: RJpgjo
                  order_id: 23
                  quantity: 1
                  prorated:
                  created_at: '2025-04-11T20:55:38.558Z'
                  updated_at: '2025-05-26T10:01:34.400Z'
                  original_product:
                    id: 6505
                    public_id: JWkEqJ
                    name: My Subscription Newsletter
                  products_price:
                    id: 47
                    public_id: nYoXZN
                    amount: '39.99'
                    currency: usd
                    duration:
                    interval: months
                    interval_count: 1
                    key:
                  products_variant:
                    id: 23
                    public_id: RNpgYl
                    name: My Subscription Newsletter
                    description:
                    sku: sku_7291380226
                - id: 24
                  public_id: eyMraE
                  order_id: 23
                  quantity: 1
                  prorated:
                  created_at:
                  updated_at:
                  original_product:
                    id: 65
                    public_id: JGsTYE
                    name: Synergistic Rubber Table 8ca95b
                  products_price:
                    id: 40
                    public_id: KGkEaJ
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                    key:
                  products_variant:
                    id: 41
                    public_id: tYIjEA
                    name: Lightweight Granite Car variant e94a
                    description: Eos provident ullam eos.
                    sku: LRPgQpEWcpAzeBDc
                previous_line_item:
                affiliate:
                  name: Josh Fancy
                  email: test-def8dd9d93fb463193ab@example.com
                referral_code:
                  code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                  default: true
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/orders/{id}":
    get:
      tags:
      - Order
      summary: Fetch Order
      description: Retrieve a specific order in the current workspace. Please refer
        to [our Orders Overview guide](https://developers.myclickfunnels.com/docs/orders)
        for more information about the different types of orders and payment processors.
      operationId: getOrders
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderAttributes"
              example:
                id: 24
                public_id: qVFPiI
                order_number: '770308'
                workspace_id: 42000
                contact_id: 111
                live_mode: true
                total_amount: '123.00'
                currency: USD
                origination_channel_id: 28
                origination_channel_type: User
                shipping_address_first_name: Dorsey
                shipping_address_last_name: Rempel
                shipping_address_organization_name: Testing, Inc.
                shipping_address_phone_number: "+19053871234"
                shipping_address_street_one: 6013 Tonia Lodge
                shipping_address_street_two: Apt. 706
                shipping_address_city: Yostfurt
                shipping_address_region: WA
                shipping_address_country: US
                shipping_address_postal_code: 30905-4417
                billing_address_street_one: 2985 Padberg Hill
                billing_address_street_two: Suite 292
                billing_address_city: South Hershel
                billing_address_region: WA
                billing_address_country: US
                billing_address_postal_code: '73405'
                page_id: 36
                notes: Sit tempore et voluptas.
                in_trial: false
                billing_status: pending
                service_status: pending
                order_type: one-time-order
                next_charge_at:
                tax_amount: '0.00'
                trial_end_at:
                billing_payment_method_id:
                funnel_name:
                tag_ids:
                - 35
                discount_ids: []
                activated_at:
                workspace_sharing_id:
                canceled_at:
                canceled_by:
                cancel_reason:
                cancel_description:
                churned_at:
                created_at: '2025-05-21T12:19:07.797Z'
                updated_at: '2025-05-21T12:19:07.797Z'
                external_id:
                payment_processor: payments_ai
                phone_number: 533-483-5958
                page_name: Great Page
                origination_channel_name: ''
                order_page:
                  id: 36
                  public_id: holbIA
                  name: Great Page
                contact:
                  id: 111
                  public_id: FNDZyM
                  workspace_id: 42000
                  anonymous:
                  email_address: test-ae1a2b732402d99fb9f0@example.com
                  first_name: Gwenda
                  last_name: Mosciski
                  phone_number: 533-483-5958
                  time_zone: Pacific Time (US & Canada)
                  uuid: 8794c718-1b5a-4464-92b5-c844a83a3d1f
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:07.681Z'
                  updated_at: '2025-05-21T12:19:07.681Z'
                  tags:
                  - id: 131
                    public_id: zNTrYi
                    name: Example Tag
                    color: "#d96c09"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                contact_groups:
                - id: 24
                  public_id: mHOrMk
                  name: Example Group
                workspace:
                  id: 42000
                  public_id: mTkvCh
                  team_id: 42000
                  name: Example Workspace
                  subdomain: example
                  created_at: '2025-05-21T12:19:07.675Z'
                  updated_at: '2025-05-21T12:19:07.675Z'
                segments:
                - id: 24
                  public_id: OQbmUJ
                  name: Example Segment
                line_items:
                - id: 24
                  public_id: qNlVjE
                  order_id: 24
                  quantity: 5
                  prorated:
                  created_at: '2025-04-04T04:00:41.006Z'
                  updated_at: '2025-05-26T10:01:34.497Z'
                  original_product:
                    id: 6505
                    public_id: JWkEqJ
                    name: My Subscription Newsletter
                  products_price:
                    id: 47
                    public_id: nYoXZN
                    amount: '39.99'
                    currency: usd
                    duration:
                    interval: months
                    interval_count: 1
                    key:
                  products_variant:
                    id: 23
                    public_id: RNpgYl
                    name: My Subscription Newsletter
                    description:
                    sku: sku_7291380226
                - id: 25
                  public_id: qpJDhW
                  order_id: 24
                  quantity: 1
                  prorated:
                  created_at:
                  updated_at:
                  original_product:
                    id: 67
                    public_id: TbZwxL
                    name: Heavy Duty Copper Chair add323
                  products_price:
                    id: 41
                    public_id: CqwJtY
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                    key:
                  products_variant:
                    id: 42
                    public_id: hzFEjm
                    name: Awesome Concrete Keyboard variant 2b7e
                    description: Amet optio ut est.
                    sku: 4JZihaU4xMasGKTg
                previous_line_item:
                affiliate:
                  name: Josh Fancy
                  email: test-94a71bc010854faaee62@example.com
                referral_code:
                  code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                  default: true
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Order
      summary: Update Order
      description: Update a specific order in the current workspace. [External orders](https://developers.myclickfunnels.com/docs/orders#external-orders)
        have different updateable fields than orders that have a regular payment processor
        like Payments AI or Stripe.
      operationId: updateOrders
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Order
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: object
                  "$ref": "#/components/schemas/OrderParametersUpdate"
            example:
              "$ref": "#/components/schemas/OrderParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderAttributes"
              example:
                id: 27
                public_id: tnVEFU
                order_number: '890012'
                workspace_id: 42000
                contact_id: 114
                live_mode: true
                total_amount: '123.00'
                currency: USD
                origination_channel_id: 31
                origination_channel_type: User
                shipping_address_first_name: Rupert
                shipping_address_last_name: Okuneva
                shipping_address_organization_name: Testing, Inc.
                shipping_address_phone_number: "+19053871234"
                shipping_address_street_one: 6412 Dennis Springs
                shipping_address_street_two: Apt. 647
                shipping_address_city: West Heathton
                shipping_address_region: WA
                shipping_address_country: US
                shipping_address_postal_code: '72484'
                billing_address_street_one: 3174 Carl Plaza
                billing_address_street_two: Apt. 246
                billing_address_city: East Claudie
                billing_address_region: WA
                billing_address_country: US
                billing_address_postal_code: 20607-5787
                page_id: 39
                notes: Nulla et possimus mollitia.
                in_trial: false
                billing_status: pending
                service_status: pending
                order_type: one-time-order
                next_charge_at:
                tax_amount: '0.00'
                trial_end_at:
                billing_payment_method_id:
                funnel_name:
                tag_ids:
                - 38
                discount_ids: []
                activated_at:
                workspace_sharing_id:
                canceled_at:
                canceled_by:
                cancel_reason:
                cancel_description:
                churned_at:
                created_at: '2025-05-21T12:19:08.340Z'
                updated_at: '2025-05-21T12:19:08.340Z'
                external_id:
                payment_processor: payments_ai
                phone_number: 610-911-4216 x6548
                page_name: Great Page
                origination_channel_name: ''
                order_page:
                  id: 39
                  public_id: GlBMcQ
                  name: Great Page
                contact:
                  id: 114
                  public_id: hPcvaS
                  workspace_id: 42000
                  anonymous:
                  email_address: test-910e0e0d830ac0a74f4b@example.com
                  first_name: Thelma
                  last_name: Denesik
                  phone_number: 610-911-4216 x6548
                  time_zone: Pacific Time (US & Canada)
                  uuid: 22bf7849-a4bd-4f3e-a0df-4ba6dd9d1cc6
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:08.220Z'
                  updated_at: '2025-05-21T12:19:08.220Z'
                  tags:
                  - id: 134
                    public_id: sJTckP
                    name: Example Tag
                    color: "#d38845"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                contact_groups:
                - id: 27
                  public_id: saNHKi
                  name: Example Group
                workspace:
                  id: 42000
                  public_id: wPxIbQ
                  team_id: 42000
                  name: Example Workspace
                  subdomain: example
                  created_at: '2025-05-21T12:19:08.214Z'
                  updated_at: '2025-05-21T12:19:08.214Z'
                segments:
                - id: 27
                  public_id: fjWHxw
                  name: Example Segment
                line_items:
                - id: 27
                  public_id: KJXReV
                  order_id: 27
                  quantity: 2
                  prorated:
                  created_at: '2025-04-04T03:07:33.081Z'
                  updated_at: '2025-05-26T10:01:34.824Z'
                  original_product:
                    id: 6505
                    public_id: JWkEqJ
                    name: My Subscription Newsletter
                  products_price:
                    id: 47
                    public_id: nYoXZN
                    amount: '39.99'
                    currency: usd
                    duration:
                    interval: months
                    interval_count: 1
                    key:
                  products_variant:
                    id: 23
                    public_id: RNpgYl
                    name: My Subscription Newsletter
                    description:
                    sku: sku_7291380226
                - id: 28
                  public_id: YNAsLX
                  order_id: 27
                  quantity: 1
                  prorated:
                  created_at:
                  updated_at:
                  original_product:
                    id: 73
                    public_id: BlAyZH
                    name: Ergonomic Marble Gloves 8494dc
                  products_price:
                    id: 44
                    public_id: bLmOos
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                    key:
                  products_variant:
                    id: 45
                    public_id: zImsLl
                    name: Durable Concrete Bottle variant 0f21
                    description: Dignissimos ea necessitatibus quia.
                    sku: kJr3xZBdDUoYbABj
                previous_line_item:
                affiliate:
                  name: Josh Fancy
                  email: test-46cbca9eaa71c368b5c5@example.com
                referral_code:
                  code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                  default: true
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
  "/workspaces/{workspace_id}/orders/invoices/restocks":
    get:
      tags:
      - Orders::Invoices::Restock
      summary: List Restocks
      description: List Restocks
      operationId: listRestocks
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  title: Restocks
                  description: Restocks
                  required:
                  - id
                  - workspace_id
                  - contact_id
                  - status
                  - included_invoices_line_items
                  - updated_at
                  - created_at
                  properties:
                    id:
                      type: integer
                      description: Restock ID
                    public_id:
                      type:
                      - string
                      - 'null'
                      description: Public Restock ID
                    workspace_id:
                      type: integer
                      description: Workspace ID
                    contact_id:
                      type: integer
                      description: Contact ID
                    status:
                      type: string
                      enum:
                      - cancelled
                      - restocked
                      description: Status
                    created_at:
                      type:
                      - string
                      - 'null'
                      format: date-time
                      description: Created At Date
                    updated_at:
                      type:
                      - string
                      - 'null'
                      format: date-time
                      description: Updated At Date
                    included_invoices_line_items:
                      type:
                      - array
                      - 'null'
                      items:
                        type: object
                        title: Included Orders Invoices Line Items
                        description: Included Orders Invoices Line Item
                        required:
                        - id
                        - fulfillment_id
                        - quantity
                        - invoices_line_item_id
                        properties:
                          id:
                            type: integer
                            description: Included Orders Line Item ID
                          public_id:
                            type:
                            - string
                            - 'null'
                            description: Public ID
                          fulfillment_id:
                            type: integer
                            description: Restock ID
                          quantity:
                            type: integer
                            description: Quantity
                          invoices_line_item_id:
                            type: integer
                            description: Invoices Line Item
                      description: Included order invoices line items
                  example:
                    id: 1
                    public_id: lDUzwt
                    workspace_id: 42
                    contact_id: 6
                    status: restocked
                    created_at: '2024-02-07T13:24:59.204Z'
                    updated_at: '2024-02-07T13:24:59.204Z'
                    included_invoices_line_items:
                    - id: 1
                      public_id: BegDsZ
                      fulfillment_id: 1
                      quantity: 1
                      invoices_line_item_id: 2
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/orders/invoices/restocks/{id}":
    get:
      tags:
      - Orders::Invoices::Restock
      summary: Fetch Restock
      description: Fetch Restock
      operationId: getRestock
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                title: Restock
                description: Restock
                required:
                - id
                - workspace_id
                - contact_id
                - status
                - updated_at
                - created_at
                properties:
                  id:
                    type: integer
                    description: Restock
                  public_id:
                    type:
                    - string
                    - 'null'
                    description: Public Restock ID
                  workspace_id:
                    type: integer
                    description: Workspace ID
                  contact_id:
                    type: integer
                    description: Contact ID
                  status:
                    type: string
                    enum:
                    - cancelled
                    - restocked
                    description: Status
                  created_at:
                    type:
                    - string
                    - 'null'
                    format: date-time
                    description: Created At Date
                  updated_at:
                    type:
                    - string
                    - 'null'
                    format: date-time
                    description: Updated At Date
                  included_invoices_line_items:
                    type:
                    - array
                    - 'null'
                    items:
                      type: object
                      title: Included Orders Invoices Line Items
                      description: Included Orders Invoices Line Item
                      required:
                      - id
                      - fulfillment_id
                      - quantity
                      - invoices_line_item_id
                      - included_invoices_line_items
                      - created_at
                      - updated_at
                      properties:
                        id:
                          type: integer
                          description: Included Orders Line Item ID
                        public_id:
                          type:
                          - string
                          - 'null'
                          description: Public ID
                        fulfillment_id:
                          type: integer
                          description: Restock ID
                        quantity:
                          type: integer
                          description: Quantity
                        invoices_line_item_id:
                          type: integer
                          description: Invoices Line Item
                    description: Included Order Invoices Line Items
                example:
                  id: 1
                  public_id: lDUzwt
                  workspace_id: 42
                  contact_id: 6
                  status: restocked
                  created_at: '2024-02-07T13:24:59.204Z'
                  updated_at: '2024-02-07T13:24:59.204Z'
                  included_invoices_line_items:
                  - id: 1
                    public_id: BegDsZ
                    fulfillment_id: 1
                    quantity: 1
                    invoices_line_item_id: 2
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'

  
  "/orders/{order_id}/invoices":
    get:
      tags:
      - Orders::Invoice
      summary: List Invoices
      description: List invoices for a specific order. Please refer to [our Orders Overview
        guide](https://developers.myclickfunnels.com/docs/orders/invoices) for more
        information about the different types of invoices and payment processors.
      operationId: listOrdersInvoices
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - "$ref": "#/components/parameters/InvoiceFilter"
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrdersInvoiceAttributes"
              example:
              - id: 9
                public_id: QCWqGn
                order_id: 31
                status: paid
                due_amount: '0.00'
                total_amount: '9.99'
                subtotal_amount: '9.99'
                tax_amount: '9.99'
                shipping_amount: '9.99'
                discount_amount: '9.99'
                currency: USD
                issued_at: '2025-05-21T12:19:09.000Z'
                due_at: '2025-06-28T12:19:09.000Z'
                paid_at: '2025-06-14T12:19:09.000Z'
                invoice_type:
                invoice_number: '99'
                fulfillment_status: not_applicable
                created_at: '2025-05-21T12:19:09.092Z'
                updated_at: '2025-05-21T12:19:09.092Z'
                external_id:
                payment_processor: payments_ai
                eligible_for_fulfillment: true
                line_items:
                - id: 16
                  public_id: IyfqHW
                  invoice_id: 9
                  external_id: Example External ID
                  payment_type: one_time
                  description: Example Description
                  quantity: 1
                  fulfillment_status: unfulfilled
                  external_product_id: Example External Product ID
                  discount_amount: '9.99'
                  state_tax_amount: '3.33'
                  county_tax_amount: '3.33'
                  city_tax_amount: '2.22'
                  district_tax_amount: '1.11'
                  state_tax_rate: '0.3'
                  county_tax_rate: '0.3'
                  city_tax_rate: '0.2'
                  district_tax_rate: '0.1'
                  country_tax_jurisdiction: Example Country Tax Jurisdiction
                  state_tax_jurisdiction: Example State Tax Jurisdiction
                  county_tax_jurisdiction: Example County Tax Jurisdiction
                  city_tax_jurisdiction: Example City Tax Jurisdiction
                  period_start_at:
                  period_end_at:
                  period_number:
                  created_at:
                  updated_at:
                  amount: '9.99'
                  products_price:
                    id: 49
                    public_id: WFMzJq
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                  products_variant:
                    id: 50
                    public_id: eRuTom
                    product_id: 83
                    name: Ergonomic Iron Gloves variant 398d
                    description: Eos quia cupiditate dolores.
                    sku: uNXltWSew3g1SLhe
                    fulfillment_required: false
                order:
                  id: 31
                  public_id: IdWrCY
                  order_number: '968035'
                  total_amount: '123.00'
                  origination_channel_id: 35
                  origination_channel_type: User
                  notes: Modi consectetur porro quae.
                  live_mode: true
                  in_trial: false
                  billing_status: pending
                  service_status: pending
                  order_type: one-time-order
                  next_charge_at:
                  trial_end_at:
                  tag_ids:
                  - 42
                  activated_at:
                  canceled_at:
                  canceled_by:
                  cancel_reason:
                  cancel_description:
                  churned_at:
                  shipping_address_first_name: Rupert
                  shipping_address_last_name: Ondricka
                  shipping_address_organization_name: Testing, Inc.
                  shipping_address_phone_number: "+19053871234"
                  shipping_address_street_one: 180 Candace Run
                  shipping_address_street_two: Suite 532
                  shipping_address_city: Babaraborough
                  shipping_address_region: WA
                  shipping_address_country: US
                  shipping_address_postal_code: 16757-8081
                  billing_address_street_one: 9868 Christoper Loaf
                  billing_address_street_two: Apt. 462
                  billing_address_city: Lake Lamonica
                  billing_address_region: WA
                  billing_address_country: US
                  billing_address_postal_code: '76808'
                  origination_channel_name: ''
                  contact:
                    id: 118
                    public_id: dqzMmo
                    workspace_id: 42000
                    anonymous:
                    email_address: test-10b7c441093d1a2b346d@example.com
                    first_name: Thurman
                    last_name: Frami
                    phone_number: 1-925-623-4768 x9930
                    time_zone: Pacific Time (US & Canada)
                    uuid: 3fcbbe6e-a132-4aa8-a22a-cf5f46ef78ee
                    unsubscribed_at:
                    last_notification_email_sent_at:
                    fb_url: https://www.facebook.com/example
                    twitter_url: https://twitter.com/example
                    instagram_url:
                    linkedin_url: https://www.linkedin.com/in/example
                    website_url: https://example.com
                    created_at: '2025-05-21T12:19:08.923Z'
                    updated_at: '2025-05-21T12:19:08.923Z'
                    tags:
                    - id: 138
                      public_id: wbgMoI
                      name: Example Tag
                      color: "#37b417"
                      applied_at:
                    custom_attributes:
                      CustomKey: MyText
                    visits:
                      first_visit:
                      last_visit:
                      last_visit_with_utm:
                  affiliate:
                    name: Josh Fancy
                    email: test-22c5503e7a300925b4b8@example.com
                  referral_code:
                    code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                    default: true
                  order_page:
                    id: 43
                    public_id: VnvFBT
                    name: Great Page
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
              - id: 10
                public_id: gmwZTV
                order_id: 32
                status: paid
                due_amount: '0.00'
                total_amount: '9.99'
                subtotal_amount: '9.99'
                tax_amount: '9.99'
                shipping_amount: '9.99'
                discount_amount: '9.99'
                currency: USD
                issued_at: '2025-05-21T12:19:09.000Z'
                due_at: '2025-06-28T12:19:09.000Z'
                paid_at: '2025-06-14T12:19:09.000Z'
                invoice_type:
                invoice_number: '99'
                fulfillment_status: not_applicable
                created_at: '2025-05-21T12:19:09.276Z'
                updated_at: '2025-05-21T12:19:09.276Z'
                external_id:
                payment_processor: payments_ai
                eligible_for_fulfillment: true
                line_items:
                - id: 17
                  public_id: ytzpQE
                  invoice_id: 10
                  external_id: Example External ID
                  payment_type: one_time
                  description: Example Description
                  quantity: 1
                  fulfillment_status: unfulfilled
                  external_product_id: Example External Product ID
                  discount_amount: '9.99'
                  state_tax_amount: '3.33'
                  county_tax_amount: '3.33'
                  city_tax_amount: '2.22'
                  district_tax_amount: '1.11'
                  state_tax_rate: '0.3'
                  county_tax_rate: '0.3'
                  city_tax_rate: '0.2'
                  district_tax_rate: '0.1'
                  country_tax_jurisdiction: Example Country Tax Jurisdiction
                  state_tax_jurisdiction: Example State Tax Jurisdiction
                  county_tax_jurisdiction: Example County Tax Jurisdiction
                  city_tax_jurisdiction: Example City Tax Jurisdiction
                  period_start_at:
                  period_end_at:
                  period_number:
                  created_at:
                  updated_at:
                  amount: '9.99'
                  products_price:
                    id: 51
                    public_id: tnSHOr
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                  products_variant:
                    id: 52
                    public_id: fovOlp
                    product_id: 86
                    name: Incredible Paper Pants variant d6da
                    description: Magnam consequatur aut necessitatibus.
                    sku: p0MAwuwWak8DQ2vX
                    fulfillment_required: false
                order:
                  id: 32
                  public_id: JKAIrw
                  order_number: '475656'
                  total_amount: '123.00'
                  origination_channel_id: 36
                  origination_channel_type: User
                  notes: Eos voluptatem vitae accusantium.
                  live_mode: true
                  in_trial: false
                  billing_status: pending
                  service_status: pending
                  order_type: one-time-order
                  next_charge_at:
                  trial_end_at:
                  tag_ids:
                  - 43
                  activated_at:
                  canceled_at:
                  canceled_by:
                  cancel_reason:
                  cancel_description:
                  churned_at:
                  shipping_address_first_name: Corie
                  shipping_address_last_name: Dach
                  shipping_address_organization_name: Testing, Inc.
                  shipping_address_phone_number: "+19053871234"
                  shipping_address_street_one: 573 Kihn Corners
                  shipping_address_street_two: Apt. 155
                  shipping_address_city: Lake Darron
                  shipping_address_region: WA
                  shipping_address_country: US
                  shipping_address_postal_code: '08595'
                  billing_address_street_one: 11180 Koepp Fork
                  billing_address_street_two: Apt. 260
                  billing_address_city: West Ozzie
                  billing_address_region: WA
                  billing_address_country: US
                  billing_address_postal_code: 25774-6281
                  origination_channel_name: ''
                  contact:
                    id: 119
                    public_id: IFeKta
                    workspace_id: 42000
                    anonymous:
                    email_address: test-0b1975fbcca710f89eda@example.com
                    first_name: Art
                    last_name: Wilderman
                    phone_number: "(444) 733-9351 x0570"
                    time_zone: Pacific Time (US & Canada)
                    uuid: f68a322e-7694-4a08-af95-8e09d17297a6
                    unsubscribed_at:
                    last_notification_email_sent_at:
                    fb_url: https://www.facebook.com/example
                    twitter_url: https://twitter.com/example
                    instagram_url:
                    linkedin_url: https://www.linkedin.com/in/example
                    website_url: https://example.com
                    created_at: '2025-05-21T12:19:09.103Z'
                    updated_at: '2025-05-21T12:19:09.103Z'
                    tags:
                    - id: 139
                      public_id: ZoPhTn
                      name: Example Tag
                      color: "#0214a9"
                      applied_at:
                    custom_attributes:
                      CustomKey: MyText
                    visits:
                      first_visit:
                      last_visit:
                      last_visit_with_utm:
                  affiliate:
                    name: Josh Fancy
                    email: test-778d58573f20e25287f5@example.com
                  referral_code:
                    code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                    default: true
                  order_page:
                    id: 44
                    public_id: pwExgW
                    name: Great Page
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/orders/invoices/{id}":
    get:
      tags:
      - Orders::Invoice
      summary: Fetch Invoice
      description: Retrieve an invoice for an order. Please refer to [our Orders Overview
        guide](https://developers.myclickfunnels.com/docs/orders/invoices) for more
        information about the different types of invoices and payment processors.
      operationId: getOrdersInvoices
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrdersInvoiceAttributes"
              example:
                id: 11
                public_id: ZTKGRl
                order_id: 33
                status: paid
                due_amount: '0.00'
                total_amount: '9.99'
                subtotal_amount: '9.99'
                tax_amount: '9.99'
                shipping_amount: '9.99'
                discount_amount: '9.99'
                currency: USD
                issued_at: '2025-05-21T12:19:09.000Z'
                due_at: '2025-06-28T12:19:09.000Z'
                paid_at: '2025-06-14T12:19:09.000Z'
                invoice_type:
                invoice_number: '99'
                fulfillment_status: not_applicable
                created_at: '2025-05-21T12:19:09.467Z'
                updated_at: '2025-05-21T12:19:09.467Z'
                external_id:
                payment_processor: payments_ai
                eligible_for_fulfillment: true
                line_items:
                - id: 18
                  public_id: IKFUzA
                  invoice_id: 11
                  external_id: Example External ID
                  payment_type: one_time
                  description: Example Description
                  quantity: 1
                  fulfillment_status: unfulfilled
                  external_product_id: Example External Product ID
                  discount_amount: '9.99'
                  state_tax_amount: '3.33'
                  county_tax_amount: '3.33'
                  city_tax_amount: '2.22'
                  district_tax_amount: '1.11'
                  state_tax_rate: '0.3'
                  county_tax_rate: '0.3'
                  city_tax_rate: '0.2'
                  district_tax_rate: '0.1'
                  country_tax_jurisdiction: Example Country Tax Jurisdiction
                  state_tax_jurisdiction: Example State Tax Jurisdiction
                  county_tax_jurisdiction: Example County Tax Jurisdiction
                  city_tax_jurisdiction: Example City Tax Jurisdiction
                  period_start_at:
                  period_end_at:
                  period_number:
                  created_at:
                  updated_at:
                  amount: '9.99'
                  products_price:
                    id: 53
                    public_id: uxBDOw
                    amount: '100.00'
                    currency: USD
                    duration:
                    interval:
                    interval_count:
                  products_variant:
                    id: 54
                    public_id: GTyYqI
                    product_id: 89
                    name: Ergonomic Concrete Gloves variant e8ac
                    description: Iste et quisquam nisi.
                    sku: Ocu2I8dyeBUKxRC5
                    fulfillment_required: false
                order:
                  id: 33
                  public_id: XIbFrP
                  order_number: '611250'
                  total_amount: '123.00'
                  origination_channel_id: 37
                  origination_channel_type: User
                  notes: Et quod sunt qui.
                  live_mode: true
                  in_trial: false
                  billing_status: pending
                  service_status: pending
                  order_type: one-time-order
                  next_charge_at:
                  trial_end_at:
                  tag_ids:
                  - 44
                  activated_at:
                  canceled_at:
                  canceled_by:
                  cancel_reason:
                  cancel_description:
                  churned_at:
                  shipping_address_first_name: Kermit
                  shipping_address_last_name: Bruen
                  shipping_address_organization_name: Testing, Inc.
                  shipping_address_phone_number: "+19053871234"
                  shipping_address_street_one: 563 Abshire Stravenue
                  shipping_address_street_two: Suite 129
                  shipping_address_city: Derekburgh
                  shipping_address_region: WA
                  shipping_address_country: US
                  shipping_address_postal_code: '13435'
                  billing_address_street_one: 643 Monroe Branch
                  billing_address_street_two: Suite 242
                  billing_address_city: Leannonview
                  billing_address_region: WA
                  billing_address_country: US
                  billing_address_postal_code: 92010-3847
                  origination_channel_name: ''
                  contact:
                    id: 120
                    public_id: sPlOTY
                    workspace_id: 42000
                    anonymous:
                    email_address: test-1ca21fb7c935e1005dd6@example.com
                    first_name: Shayne
                    last_name: Nitzsche
                    phone_number: 1-477-193-5701 x3539
                    time_zone: Pacific Time (US & Canada)
                    uuid: b47f008a-7c8b-48e0-9888-fb90ef880341
                    unsubscribed_at:
                    last_notification_email_sent_at:
                    fb_url: https://www.facebook.com/example
                    twitter_url: https://twitter.com/example
                    instagram_url:
                    linkedin_url: https://www.linkedin.com/in/example
                    website_url: https://example.com
                    created_at: '2025-05-21T12:19:09.302Z'
                    updated_at: '2025-05-21T12:19:09.302Z'
                    tags:
                    - id: 140
                      public_id: noehjq
                      name: Example Tag
                      color: "#d4f495"
                      applied_at:
                    custom_attributes:
                      CustomKey: MyText
                    visits:
                      first_visit:
                      last_visit:
                      last_visit_with_utm:
                  affiliate:
                    name: Josh Fancy
                    email: test-cd15ff252574dd8a1a4c@example.com
                  referral_code:
                    code: d473754c5567e94800c1d16ef4b3fb394b9cfe49f25c80f755226186c390740c
                    default: true
                  order_page:
                    id: 45
                    public_id: ovwGAu
                    name: Great Page
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
  "/workspaces/{workspace_id}/orders/invoices":
    get:
      tags:
      - Orders::Invoice
      summary: List Workspace Invoices
      description: List all invoices for a specific workspace. Please refer to the [API
        documentation](https://developers.myclickfunnels.com/docs/orders/invoices) for
        more information about the different types of invoices and payment processors.
      operationId: listWorkspaceOrdersInvoices
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - "$ref": "#/components/parameters/InvoiceFilter"
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrdersInvoiceAttributes"
              example:
                "$ref": "#/components/schemas/OrdersInvoiceAttributes/example"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'

  /orders/{order_id}/transactions:
    get:
      tags:
        - Orders::Transaction
      summary: "List Transactions"
      description: List transactions for an order
      operationId: listOrdersTransactions
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrdersTransactionAttributes"
              example:
                - id: 2
                  public_id: mekPqX
                  order_id: 40
                  status: completed
                  external_type: sale
                  external_id: 2dda24cd16d0b2335d5cb282720a9eda
                  amount: '100.00'
                  currency: USD
                  reason:
                  adjusted_transaction_id:
                  result: approved
                  billing_payment_instruction_id:
                  billing_payment_instruction_type:
                  arn:
                  is_rebill: false
                  rebill_number:
                  created_at:
                  updated_at:
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                - id: 3
                  public_id: UuJdvl
                  order_id: 41
                  status: completed
                  external_type: sale
                  external_id: ea23155131231144c2ed5aa0ff3ab339
                  amount: '100.00'
                  currency: USD
                  reason:
                  adjusted_transaction_id:
                  result: approved
                  billing_payment_instruction_id:
                  billing_payment_instruction_type:
                  arn:
                  is_rebill: false
                  rebill_number:
                  created_at:
                  updated_at:
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
  /orders/transactions/{id}:
    get:
      tags:
        - Orders::Transaction
      summary: "Fetch Transaction"
      description: Retrieve a transaction for an order
      operationId: getOrdersTransactions
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersTransactionAttributes"
              example:
                id: 4
                public_id: BLTpCu
                order_id: 42
                status: completed
                external_type: sale
                external_id: 95360c58a47f1693edefaae73cd34e10
                amount: '100.00'
                currency: USD
                reason:
                adjusted_transaction_id:
                result: approved
                billing_payment_instruction_id:
                billing_payment_instruction_type:
                arn:
                is_rebill: false
                rebill_number:
                created_at:
                updated_at:
                visits:
                  first_visit:
                  last_visit:
                  last_visit_with_utm:
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /workspaces/{workspace_id}/orders/tags:
    get:
      tags:
        - Orders::Tag
      summary: "List Tags"
      description: List all order tags for your workspace
      operationId: listOrdersTags
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrdersTagAttributes"
              example:
                - id: 60
                  public_id: RSUMsg
                  workspace_id: 42000
                  name: Example Tag
                  color: "#02cc9d"
                  created_at: '2025-06-21T12:19:12.044Z'
                  updated_at: '2025-06-21T12:19:12.044Z'
                - id: 61
                  public_id: MWheqb
                  workspace_id: 42000
                  name: Example Tag
                  color: "#bca176"
                  created_at: '2025-06-21T12:19:12.046Z'
                  updated_at: '2025-06-21T12:19:12.046Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Orders::Tag
      summary: "Create Tag"
      description: Add a new order tag to your workspace
      operationId: createOrdersTags
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Tag"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders_tag:
                  type: object
                  $ref: "#/components/schemas/OrdersTagParameters"
            example:
              $ref: "#/components/schemas/OrdersTagParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersTagAttributes"
              example:
                id: 63
                public_id: aQJiyg
                workspace_id: 42000
                name: Example Tag
                color: "#7341dc"
                created_at: '2025-06-21T12:19:12.054Z'
                updated_at: '2025-06-21T12:19:12.054Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /orders/tags/{id}:
    get:
      tags:
        - Orders::Tag
      summary: "Fetch Tag"
      description: Retrieve a single order tag
      operationId: getOrdersTags
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersTagAttributes"
              example:
                id: 62
                public_id: OKWxoF
                workspace_id: 42000
                name: Example Tag
                color: "#491242"
                created_at: '2025-06-21T12:19:12.051Z'
                updated_at: '2025-06-21T12:19:12.051Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Orders::Tag
      summary: "Update Tag"
      description: Update an order tag
      operationId: updateOrdersTags
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Tag"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders_tag:
                  type: object
                  $ref: "#/components/schemas/OrdersTagParametersUpdate"
            example:
              $ref: "#/components/schemas/OrdersTagParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersTagAttributes"
              example:
                id: 65
                public_id: GRSYuf
                workspace_id: 42000
                name: Example Tag
                color: "#164ace"
                created_at: '2025-06-21T12:19:12.060Z'
                updated_at: '2025-06-21T12:19:12.060Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Orders::Tag
      summary: "Remove Tag"
      description: Delete an order tag from your workspace
      operationId: removeOrdersTags
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


  
  "/workspaces/{workspace_id}/pages":
    get:
      tags:
      - Page
      summary: List Pages
      description: Page offers extra information about ClickFunnels pages, like those
        that are part of funnels.
      operationId: listPages
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of page IDs to filter by.
              example: 142
            theme_id:
              type: string
              description: A comma-separated list of theme IDs to filter by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PageAttributes"
              example:
              - id: 61
                public_id: gHoTkZ
                workspace_id: 42000
                name: Great Page
                theme_id:
                created_at: '2025-05-21T12:19:12.081Z'
                updated_at: '2025-05-21T12:19:12.081Z'
              - id: 62
                public_id: UfuQHw
                workspace_id: 42000
                name: Great Page
                theme_id:
                created_at: '2025-05-21T12:19:12.090Z'
                updated_at: '2025-05-21T12:19:12.090Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
  "/pages/{id}":
    get:
      tags:
      - Page
      summary: Fetch Page
      description: Page offers extra information about ClickFunnels pages, like those
        that are part of funnels.
      operationId: getPages
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PageAttributes"
              example:
                id: 63
                public_id: LsuMNg
                workspace_id: 42000
                name: Great Page
                theme_id:
                created_at: '2025-05-21T12:19:12.102Z'
                updated_at: '2025-05-21T12:19:12.102Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Page
      summary: Update Page
      description: Page offers extra information about ClickFunnels pages, like those
        that are part of funnels.
      operationId: updatePages
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Page
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: object
                  "$ref": "#/components/schemas/PageParametersUpdate"
            example:
              "$ref": "#/components/schemas/PageParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PageAttributes"
              example:
                id: 66
                public_id: geIPxG
                workspace_id: 42000
                name: Great Page
                theme_id:
                created_at: '2025-05-21T12:19:12.140Z'
                updated_at: '2025-05-21T12:19:12.140Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  
  "/workspaces/{workspace_id}/products":
    get:
      tags:
      - Product
      summary: List Products
      description: List all products for a workspace
      operationId: listProducts
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of product IDs to filter by.
              example: 123
            visible_in_store:
              type: boolean
              description: Filter products by visibility in the online store.
              example: true
              enum:
              - true
              - false
            visible_in_customer_center:
              type: boolean
              description: Filter products by visibility in the customer center.
              example: true
              enum:
              - true
              - false
            archived:
              type: boolean
              description: Filter products by archived state.
              example: true
              enum:
              - true
              - false
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductAttributes"
              example:
              - id: 126
                public_id: KjCiZL
                workspace_id: 42000
                name: Heavy Duty Wooden Bag 41bef7
                current_path:
                archived: false
                visible_in_store: true
                visible_in_customer_center: true
                image_id:
                seo_title: Culpa ullam qui voluptas.
                seo_description: Esse in aperiam nesciunt.
                seo_image_id:
                commissionable: true
                image_ids: []
                default_variant_id: 126
                variant_ids:
                - 126
                price_ids: []
                tag_ids: []
                redirect_funnel_id:
                cancellation_funnel_url:
                created_at: '2025-06-21T12:19:12.193Z'
                updated_at: '2025-06-21T12:19:12.193Z'
                variant_properties:
                - id: 126
                  name: Color
              - id: 127
                public_id: msxpGX
                workspace_id: 42000
                name: Awesome Iron Plate 0c6290
                current_path:
                archived: false
                visible_in_store: true
                visible_in_customer_center: true
                image_id:
                seo_title: Reiciendis eos ea molestiae.
                seo_description: Officia voluptas voluptatem nesciunt.
                seo_image_id:
                commissionable: true
                image_ids: []
                default_variant_id: 127
                variant_ids:
                - 127
                price_ids: []
                tag_ids: []
                redirect_funnel_id:
                cancellation_funnel_url:
                created_at: '2025-06-21T12:19:12.206Z'
                updated_at: '2025-06-21T12:19:12.206Z'
                variant_properties:
                - id: 127
                  name: Color
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Product
      summary: Create Product
      description: Add a new product to a workspace
      operationId: createProducts
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  "$ref": "#/components/schemas/ProductParameters"
            example:
              "$ref": "#/components/schemas/ProductParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductAttributes"
              example:
                id: 129
                public_id: sFNwen
                workspace_id: 42000
                name: Practical Marble Shoes 1e7b1d
                current_path:
                archived: false
                visible_in_store: true
                visible_in_customer_center: true
                image_id:
                seo_title: Est eum necessitatibus quia.
                seo_description: Autem hic aut enim.
                seo_image_id:
                commissionable: true
                image_ids: []
                default_variant_id: 129
                variant_ids:
                - 129
                price_ids: []
                tag_ids: []
                redirect_funnel_id:
                cancellation_funnel_url:
                created_at: '2025-06-21T12:19:12.248Z'
                updated_at: '2025-06-21T12:19:12.248Z'
                variant_properties:
                - id: 129
                  name: Color
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/products/{id}":
    get:
      tags:
      - Product
      summary: Fetch Product
      description: Retrieve a product for a workspace
      operationId: getProducts
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductAttributes"
              example:
                id: 128
                public_id: CuHkGe
                workspace_id: 42000
                name: Gorgeous Iron Chair de2643
                current_path:
                archived: false
                visible_in_store: true
                visible_in_customer_center: true
                image_id:
                seo_title: Fugit facere explicabo quia.
                seo_description: Sapiente dolor optio sint.
                seo_image_id:
                commissionable: true
                image_ids: []
                default_variant_id: 128
                variant_ids:
                - 128
                price_ids: []
                tag_ids: []
                redirect_funnel_id:
                cancellation_funnel_url:
                created_at: '2025-06-21T12:19:12.230Z'
                updated_at: '2025-06-21T12:19:12.230Z'
                variant_properties:
                - id: 128
                  name: Color
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Product
      summary: Update Product
      description: Update a product for a workspace
      operationId: updateProducts
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Product
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  "$ref": "#/components/schemas/ProductParametersUpdate"
            example:
              "$ref": "#/components/schemas/ProductParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductAttributes"
              example:
                id: 130
                public_id: xOFGgU
                workspace_id: 42000
                name: Heavy Duty Aluminum Hat b4f764
                current_path:
                archived: false
                visible_in_store: true
                visible_in_customer_center: true
                image_id:
                seo_title: Omnis asperiores totam debitis.
                seo_description: Et aut ea libero.
                seo_image_id:
                commissionable: true
                image_ids: []
                default_variant_id: 130
                variant_ids:
                - 130
                price_ids: []
                tag_ids: []
                redirect_funnel_id:
                cancellation_funnel_url:
                created_at: '2025-06-21T12:19:12.265Z'
                updated_at: '2025-06-21T12:19:12.265Z'
                variant_properties:
                - id: 130
                  name: Color
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
  "/products/{id}/archive":
    post:
      tags:
      - Product
      summary: Archive a Product
      description: This will archive a Product. A product can only be archived if it&#39;s
        not in the &quot;live&quot; state.
      operationId: archiveProducts
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductAttributes"
              example:
                "$ref": "#/components/schemas/ProductAttributes/example"
        '404':
          description: Not Found
        '409':
          description: Conflict - occurs if product is already archived.
        '422':
          description: Unprocessable Entity
  "/products/{id}/unarchive":
    post:
      tags:
      - Product
      summary: Unarchive a Product
      description: This will unarchive a Product.
      operationId: unarchiveProducts
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductAttributes"
              example:
                "$ref": "#/components/schemas/ProductAttributes/example"
        '404':
          description: Not Found
        '409':
          description: Conflict - occurs if product is not archived.
        '422':
          description: Unprocessable Entity

  
  "/workspaces/{workspace_id}/products/collections":
    get:
      tags:
      - Products::Collection
      summary: List Collections
      description: List Collections
      operationId: listProductsCollections
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of collection IDs to filter by.
              example: 123
            visible_in_store:
              type: boolean
              description: Filter collections by visibility in the online store.
              example: true
              enum:
              - true
              - false
            archived:
              type: boolean
              description: Filter collections by archived state.
              example: true
              enum:
              - true
              - false
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductsCollectionAttributes"
              example:
              - id: 2
                public_id: eLvGPd
                workspace_id: 42000
                name: Example Collection
                description: Example Description
                collection_type: manual
                product_ids: []
                sort_method: manually
                archived: false
                image_id:
                visible_in_store: true
                current_path:
                seo_title: Example SEO Title
                seo_description: Example SEO Description
                seo_indexable:
                social_image_id:
                created_at:
                updated_at:
              - id: 3
                public_id: ARGlrf
                workspace_id: 42000
                name: Example Collection
                description: Example Description
                collection_type: manual
                product_ids: []
                sort_method: manually
                archived: false
                image_id:
                visible_in_store: true
                current_path:
                seo_title: Example SEO Title
                seo_description: Example SEO Description
                seo_indexable:
                social_image_id:
                created_at:
                updated_at:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Products::Collection
      summary: Create Collection
      description: Create Collection
      operationId: createProductsCollections
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Collection
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_collection:
                  type: object
                  "$ref": "#/components/schemas/ProductsCollectionParameters"
            example:
              "$ref": "#/components/schemas/ProductsCollectionParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsCollectionAttributes"
              example:
                id: 5
                public_id: IaWxcS
                workspace_id: 42000
                name: Example Collection
                description: Example Description
                collection_type: manual
                product_ids: []
                sort_method: manually
                archived: false
                image_id:
                visible_in_store: true
                current_path:
                seo_title: Example SEO Title
                seo_description: Example SEO Description
                seo_indexable:
                social_image_id:
                created_at:
                updated_at:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/products/collections/{id}":
    get:
      tags:
      - Products::Collection
      summary: Fetch Collection
      description: Fetch Collection
      operationId: getProductsCollections
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsCollectionAttributes"
              example:
                id: 4
                public_id: SBUqrh
                workspace_id: 42000
                name: Example Collection
                description: Example Description
                collection_type: manual
                product_ids: []
                sort_method: manually
                archived: false
                image_id:
                visible_in_store: true
                current_path:
                seo_title: Example SEO Title
                seo_description: Example SEO Description
                seo_indexable:
                social_image_id:
                created_at:
                updated_at:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Products::Collection
      summary: Update Collection
      description: Update Collection
      operationId: updateProductsCollections
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Collection
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_collection:
                  type: object
                  "$ref": "#/components/schemas/ProductsCollectionParametersUpdate"
            example:
              "$ref": "#/components/schemas/ProductsCollectionParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsCollectionAttributes"
              example:
                id: 7
                public_id: mANknw
                workspace_id: 42000
                name: Example Collection
                description: Example Description
                collection_type: manual
                product_ids: []
                sort_method: manually
                archived: false
                image_id:
                visible_in_store: true
                current_path:
                seo_title: Example SEO Title
                seo_description: Example SEO Description
                seo_indexable:
                social_image_id:
                created_at:
                updated_at:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/products/{product_id}/prices":
    get:
      tags:
      - Products::Price
      summary: List Prices
      description: List all prices for a given variant
      operationId: listProductsPrices
      parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of price IDs to filter by.
              example: 123
            variant_id:
              type: string
              description: A comma-separated list of variant IDs to filter by.
              example: 123
            visible:
              type: boolean
              description: Filter prices by visibility in the online store.
              example: true
              enum:
              - true
              - false
            archived:
              type: boolean
              description: Filter prices by archived state.
              example: true
              enum:
              - true
              - false
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductsPriceAttributes"
              example:
              - id: 75
                public_id: xWgzMD
                variant_id: 76
                name: Example Price
                amount: '100.00'
                cost: '0.00'
                currency: USD
                duration:
                interval:
                trial_interval:
                trial_duration:
                trial_amount: '0.00'
                setup_amount:
                self_cancel: true
                self_upgrade: true
                self_downgrade: true
                self_reactivate: true
                interval_count:
                payment_type: one_time
                visible: true
                compare_at_amount:
                key:
                archived: false
                created_at: '2025-06-21T12:19:12.341Z'
                updated_at: '2025-06-21T12:19:12.341Z'
              - id: 76
                public_id: Wnvdxt
                variant_id: 77
                name: Example Price
                amount: '100.00'
                cost: '0.00'
                currency: USD
                duration:
                interval:
                trial_interval:
                trial_duration:
                trial_amount: '0.00'
                setup_amount:
                self_cancel: true
                self_upgrade: true
                self_downgrade: true
                self_reactivate: true
                interval_count:
                payment_type: one_time
                visible: true
                compare_at_amount:
                key:
                archived: false
                created_at: '2025-06-21T12:19:12.359Z'
                updated_at: '2025-06-21T12:19:12.359Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Products::Price
      summary: Create Price
      description: Create a new price for a given variant
      operationId: createProductsPrices
      parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Price
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_price:
                  type: object
                  "$ref": "#/components/schemas/ProductsPriceParameters"
            example:
              "$ref": "#/components/schemas/ProductsPriceParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsPriceAttributes"
              example:
                id: 78
                public_id: lyCosm
                variant_id: 79
                name: Example Price
                amount: '100.00'
                cost: '0.00'
                currency: USD
                duration:
                interval:
                trial_interval:
                trial_duration:
                trial_amount: '0.00'
                setup_amount:
                self_cancel: true
                self_upgrade: true
                self_downgrade: true
                self_reactivate: true
                interval_count:
                payment_type: one_time
                visible: true
                compare_at_amount:
                key:
                archived: false
                created_at: '2025-06-21T12:19:12.403Z'
                updated_at: '2025-06-21T12:19:12.403Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/products/prices/{id}":
    get:
      tags:
      - Products::Price
      summary: Fetch Price
      description: Retrieve a single price
      operationId: getProductsPrices
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsPriceAttributes"
              example:
                id: 77
                public_id: dAMeTy
                variant_id: 78
                name: Example Price
                amount: '100.00'
                cost: '0.00'
                currency: USD
                duration:
                interval:
                trial_interval:
                trial_duration:
                trial_amount: '0.00'
                setup_amount:
                self_cancel: true
                self_upgrade: true
                self_downgrade: true
                self_reactivate: true
                interval_count:
                payment_type: one_time
                visible: true
                compare_at_amount:
                key:
                archived: false
                created_at: '2025-06-21T12:19:12.384Z'
                updated_at: '2025-06-21T12:19:12.384Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Products::Price
      summary: Update Price
      description: Update a single price
      operationId: updateProductsPrices
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Price
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_price:
                  type: object
                  "$ref": "#/components/schemas/ProductsPriceParametersUpdate"
            example:
              "$ref": "#/components/schemas/ProductsPriceParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsPriceAttributes"
              example:
                id: 79
                public_id: vxpcQs
                variant_id: 80
                name: Example Price
                amount: '100.00'
                cost: '0.00'
                currency: USD
                duration:
                interval:
                trial_interval:
                trial_duration:
                trial_amount: '0.00'
                setup_amount:
                self_cancel: true
                self_upgrade: true
                self_downgrade: true
                self_reactivate: true
                interval_count:
                payment_type: one_time
                visible: true
                compare_at_amount:
                key:
                archived: false
                created_at: '2025-06-21T12:19:12.421Z'
                updated_at: '2025-06-21T12:19:12.421Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/products/{product_id}/variants":
    get:
      tags:
      - Products::Variant
      summary: List Variants
      description: List variants for a product
      operationId: listProductsVariants
      parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of variant IDs to filter by.
              example: 123
            visible:
              type: boolean
              description: Filter variants by visibility in the online store.
              example: true
              enum:
              - true
              - false
            archived:
              type: boolean
              description: Filter variants by archived state.
              example: true
              enum:
              - true
              - false
            fulfillment_required:
              type: boolean
              description: Filter variants by fulfillment required state.
              example: true
              enum:
              - true
              - false
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductsVariantAttributes"
              example:
              - id: 81
                public_id: tSgbvl
                product_id: 136
                name: Ergonomic Concrete Table variant aa5e
                description: Possimus officiis architecto laborum.
                sku: F0f7KtuC7Elp773t
                product_type: physical
                properties_value_ids:
                -
                out_of_stock_sales:
                weight: '74.0'
                weight_unit: lb
                height: '14.0'
                width: '756.0'
                length: '62.0'
                dimensions_unit: inches
                quantity: 0
                tag_ids:
                - 218
                tax_category_id:
                asset_ids: []
                taxable:
                track_quantity: false
                archived: false
                visible: true
                price_ids: []
                fulfillment_required: false
                country_of_manufacture_id:
                image_ids: []
                fulfillments_location_ids: []
                created_at: '2025-06-21T12:19:12.444Z'
                updated_at: '2025-06-21T12:19:12.444Z'
                default: false
                properties_values:
                - property_id: 81
                  value: Harlequin
                created_by_platform_application:
              - id: 82
                public_id: PzZyEK
                product_id: 137
                name: Enormous Steel Table variant 55e9
                description: Sunt dolores sint eum.
                sku: ykoixLwpXY2IgYED
                product_type: physical
                properties_value_ids:
                -
                out_of_stock_sales:
                weight: '68.0'
                weight_unit: lb
                height: '54.0'
                width: '761.0'
                length: '65.0'
                dimensions_unit: inches
                quantity: 0
                tag_ids:
                - 220
                tax_category_id:
                asset_ids: []
                taxable:
                track_quantity: false
                archived: false
                visible: true
                price_ids: []
                fulfillment_required: false
                country_of_manufacture_id:
                image_ids: []
                fulfillments_location_ids: []
                created_at: '2025-06-21T12:19:12.463Z'
                updated_at: '2025-06-21T12:19:12.463Z'
                default: false
                properties_values:
                - property_id: 82
                  value: Green
                created_by_platform_application:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Products::Variant
      summary: Create Variant
      description: Create a new variant for a product
      operationId: createProductsVariants
      parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Variant
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_variant:
                  type: object
                  "$ref": "#/components/schemas/ProductsVariantParameters"
            example:
              "$ref": "#/components/schemas/ProductsVariantParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsVariantAttributes"
              example:
                id: 84
                public_id: WUvlLP
                product_id: 139
                name: Gorgeous Granite Bottle variant 25f6
                description: Occaecati animi numquam placeat.
                sku: 6l7tBgFdRZc1whsL
                product_type: physical
                properties_value_ids:
                -
                out_of_stock_sales:
                weight: '35.0'
                weight_unit: lb
                height: '35.0'
                width: '296.0'
                length: '47.0'
                dimensions_unit: inches
                quantity: 0
                tag_ids:
                - 224
                tax_category_id:
                asset_ids: []
                taxable:
                track_quantity: false
                archived: false
                visible: true
                price_ids: []
                fulfillment_required: false
                country_of_manufacture_id:
                image_ids: []
                fulfillments_location_ids: []
                created_at: '2025-06-21T12:19:12.513Z'
                updated_at: '2025-06-21T12:19:12.513Z'
                default: false
                properties_values:
                - property_id: 84
                  value: Jade
                created_by_platform_application:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/products/variants/{id}":
    get:
      tags:
      - Products::Variant
      summary: Fetch Variant
      description: Retrieve a single variant
      operationId: getProductsVariants
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsVariantAttributes"
              example:
                id: 83
                public_id: DMrNTU
                product_id: 138
                name: Heavy Duty Rubber Watch variant b102
                description: Aperiam dolor sunt et.
                sku: VVA4j0lUyhHodgo4
                product_type: physical
                properties_value_ids:
                -
                out_of_stock_sales:
                weight: '63.0'
                weight_unit: lb
                height: '80.0'
                width: '695.0'
                length: '16.0'
                dimensions_unit: inches
                quantity: 0
                tag_ids:
                - 222
                tax_category_id:
                asset_ids: []
                taxable:
                track_quantity: false
                archived: false
                visible: true
                price_ids: []
                fulfillment_required: false
                country_of_manufacture_id:
                image_ids: []
                fulfillments_location_ids: []
                created_at: '2025-06-21T12:19:12.490Z'
                updated_at: '2025-06-21T12:19:12.490Z'
                default: false
                properties_values:
                - property_id: 83
                  value: Peach
                created_by_platform_application:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Products::Variant
      summary: Update Variant
      description: Update a single variant
      operationId: updateProductsVariants
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Variant
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_variant:
                  type: object
                  "$ref": "#/components/schemas/ProductsVariantParametersUpdate"
            example:
              "$ref": "#/components/schemas/ProductsVariantParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsVariantAttributes"
              example:
                id: 86
                public_id: BdhlCq
                product_id: 141
                name: Enormous Leather Shoes variant 60c5
                description: Iusto consequuntur laboriosam deleniti.
                sku: TiE3N2txNfaOQDlh
                product_type: physical
                properties_value_ids:
                -
                out_of_stock_sales:
                weight: '23.0'
                weight_unit: lb
                height: '83.0'
                width: '271.0'
                length: '16.0'
                dimensions_unit: inches
                quantity: 0
                tag_ids:
                - 228
                tax_category_id:
                asset_ids: []
                taxable:
                track_quantity: false
                archived: false
                visible: true
                price_ids: []
                fulfillment_required: false
                country_of_manufacture_id:
                image_ids: []
                fulfillments_location_ids: []
                created_at: '2025-06-21T12:19:12.566Z'
                updated_at: '2025-06-21T12:19:12.566Z'
                default: false
                properties_values:
                - property_id: 86
                  value: Black
                created_by_platform_application:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/workspaces/{workspace_id}/products/tags":
    get:
      tags:
      - Products::Tag
      summary: List Tags
      description: List tags for a product
      operationId: listProductsTags
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of tag IDs to filter by.
              example: 123
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductsTagAttributes"
              example:
              - id: 235
                public_id: KfgUaV
                workspace_id: 42000
                name: Example Tag
                color: gold
                created_at: '2025-06-21T12:19:12.659Z'
                updated_at: '2025-06-21T12:19:12.659Z'
              - id: 236
                public_id: XkOBlY
                workspace_id: 42000
                name: Example Tag
                color: lavender
                created_at: '2025-06-21T12:19:12.662Z'
                updated_at: '2025-06-21T12:19:12.662Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Products::Tag
      summary: Create Tag
      description: Add a new tag to a product
      operationId: createProductsTags
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_tag:
                  type: object
                  "$ref": "#/components/schemas/ProductsTagParameters"
            example:
              "$ref": "#/components/schemas/ProductsTagParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsTagAttributes"
              example:
                id: 238
                public_id: OQdESy
                workspace_id: 42000
                name: Example Tag
                color: champagne
                created_at: '2025-06-21T12:19:12.670Z'
                updated_at: '2025-06-21T12:19:12.670Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/products/tags/{id}":
    get:
      tags:
      - Products::Tag
      summary: Fetch Tag
      description: Retrieve a tag for a product
      operationId: getProductsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsTagAttributes"
              example:
                id: 237
                public_id: iXvfMy
                workspace_id: 42000
                name: Example Tag
                color: raspberry
                created_at: '2025-06-21T12:19:12.666Z'
                updated_at: '2025-06-21T12:19:12.666Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Products::Tag
      summary: Update Tag
      description: Update a tag for a product
      operationId: updateProductsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Tag
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products_tag:
                  type: object
                  "$ref": "#/components/schemas/ProductsTagParametersUpdate"
            example:
              "$ref": "#/components/schemas/ProductsTagParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductsTagAttributes"
              example:
                id: 240
                public_id: lmCAIs
                workspace_id: 42000
                name: Example Tag
                color: white
                created_at: '2025-06-21T12:19:12.677Z'
                updated_at: '2025-06-21T12:19:12.677Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Products::Tag
      summary: Remove Tag
      description: Delete a tag for a product
      operationId: removeProductsTags
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  
  "/workspaces/{workspace_id}/sales/pipelines":
    get:
      tags:
      - Sales::Pipeline
      summary: List Pipelines
      description: List Pipelines
      operationId: listSalesPipelines
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of pipeline IDs to filter by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SalesPipelineAttributes"
              example:
              - id: 5
                public_id: BEtplK
                workspace_id: 42000
                name: Example Pipeline
                created_at: '2025-06-14T12:19:12.693Z'
                updated_at: '2025-06-14T12:19:12.693Z'
                total_value: 0
                stages:
                - id: 19
                  public_id: mZRNMq
                  workspace_id: 6
                  pipeline_id: 5
                  name: Example Stage
                  sort_order: 12
                  close_probability: 20.0
                  opportunity_ids:
                  - 25
                  - 26
                  total_value: 0
                  weighted_value: 0.0
                - id: 20
                  public_id: haYqei
                  workspace_id: 6
                  pipeline_id: 5
                  name: Example Stage
                  sort_order: 13
                  close_probability: 20.0
                  opportunity_ids:
                  - 27
                  - 28
                  total_value: 0
                  weighted_value: 0.0
              - id: 6
                public_id: BDFeVk
                workspace_id: 42000
                name: Example Pipeline
                created_at: '2025-06-14T12:19:13.485Z'
                updated_at: '2025-06-14T12:19:13.485Z'
                total_value: 0
                stages:
                - id: 21
                  public_id: PhQsCV
                  workspace_id: 7
                  pipeline_id: 6
                  name: Example Stage
                  sort_order: 14
                  close_probability: 20.0
                  opportunity_ids:
                  - 29
                  - 30
                  total_value: 0
                  weighted_value: 0.0
                - id: 22
                  public_id: HKxyVX
                  workspace_id: 7
                  pipeline_id: 6
                  name: Example Stage
                  sort_order: 15
                  close_probability: 20.0
                  opportunity_ids:
                  - 31
                  - 32
                  total_value: 0
                  weighted_value: 0.0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Sales::Pipeline
      summary: Create Pipeline
      description: Create Pipeline
      operationId: createSalesPipelines
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Pipeline
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_pipeline:
                  type: object
                  "$ref": "#/components/schemas/SalesPipelineParameters"
            example:
              "$ref": "#/components/schemas/SalesPipelineParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesPipelineAttributes"
              example:
                id: 8
                public_id: tJlzCR
                workspace_id: 42000
                name: Example Pipeline
                created_at: '2025-06-14T12:19:15.295Z'
                updated_at: '2025-06-14T12:19:15.295Z'
                total_value: 0
                stages:
                - id: 25
                  public_id: eVPMrl
                  workspace_id:
                  pipeline_id: 8
                  name: Example Stage
                  sort_order: 18
                  close_probability: 20.0
                  opportunity_ids:
                  - 37
                  - 38
                  total_value: 0
                  weighted_value: 0.0
                - id: 26
                  public_id: CpKieU
                  workspace_id:
                  pipeline_id: 8
                  name: Example Stage
                  sort_order: 19
                  close_probability: 20.0
                  opportunity_ids:
                  - 39
                  - 40
                  total_value: 0
                  weighted_value: 0.0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/sales/pipelines/{id}":
    get:
      tags:
      - Sales::Pipeline
      summary: Fetch Pipeline
      description: Fetch Pipeline
      operationId: getSalesPipelines
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesPipelineAttributes"
              example:
                id: 7
                public_id: mbWAiU
                workspace_id: 42000
                name: Example Pipeline
                created_at: '2025-06-14T12:19:14.486Z'
                updated_at: '2025-06-14T12:19:14.486Z'
                total_value: 0
                stages:
                - id: 23
                  public_id: VzOhai
                  workspace_id: 4
                  pipeline_id: 7
                  name: Example Stage
                  sort_order: 16
                  close_probability: 20.0
                  opportunity_ids:
                  - 33
                  - 34
                  total_value: 0
                  weighted_value: 0.0
                - id: 24
                  public_id: xLPzfY
                  workspace_id: 4
                  pipeline_id: 7
                  name: Example Stage
                  sort_order: 17
                  close_probability: 20.0
                  opportunity_ids:
                  - 35
                  - 36
                  total_value: 0
                  weighted_value: 0.0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Sales::Pipeline
      summary: Update Pipeline
      description: Update Pipeline
      operationId: updateSalesPipelines
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Pipeline
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_pipeline:
                  type: object
                  "$ref": "#/components/schemas/SalesPipelineParametersUpdate"
            example:
              "$ref": "#/components/schemas/SalesPipelineParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesPipelineAttributes"
              example:
                id: 10
                public_id: nkpXRi
                workspace_id: 42000
                name: Example Pipeline
                created_at: '2025-06-14T12:19:16.903Z'
                updated_at: '2025-06-14T12:19:16.903Z'
                total_value: 0
                stages:
                - id: 29
                  public_id: IJaFQs
                  workspace_id:
                  pipeline_id: 10
                  name: Example Stage
                  sort_order: 22
                  close_probability: 20.0
                  opportunity_ids:
                  - 45
                  - 46
                  total_value: 0
                  weighted_value: 0.0
                - id: 30
                  public_id: LzaCMi
                  workspace_id:
                  pipeline_id: 10
                  name: Example Stage
                  sort_order: 23
                  close_probability: 20.0
                  opportunity_ids:
                  - 47
                  - 48
                  total_value: 0
                  weighted_value: 0.0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/sales/pipelines/{pipeline_id}/stages":
    get:
      tags:
      - Sales::Pipelines::Stage
      summary: List Stages
      description: List Stages
      operationId: listSalesPipelinesStages
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of stage IDs to filter by (within
                the scope of the pipeline).
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SalesPipelinesStageAttributes"
              example:
              - id: 39
                public_id: VchuUE
                workspace_id:
                pipeline_id: 14
                name: Example Stage
                sort_order: 32
                close_probability: 20.0
                opportunity_ids:
                - 65
                - 66
                created_at: '2025-06-14T12:19:21.065Z'
                updated_at: '2025-06-14T12:19:21.065Z'
                total_value: 0
                weighted_value: 0.0
              - id: 42
                public_id: SdrvDc
                workspace_id:
                pipeline_id: 15
                name: Example Stage
                sort_order: 35
                close_probability: 20.0
                opportunity_ids:
                - 71
                - 72
                created_at: '2025-06-14T12:19:22.251Z'
                updated_at: '2025-06-14T12:19:22.251Z'
                total_value: 0
                weighted_value: 0.0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Sales::Pipelines::Stage
      summary: Create Stage
      description: Create Stage
      operationId: createSalesPipelinesStages
      parameters:
      - name: pipeline_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Stage
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_pipelines_stage:
                  type: object
                  "$ref": "#/components/schemas/SalesPipelinesStageParameters"
            example:
              "$ref": "#/components/schemas/SalesPipelinesStageParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesPipelinesStageAttributes"
              example:
                id: 48
                public_id: AXThqO
                workspace_id:
                pipeline_id: 17
                name: Example Stage
                sort_order: 41
                close_probability: 20.0
                opportunity_ids:
                - 83
                - 84
                created_at: '2025-06-14T12:19:24.661Z'
                updated_at: '2025-06-14T12:19:24.661Z'
                total_value: 0
                weighted_value: 0.0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/sales/pipelines/stages/{id}":
    get:
      tags:
      - Sales::Pipelines::Stage
      summary: Fetch Stage
      description: Fetch Stage
      operationId: getSalesPipelinesStages
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesPipelinesStageAttributes"
              example:
                id: 45
                public_id: sTOlFe
                workspace_id:
                pipeline_id: 16
                name: Example Stage
                sort_order: 38
                close_probability: 20.0
                opportunity_ids:
                - 77
                - 78
                created_at: '2025-06-14T12:19:23.472Z'
                updated_at: '2025-06-14T12:19:23.473Z'
                total_value: 0
                weighted_value: 0.0
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Sales::Pipelines::Stage
      summary: Update Stage
      description: Update Stage
      operationId: updateSalesPipelinesStages
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Stage
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_pipelines_stage:
                  type: object
                  "$ref": "#/components/schemas/SalesPipelinesStageParametersUpdate"
            example:
              "$ref": "#/components/schemas/SalesPipelinesStageParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesPipelinesStageAttributes"
              example:
                id: 54
                public_id: CJjqGe
                workspace_id:
                pipeline_id: 19
                name: Example Stage
                sort_order: 47
                close_probability: 20.0
                opportunity_ids:
                - 95
                - 96
                created_at: '2025-06-14T12:19:27.068Z'
                updated_at: '2025-06-14T12:19:27.068Z'
                total_value: 0
                weighted_value: 0.0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Sales::Pipelines::Stage
      summary: Remove Stage
      description: Remove Stage
      operationId: removeSalesPipelinesStages
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/workspaces/{workspace_id}/sales/opportunities":
    get:
      tags:
      - Sales::Opportunity
      summary: List Opportunities
      description: List Opportunities
      operationId: listSalesOpportunities
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of opportunity IDs to filter by.
              example: 142
            pipeline_id:
              type: string
              description: A comma-separated list of pipeline IDs to filter by.
              example: 142
            pipelines_stage_id:
              type: string
              description: A comma-separated list of pipelines stage IDs to filter by.
              example: 142
            primary_contact_id:
              type: string
              description: A comma-separated list of primary contact IDs to filter by.
              example: 142
            assignee_id:
              type: string
              description: A comma-separated list of assignee memberships IDs to filter
                by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SalesOpportunityAttributes"
              example:
              - id: 121
                public_id: lqohBN
                name: Example Opportunity
                workspace_id: 42000
                pipeline_id:
                pipelines_stage_id: 66
                primary_contact_id: 226
                value: '100.0'
                closed_at: '2025-06-14T12:19:32.253Z'
                created_at: '2025-06-14T12:19:32.253Z'
                updated_at: '2025-06-14T12:19:32.253Z'
                pipeline:
                  id: 23
                  public_id: pqWjLG
                  name: Example Pipeline
                pipelines_stage:
                  id: 66
                  public_id: NjZflW
                  name: Example Stage
                primary_contact:
                  id: 226
                  public_id: ujRWSd
                  workspace_id: 42000
                  anonymous:
                  email_address: test-d194d44154d00f94c179@example.com
                  first_name: Vito
                  last_name: Weissnat
                  phone_number: 1-192-014-5723
                  time_zone: Pacific Time (US & Canada)
                  uuid: 57ab2af0-725c-4597-93a4-1dde6068f399
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:31.017Z'
                  updated_at: '2025-05-21T12:19:31.017Z'
                  tags:
                  - id: 246
                    public_id: XWykLh
                    name: Example Tag
                    color: "#7af53e"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                assignee_id:
                notes:
                - id: 242
                  public_id: QPIpsq
                  content: Example note
                  created_by_id: 262
                  created_at: '2025-06-14T12:19:32.339Z'
                  updated_at: '2025-06-14T12:19:32.339Z'
                - id: 243
                  public_id: QXhMmu
                  content: Example note
                  created_by_id: 263
                  created_at: '2025-06-14T12:19:32.426Z'
                  updated_at: '2025-06-14T12:19:32.426Z'
              - id: 128
                public_id: YBxuwr
                name: Example Opportunity
                workspace_id: 42000
                pipeline_id:
                pipelines_stage_id: 69
                primary_contact_id: 233
                value: '100.0'
                closed_at: '2025-06-14T12:19:33.648Z'
                created_at: '2025-06-14T12:19:33.648Z'
                updated_at: '2025-06-14T12:19:33.648Z'
                pipeline:
                  id: 24
                  public_id: nNCutl
                  name: Example Pipeline
                pipelines_stage:
                  id: 69
                  public_id: nKMPuQ
                  name: Example Stage
                primary_contact:
                  id: 233
                  public_id: PbyMFH
                  workspace_id: 42000
                  anonymous:
                  email_address: test-f1c53aa511db28bf696b@example.com
                  first_name: Rogelio
                  last_name: Bayer
                  phone_number: 348.195.1528 x40066
                  time_zone: Pacific Time (US & Canada)
                  uuid: 0f5fc39c-4a76-4933-9e3a-d8531072457b
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:32.433Z'
                  updated_at: '2025-05-21T12:19:32.433Z'
                  tags:
                  - id: 253
                    public_id: utpynM
                    name: Example Tag
                    color: "#5b2ad7"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                assignee_id:
                notes:
                - id: 256
                  public_id: YUhmZd
                  content: Example note
                  created_by_id: 276
                  created_at: '2025-06-14T12:19:33.734Z'
                  updated_at: '2025-06-14T12:19:33.734Z'
                - id: 257
                  public_id: dGLgJN
                  content: Example note
                  created_by_id: 277
                  created_at: '2025-06-14T12:19:33.826Z'
                  updated_at: '2025-06-14T12:19:33.826Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Sales::Opportunity
      summary: Create Opportunity
      description: Create Opportunity
      operationId: createSalesOpportunities
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Opportunity
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_opportunity:
                  type: object
                  "$ref": "#/components/schemas/SalesOpportunityParameters"
            example:
              "$ref": "#/components/schemas/SalesOpportunityParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesOpportunityAttributes"
              example:
                id: 142
                public_id: TynMKI
                name: Example Opportunity
                workspace_id: 42000
                pipeline_id:
                pipelines_stage_id: 75
                primary_contact_id: 247
                value: '100.0'
                closed_at: '2025-06-14T12:19:36.461Z'
                created_at: '2025-06-14T12:19:36.461Z'
                updated_at: '2025-06-14T12:19:36.461Z'
                pipeline:
                  id: 26
                  public_id: XmSBJq
                  name: Example Pipeline
                pipelines_stage:
                  id: 75
                  public_id: XQPxcO
                  name: Example Stage
                primary_contact:
                  id: 247
                  public_id: aWPoUu
                  workspace_id: 42000
                  anonymous:
                  email_address: test-1e5243220646efa14452@example.com
                  first_name: Willie
                  last_name: Legros
                  phone_number: 924.426.0599 x2622
                  time_zone: Pacific Time (US & Canada)
                  uuid: 8f841987-93b6-4108-8983-eaaeea3de9bc
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:35.272Z'
                  updated_at: '2025-05-21T12:19:35.272Z'
                  tags:
                  - id: 267
                    public_id: gVlxiX
                    name: Example Tag
                    color: "#093420"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                assignee_id:
                notes:
                - id: 284
                  public_id: vAjwsX
                  content: Example note
                  created_by_id: 304
                  created_at: '2025-06-14T12:19:36.547Z'
                  updated_at: '2025-06-14T12:19:36.547Z'
                - id: 285
                  public_id: UdMEIv
                  content: Example note
                  created_by_id: 305
                  created_at: '2025-06-14T12:19:36.633Z'
                  updated_at: '2025-06-14T12:19:36.633Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/sales/opportunities/{id}":
    get:
      tags:
      - Sales::Opportunity
      summary: Fetch Opportunity
      description: Fetch Opportunity
      operationId: getSalesOpportunities
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesOpportunityAttributes"
              example:
                id: 135
                public_id: eAGHgt
                name: Example Opportunity
                workspace_id: 42000
                pipeline_id:
                pipelines_stage_id: 72
                primary_contact_id: 240
                value: '100.0'
                closed_at: '2025-06-14T12:19:35.081Z'
                created_at: '2025-06-14T12:19:35.081Z'
                updated_at: '2025-06-14T12:19:35.081Z'
                pipeline:
                  id: 25
                  public_id: zslpdG
                  name: Example Pipeline
                pipelines_stage:
                  id: 72
                  public_id: XrwRpa
                  name: Example Stage
                primary_contact:
                  id: 240
                  public_id: uXikWZ
                  workspace_id: 42000
                  anonymous:
                  email_address: test-385c6aba1578eba795d9@example.com
                  first_name: Kasey
                  last_name: Dooley
                  phone_number: 714-442-9533 x7420
                  time_zone: Pacific Time (US & Canada)
                  uuid: 6ad609a5-5fab-4efe-8451-f29e0ef652c0
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:33.849Z'
                  updated_at: '2025-05-21T12:19:33.849Z'
                  tags:
                  - id: 260
                    public_id: OQZWCU
                    name: Example Tag
                    color: "#66c8a2"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                assignee_id:
                notes:
                - id: 270
                  public_id: jwragq
                  content: Example note
                  created_by_id: 290
                  created_at: '2025-06-14T12:19:35.168Z'
                  updated_at: '2025-06-14T12:19:35.168Z'
                - id: 271
                  public_id: hOaFsS
                  content: Example note
                  created_by_id: 291
                  created_at: '2025-06-14T12:19:35.255Z'
                  updated_at: '2025-06-14T12:19:35.255Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Sales::Opportunity
      summary: Update Opportunity
      description: Update Opportunity
      operationId: updateSalesOpportunities
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Opportunity
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_opportunity:
                  type: object
                  "$ref": "#/components/schemas/SalesOpportunityParametersUpdate"
            example:
              "$ref": "#/components/schemas/SalesOpportunityParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesOpportunityAttributes"
              example:
                id: 156
                public_id: IGEuin
                name: Example Opportunity
                workspace_id: 42000
                pipeline_id:
                pipelines_stage_id: 81
                primary_contact_id: 261
                value: '100.0'
                closed_at: '2025-06-14T12:19:39.259Z'
                created_at: '2025-06-14T12:19:39.259Z'
                updated_at: '2025-06-14T12:19:39.259Z'
                pipeline:
                  id: 28
                  public_id: ZsKXHa
                  name: Example Pipeline
                pipelines_stage:
                  id: 81
                  public_id: beyWCo
                  name: Example Stage
                primary_contact:
                  id: 261
                  public_id: TnFExJ
                  workspace_id: 42000
                  anonymous:
                  email_address: test-e9fa1a50d471c321f7f0@example.com
                  first_name: Marco
                  last_name: Durgan
                  phone_number: "(541) 306-1241 x3966"
                  time_zone: Pacific Time (US & Canada)
                  uuid: afa95cfb-e19d-4359-b2dc-aca34866fe76
                  unsubscribed_at:
                  last_notification_email_sent_at:
                  fb_url: https://www.facebook.com/example
                  twitter_url: https://twitter.com/example
                  instagram_url:
                  linkedin_url: https://www.linkedin.com/in/example
                  website_url: https://example.com
                  created_at: '2025-05-21T12:19:38.058Z'
                  updated_at: '2025-05-21T12:19:38.058Z'
                  tags:
                  - id: 281
                    public_id: wdVLsO
                    name: Example Tag
                    color: "#ee5e26"
                    applied_at:
                  custom_attributes:
                    CustomKey: MyText
                  visits:
                    first_visit:
                    last_visit:
                    last_visit_with_utm:
                assignee_id:
                notes:
                - id: 312
                  public_id: dCUeBn
                  content: Example note
                  created_by_id: 332
                  created_at: '2025-06-14T12:19:39.346Z'
                  updated_at: '2025-06-14T12:19:39.346Z'
                - id: 313
                  public_id: pRzwhb
                  content: Example note
                  created_by_id: 333
                  created_at: '2025-06-14T12:19:39.433Z'
                  updated_at: '2025-06-14T12:19:39.433Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Sales::Opportunity
      summary: Remove Opportunity
      description: Remove Opportunity
      operationId: removeSalesOpportunities
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'

  
  "/sales/opportunities/{opportunity_id}/notes":
    get:
      tags:
      - Sales::Opportunities::Note
      summary: List Notes
      description: List Notes
      operationId: listSalesOpportunitiesNotes
      parameters:
      - name: opportunity_id
        in: path
        required: true
        schema:
          type: integer
      - "$ref": "#/components/parameters/after"
      - "$ref": "#/components/parameters/sort_order"
      - "$ref": "#/components/parameters/sort_property"
      - name: filter
        in: query
        description: 'Filter by available properties in query params, like this: `api/v2/resources?filter[id]=value&filter[another_property]=value1,value2`.
          Check our Filtering guide for examples and all about filtering [here](https://developers.myclickfunnels.com/docs/filtering).
  
          '
        required: false
        schema:
          type: object
          properties:
            id:
              type: string
              description: A comma-separated list of note IDs to filter by (within the
                scope of the opportunity).
              example: 142
            created_by_id:
              type: string
              description: A comma-separated list of memberships IDs to filter by.
              example: 142
        style: deepObject
        explode: true
      responses:
        '200':
          description: OK
          headers:
            Pagination-Next:
              "$ref": "#/components/headers/PaginationNext"
            Link:
              "$ref": "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SalesOpportunitiesNoteAttributes"
              example:
              - id: 370
                public_id: ZCWzmM
                opportunity_id: 184
                content: Example note
                created_by_id: 390
                created_at: '2025-06-14T12:19:45.098Z'
                updated_at: '2025-06-14T12:19:45.098Z'
              - id: 385
                public_id: PyNtdv
                opportunity_id: 191
                content: Example note
                created_by_id: 405
                created_at: '2025-06-14T12:19:46.575Z'
                updated_at: '2025-06-14T12:19:46.575Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Not found - This usually happens when you try to access
                      a record that does not exist in your account. It can also happen
                      when the provided parent record is missing, e.g. you have put
                      in a non-existent Workspaces parent ID.
              example:
                error: 'Not found: Record missing'
    post:
      tags:
      - Sales::Opportunities::Note
      summary: Create Note
      description: Create Note
      operationId: createSalesOpportunitiesNotes
      parameters:
      - name: opportunity_id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Information about a new Note
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_opportunities_note:
                  type: object
                  "$ref": "#/components/schemas/SalesOpportunitiesNoteParameters"
            example:
              "$ref": "#/components/schemas/SalesOpportunitiesNoteParameters/example"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesOpportunitiesNoteAttributes"
              example:
                id: 415
                public_id: mSHaQh
                opportunity_id: 205
                content: Example note
                created_by_id: 435
                created_at: '2025-06-14T12:19:49.550Z'
                updated_at: '2025-06-14T12:19:49.550Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
  "/sales/opportunities/notes/{id}":
    get:
      tags:
      - Sales::Opportunities::Note
      summary: Fetch Note
      description: Fetch Note
      operationId: getSalesOpportunitiesNotes
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesOpportunitiesNoteAttributes"
              example:
                id: 400
                public_id: oIVkOj
                opportunity_id: 198
                content: Example note
                created_by_id: 420
                created_at: '2025-06-14T12:19:48.054Z'
                updated_at: '2025-06-14T12:19:48.054Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    put:
      tags:
      - Sales::Opportunities::Note
      summary: Update Note
      description: Update Note
      operationId: updateSalesOpportunitiesNotes
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        description: Information about updated fields in Note
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sales_opportunities_note:
                  type: object
                  "$ref": "#/components/schemas/SalesOpportunitiesNoteParametersUpdate"
            example:
              "$ref": "#/components/schemas/SalesOpportunitiesNoteParametersUpdate/example"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SalesOpportunitiesNoteAttributes"
              example:
                id: 445
                public_id: yfhbOD
                opportunity_id: 219
                content: Example note
                created_by_id: 465
                created_at: '2025-06-14T12:19:52.501Z'
                updated_at: '2025-06-14T12:19:52.501Z'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'
    delete:
      tags:
      - Sales::Opportunities::Note
      summary: Remove Note
      description: Remove Note
      operationId: removeSalesOpportunitiesNotes
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: API key missing or invalid
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: 'Not found: Record missing'


  /shipping/profiles/{profile_id}/location_groups:
    get:
      tags:
        - Shipping::LocationGroup
      summary: "List Location Groups"
      description: List location groups for a profile
      operationId: listShippingLocationGroups
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingLocationGroupAttributes"
              example:
                - id: 4
                  public_id: OtXkRg
                  profile_id: 5
                  name: Example Location Group
                  fulfillments_location_ids: []
                  created_at: '2025-06-21T12:19:56.951Z'
                  updated_at: '2025-06-21T12:19:56.951Z'
                - id: 5
                  public_id: aVikGv
                  profile_id: 6
                  name: Example Location Group
                  fulfillments_location_ids: []
                  created_at: '2025-06-21T12:19:56.953Z'
                  updated_at: '2025-06-21T12:19:56.953Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
  /shipping/location_groups/{id}:
    get:
      tags:
        - Shipping::LocationGroup
      summary: "Fetch Location Group"
      description: Retrieve a location group for a profile
      operationId: getShippingLocationGroups
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingLocationGroupAttributes"
              example:
                id: 6
                public_id: wAcStZ
                profile_id: 7
                name: Example Location Group
                fulfillments_location_ids: []
                created_at: '2025-06-21T12:19:56.959Z'
                updated_at: '2025-06-21T12:19:56.959Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /workspaces/{workspace_id}/shipping/packages:
    get:
      tags:
        - Shipping::Package
      summary: "List Packages"
      description: List packages for a workspace
      operationId: listShippingPackages
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingPackageAttributes"
              example:
                - id: 2
                  public_id: DaRmZA
                  package_type: box
                  height: '4.0'
                  width: '2.0'
                  length: '2.0'
                  distance_unit: in
                  empty_weight:
                  weight: '0.0'
                  weight_unit: lb
                  default_package: false
                  name: Example Package
                  token:
                  carrier:
                  created_at: '2025-06-21T12:19:56.984Z'
                  updated_at: '2025-06-21T12:19:56.984Z'
                - id: 3
                  public_id: fvSkKm
                  package_type: box
                  height: '4.0'
                  width: '2.0'
                  length: '2.0'
                  distance_unit: in
                  empty_weight:
                  weight: '0.0'
                  weight_unit: lb
                  default_package: false
                  name: Example Package
                  token:
                  carrier:
                  created_at: '2025-06-21T12:19:56.987Z'
                  updated_at: '2025-06-21T12:19:56.987Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Shipping::Package
      summary: "Create Package"
      description: Add a new package to a workspace
      operationId: createShippingPackages
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Package"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_package:
                  type: object
                  $ref: "#/components/schemas/ShippingPackageParameters"
            example:
              $ref: "#/components/schemas/ShippingPackageParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingPackageAttributes"
              example:
                id: 5
                public_id: bCoYue
                package_type: box
                height: '4.0'
                width: '2.0'
                length: '2.0'
                distance_unit: in
                empty_weight:
                weight: '0.0'
                weight_unit: lb
                default_package: false
                name: Example Package
                token:
                carrier:
                created_at: '2025-06-21T12:19:56.995Z'
                updated_at: '2025-06-21T12:19:56.995Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /shipping/packages/{id}:
    get:
      tags:
        - Shipping::Package
      summary: "Fetch Package"
      description: Retrieve a package for a workspace
      operationId: getShippingPackages
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingPackageAttributes"
              example:
                id: 4
                public_id: cdAOmU
                package_type: box
                height: '4.0'
                width: '2.0'
                length: '2.0'
                distance_unit: in
                empty_weight:
                weight: '0.0'
                weight_unit: lb
                default_package: false
                name: Example Package
                token:
                carrier:
                created_at: '2025-06-21T12:19:56.991Z'
                updated_at: '2025-06-21T12:19:56.991Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Shipping::Package
      summary: "Update Package"
      description: Update a package for a workspace
      operationId: updateShippingPackages
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Package"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_package:
                  type: object
                  $ref: "#/components/schemas/ShippingPackageParametersUpdate"
            example:
              $ref: "#/components/schemas/ShippingPackageParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingPackageAttributes"
              example:
                id: 7
                public_id: HUnxFL
                package_type: box
                height: '4.0'
                width: '2.0'
                length: '2.0'
                distance_unit: in
                empty_weight:
                weight: '0.0'
                weight_unit: lb
                default_package: false
                name: Example Package
                token:
                carrier:
                created_at: '2025-06-21T12:19:57.002Z'
                updated_at: '2025-06-21T12:19:57.002Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Shipping::Package
      summary: "Remove Package"
      description: Delete a package for a workspace
      operationId: removeShippingPackages
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /workspaces/{workspace_id}/shipping/profiles:
    get:
      tags:
        - Shipping::Profile
      summary: "List Profiles"
      description: List shipping profiles for a workspace
      operationId: listShippingProfiles
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingProfileAttributes"
              example:
                - id: 14
                  public_id: aCLDOH
                  name: Example Shipping Profile
                  variant_ids: []
                  created_at: '2025-06-21T12:19:57.024Z'
                  updated_at: '2025-06-21T12:19:57.024Z'
                - id: 15
                  public_id: xbKTSs
                  name: Example Shipping Profile
                  variant_ids: []
                  created_at: '2025-06-21T12:19:57.026Z'
                  updated_at: '2025-06-21T12:19:57.026Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Shipping::Profile
      summary: "Create Profile"
      description: Add a new shipping profile to a workspace
      operationId: createShippingProfiles
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Profile"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_profile:
                  type: object
                  $ref: "#/components/schemas/ShippingProfileParameters"
            example:
              $ref: "#/components/schemas/ShippingProfileParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingProfileAttributes"
              example:
                id: 17
                public_id: EWAvxZ
                name: Example Shipping Profile
                variant_ids: []
                created_at: '2025-06-21T12:19:57.039Z'
                updated_at: '2025-06-21T12:19:57.039Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /shipping/profiles/{id}:
    get:
      tags:
        - Shipping::Profile
      summary: "Fetch Profile"
      description: Retrieve a shipping profile for a workspace
      operationId: getShippingProfiles
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingProfileAttributes"
              example:
                id: 16
                public_id: pGFnXk
                name: Example Shipping Profile
                variant_ids: []
                created_at: '2025-06-21T12:19:57.034Z'
                updated_at: '2025-06-21T12:19:57.034Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Shipping::Profile
      summary: "Update Profile"
      description: Update a shipping profile for a workspace
      operationId: updateShippingProfiles
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Profile"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_profile:
                  type: object
                  $ref: "#/components/schemas/ShippingProfileParametersUpdate"
            example:
              $ref: "#/components/schemas/ShippingProfileParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingProfileAttributes"
              example:
                id: 19
                public_id: VXchLx
                name: Example Shipping Profile
                variant_ids: []
                created_at: '2025-06-21T12:19:57.047Z'
                updated_at: '2025-06-21T12:19:57.047Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Shipping::Profile
      summary: "Remove Profile"
      description: Delete a shipping profile for a workspace
      operationId: removeShippingProfiles
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /shipping/zones/{zone_id}/rates:
    get:
      tags:
        - Shipping::Rate
      summary: "List Rates"
      description: List shipping rates for a zone
      operationId: listShippingRates
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingRateAttributes"
              example:
                - id: 2
                  public_id: EAhlYF
                  zone_id: 3
                  description: Example Shipping Rates Name
                  provider_name: Andy Schumm
                  price: '10.00'
                  price_currency: USD
                  rates_name_id: 3
                  live_rates_provider:
                  created_at: '2025-06-21T12:19:57.068Z'
                  updated_at: '2025-06-21T12:19:57.068Z'
                - id: 3
                  public_id: TAcmWr
                  zone_id: 4
                  description: Example Shipping Rates Name
                  provider_name: Lula Kris DO
                  price: '10.00'
                  price_currency: USD
                  rates_name_id: 4
                  live_rates_provider:
                  created_at: '2025-06-21T12:19:57.073Z'
                  updated_at: '2025-06-21T12:19:57.073Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Shipping::Rate
      summary: "Create Rate"
      description: Add a new shipping rate to a zone
      operationId: createShippingRates
      parameters:
        - name: zone_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Rate"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_rate:
                  type: object
                  $ref: "#/components/schemas/ShippingRateParameters"
            example:
              $ref: "#/components/schemas/ShippingRateParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingRateAttributes"
              example:
                id: 5
                public_id: ZAQkEf
                zone_id: 6
                description: Example Shipping Rates Name
                provider_name: Cecil Schulist
                price: '10.00'
                price_currency: USD
                rates_name_id: 6
                live_rates_provider:
                created_at: '2025-06-21T12:19:57.087Z'
                updated_at: '2025-06-21T12:19:57.087Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /shipping/rates/{id}:
    get:
      tags:
        - Shipping::Rate
      summary: "Fetch Rate"
      description: Retrieve a shipping rate for a zone
      operationId: getShippingRates
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingRateAttributes"
              example:
                id: 4
                public_id: IaoQfK
                zone_id: 5
                description: Example Shipping Rates Name
                provider_name: Tonita Olson
                price: '10.00'
                price_currency: USD
                rates_name_id: 5
                live_rates_provider:
                created_at: '2025-06-21T12:19:57.080Z'
                updated_at: '2025-06-21T12:19:57.080Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Shipping::Rate
      summary: "Update Rate"
      description: Update a shipping rate for a zone
      operationId: updateShippingRates
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Rate"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_rate:
                  type: object
                  $ref: "#/components/schemas/ShippingRateParametersUpdate"
            example:
              $ref: "#/components/schemas/ShippingRateParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingRateAttributes"
              example:
                id: 7
                public_id: tozZjr
                zone_id: 8
                description: Example Shipping Rates Name
                provider_name: Alethea Kilback JD
                price: '10.00'
                price_currency: USD
                rates_name_id: 8
                live_rates_provider:
                created_at: '2025-06-21T12:19:57.098Z'
                updated_at: '2025-06-21T12:19:57.098Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Shipping::Rate
      summary: "Remove Rate"
      description: Delete a shipping rate for a zone
      operationId: removeShippingRates
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /shipping/location_groups/{location_group_id}/zones:
    get:
      tags:
        - Shipping::Zone
      summary: "List Zones"
      description: List zones for a location group
      operationId: listShippingZones
      parameters:
        - name: location_group_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingZoneAttributes"
              example:
                - id: 12
                  public_id: bTNjCf
                  location_group_id: 22
                  name: Rubye Doyle
                  address_filter_id:
                  region_ids: []
                  country_ids: []
                  includes_rest_of_world: false
                  created_at: '2025-06-21T12:19:57.118Z'
                  updated_at:
                - id: 13
                  public_id: VlWoqa
                  location_group_id: 23
                  name: Tommye Boyle
                  address_filter_id:
                  region_ids: []
                  country_ids: []
                  includes_rest_of_world: false
                  created_at: '2025-06-21T12:19:57.121Z'
                  updated_at:
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Shipping::Zone
      summary: "Create Zone"
      description: Add a new zone to a location group
      operationId: createShippingZones
      parameters:
        - name: location_group_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Zone"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_zone:
                  type: object
                  $ref: "#/components/schemas/ShippingZoneParameters"
            example:
              $ref: "#/components/schemas/ShippingZoneParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingZoneAttributes"
              example:
                id: 15
                public_id: Cseapl
                location_group_id: 25
                name: Bettyann Stracke
                address_filter_id:
                region_ids: []
                country_ids: []
                includes_rest_of_world: false
                created_at: '2025-06-21T12:19:57.138Z'
                updated_at:
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /shipping/zones/{id}:
    get:
      tags:
        - Shipping::Zone
      summary: "Fetch Zone"
      description: Retrieve a zone for a location group
      operationId: getShippingZones
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingZoneAttributes"
              example:
                id: 14
                public_id: SGeXCd
                location_group_id: 24
                name: Mathilda Considine II
                address_filter_id:
                region_ids: []
                country_ids: []
                includes_rest_of_world: false
                created_at: '2025-06-21T12:19:57.131Z'
                updated_at:
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Shipping::Zone
      summary: "Update Zone"
      description: Update a zone for a location group
      operationId: updateShippingZones
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Zone"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_zone:
                  type: object
                  $ref: "#/components/schemas/ShippingZoneParametersUpdate"
            example:
              $ref: "#/components/schemas/ShippingZoneParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingZoneAttributes"
              example:
                id: 17
                public_id: hBIFoY
                location_group_id: 27
                name: Floyd Gutmann
                address_filter_id:
                region_ids: []
                country_ids: []
                includes_rest_of_world: false
                created_at: '2025-06-21T12:19:57.151Z'
                updated_at:
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Shipping::Zone
      summary: "Remove Zone"
      description: Delete a zone for a location group
      operationId: removeShippingZones
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /workspaces/{workspace_id}/shipping/rates/names:
    get:
      tags:
        - Shipping::Rates::Name
      summary: "List Names"
      description: List rate names for a shipping profile
      operationId: listShippingRatesNames
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShippingRatesNameAttributes"
              example:
                - id: 12
                  public_id: wtdZex
                  workspace_id: 42000
                  name: Example Shipping Rates Name
                  created_at: '2025-06-21T12:19:57.180Z'
                  updated_at: '2025-06-21T12:19:57.180Z'
                - id: 13
                  public_id: QPVNxn
                  workspace_id: 42000
                  name: Example Shipping Rates Name
                  created_at: '2025-06-21T12:19:57.182Z'
                  updated_at: '2025-06-21T12:19:57.182Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Shipping::Rates::Name
      summary: "Create Name"
      description: Add a new rate name to a shipping profile
      operationId: createShippingRatesNames
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Name"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_rates_name:
                  type: object
                  $ref: "#/components/schemas/ShippingRatesNameParameters"
            example:
              $ref: "#/components/schemas/ShippingRatesNameParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingRatesNameAttributes"
              example:
                id: 15
                public_id: woDxrN
                workspace_id: 42000
                name: Example Shipping Rates Name
                created_at: '2025-06-21T12:19:57.190Z'
                updated_at: '2025-06-21T12:19:57.190Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /shipping/rates/names/{id}:
    get:
      tags:
        - Shipping::Rates::Name
      summary: "Fetch Name"
      description: Retrieve a rate name for a shipping profile
      operationId: getShippingRatesNames
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingRatesNameAttributes"
              example:
                id: 14
                public_id: OYbCkI
                workspace_id: 42000
                name: Example Shipping Rates Name
                created_at: '2025-06-21T12:19:57.186Z'
                updated_at: '2025-06-21T12:19:57.186Z'
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Shipping::Rates::Name
      summary: "Update Name"
      description: Update a rate name for a shipping profile
      operationId: updateShippingRatesNames
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Name"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_rates_name:
                  type: object
                  $ref: "#/components/schemas/ShippingRatesNameParametersUpdate"
            example:
              $ref: "#/components/schemas/ShippingRatesNameParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingRatesNameAttributes"
              example:
                id: 17
                public_id: dPmNMx
                workspace_id: 42000
                name: Example Shipping Rates Name
                created_at: '2025-06-21T12:19:57.197Z'
                updated_at: '2025-06-21T12:19:57.197Z'
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Shipping::Rates::Name
      summary: "Remove Name"
      description: Delete a rate name for a shipping profile
      operationId: removeShippingRatesNames
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


  /workspaces/{workspace_id}/stores:
    get:
      tags:
        - Store
      summary: "List Stores"
      description: List Stores
      operationId: listStores
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StoreAttributes"
              example:
                - id: 2
                  public_id: KXMTgY
                  name: Example Store
                  current_path: "/example-store"
                  seo_title: Example Store
                  seo_description: Example Store
                  seo_indexable: true
                  social_image_id:
                  status: draft
                  created_at:
                  updated_at:
                  workspace_id: 42000
                - id: 3
                  public_id: MFNbPy
                  name: Example Store
                  current_path: "/example-store"
                  seo_title: Example Store
                  seo_description: Example Store
                  seo_indexable: true
                  social_image_id:
                  status: draft
                  created_at:
                  updated_at:
                  workspace_id: 42000
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Store
      summary: "Create Store"
      description: Create Store
      operationId: createStores
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Store"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: object
                  $ref: "#/components/schemas/StoreParameters"
            example:
              $ref: "#/components/schemas/StoreParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreAttributes"
              example:
                id: 5
                public_id: pFhJim
                name: Example Store
                current_path: "/example-store"
                seo_title: Example Store
                seo_description: Example Store
                seo_indexable: true
                social_image_id:
                status: draft
                created_at:
                updated_at:
                workspace_id: 42000
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /stores/{id}:
    get:
      tags:
        - Store
      summary: "Fetch Store"
      description: Fetch Store
      operationId: getStores
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreAttributes"
              example:
                id: 4
                public_id: bHkgdl
                name: Example Store
                current_path: "/example-store"
                seo_title: Example Store
                seo_description: Example Store
                seo_indexable: true
                social_image_id:
                status: draft
                created_at:
                updated_at:
                workspace_id: 42000
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Store
      summary: "Update Store"
      description: Update Store
      operationId: updateStores
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Store"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                store:
                  type: object
                  $ref: "#/components/schemas/StoreParametersUpdate"
            example:
              $ref: "#/components/schemas/StoreParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoreAttributes"
              example:
                id: 7
                public_id: rHgGpo
                name: Example Store
                current_path: "/example-store"
                seo_title: Example Store
                seo_description: Example Store
                seo_indexable: true
                social_image_id:
                status: draft
                created_at:
                updated_at:
                workspace_id: 42000
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Store
      summary: "Remove Store"
      description: Remove Store
      operationId: removeStores
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


  /workspaces/{workspace_id}/styles:
    get:
      tags:
        - Style
      summary: "List Styles"
      description: List Styles
      operationId: listStyles
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StyleAttributes"
              example:
                - id: 8
                  public_id: emEtgP
                  workspace_id: 42000
                  theme_id: 3
                  name: Example Style
                  created_at:
                  updated_at:
                - id: 11
                  public_id: EMjUSt
                  workspace_id: 42000
                  theme_id: 4
                  name: Example Style
                  created_at:
                  updated_at:
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"


  /workspaces/{workspace_id}/themes:
    get:
      tags:
        - Theme
      summary: "List Themes"
      description: List Themes
      operationId: listThemes
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ThemeAttributes"
              example:
                - id: 12
                  public_id: VwCfih
                  workspace_id: 42000
                  name: Original Name
                  custom_name: Custom Name
                  current_style_id: 33
                  created_at: '2025-05-21T12:19:57.414Z'
                  updated_at: '2025-05-21T12:19:57.414Z'
                  styles:
                  - id: 33
                    name: Example Style
                  - id: 34
                    name: Example Style
                - id: 13
                  public_id: PHuJoi
                  workspace_id: 42000
                  name: Original Name
                  custom_name: Custom Name
                  current_style_id: 35
                  created_at: '2025-05-21T12:19:57.425Z'
                  updated_at: '2025-05-21T12:19:57.425Z'
                  styles:
                  - id: 35
                    name: Example Style
                  - id: 36
                    name: Example Style
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
  /themes/{id}:
    get:
      tags:
        - Theme
      summary: "Fetch Theme"
      description: Fetch Theme
      operationId: getThemes
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThemeAttributes"
              example:
                id: 14
                public_id: GuMZln
                workspace_id: 42000
                name: Original Name
                custom_name: Custom Name
                current_style_id: 37
                created_at: '2025-05-21T12:19:57.441Z'
                updated_at: '2025-05-21T12:19:57.441Z'
                styles:
                - id: 37
                  name: Example Style
                - id: 38
                  name: Example Style
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Theme
      summary: "Update Theme"
      description: Update Theme
      operationId: updateThemes
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Theme"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: object
                  $ref: "#/components/schemas/ThemeParametersUpdate"
            example:
              $ref: "#/components/schemas/ThemeParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThemeAttributes"
              example:
                id: 17
                public_id: rHQMkL
                workspace_id: 42000
                name: Original Name
                custom_name: Custom Name
                current_style_id: 43
                created_at: '2025-05-21T12:19:57.484Z'
                updated_at: '2025-05-21T12:19:57.484Z'
                styles:
                - id: 43
                  name: Example Style
                - id: 44
                  name: Example Style
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


  /workspaces/{workspace_id}/webhooks/outgoing/endpoints:
    get:
      tags:
        - Webhooks::Outgoing::Endpoint
      summary: "List Endpoints"
      description: List webhook endpoints for a workspace
      operationId: listWebhooksOutgoingEndpoints
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhooksOutgoingEndpointAttributes"
              example:
                - id: 2
                  public_id: LrMbfh
                  workspace_id: 42000
                  url: https://example.com/some-endpoint-url
                  name: Example Endpoint
                  event_type_ids:
                  - contact.identified
                  - one-time-order.completed
                  api_version: 2
                  created_at: '2025-05-21T12:19:57.571Z'
                  updated_at: '2025-05-21T12:19:57.571Z'
                  page_ids: []
                  funnel_ids: []
                - id: 3
                  public_id: RCFZHL
                  workspace_id: 42000
                  url: https://example.com/some-endpoint-url
                  name: Example Endpoint
                  event_type_ids:
                  - contact.identified
                  - one-time-order.completed
                  api_version: 2
                  created_at: '2025-05-21T12:19:57.574Z'
                  updated_at: '2025-05-21T12:19:57.574Z'
                  page_ids: []
                  funnel_ids: []
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
    post:
      tags:
        - Webhooks::Outgoing::Endpoint
      summary: "Create Endpoint"
      description: Add a new webhook endpoint to a workspace
      operationId: createWebhooksOutgoingEndpoints
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: "Information about a new Endpoint"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                webhooks_outgoing_endpoint:
                  type: object
                  $ref: "#/components/schemas/WebhooksOutgoingEndpointParameters"
            example:
              $ref: "#/components/schemas/WebhooksOutgoingEndpointParameters/example"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhooksOutgoingEndpointAttributes"
              example:
                id: 5
                public_id: jBGrRa
                workspace_id: 42000
                url: https://example.com/some-endpoint-url
                name: Example Endpoint
                event_type_ids:
                - contact.identified
                - one-time-order.completed
                api_version: 2
                created_at: '2025-05-21T12:19:57.584Z'
                updated_at: '2025-05-21T12:19:57.584Z'
                page_ids: []
                funnel_ids: []
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
  /webhooks/outgoing/endpoints/{id}:
    get:
      tags:
        - Webhooks::Outgoing::Endpoint
      summary: "Fetch Endpoint"
      description: Retrieve a webhook endpoint for a workspace
      operationId: getWebhooksOutgoingEndpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhooksOutgoingEndpointAttributes"
              example:
                id: 4
                public_id: Gnrwdt
                workspace_id: 42000
                url: https://example.com/some-endpoint-url
                name: Example Endpoint
                event_type_ids:
                - contact.identified
                - one-time-order.completed
                api_version: 2
                created_at: '2025-05-21T12:19:57.580Z'
                updated_at: '2025-05-21T12:19:57.580Z'
                page_ids: []
                funnel_ids: []
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    put:
      tags:
        - Webhooks::Outgoing::Endpoint
      summary: "Update Endpoint"
      description: Update a webhook endpoint for a workspace
      operationId: updateWebhooksOutgoingEndpoints
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: "Information about updated fields in Endpoint"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                webhooks_outgoing_endpoint:
                  type: object
                  $ref: "#/components/schemas/WebhooksOutgoingEndpointParametersUpdate"
            example:
              $ref: "#/components/schemas/WebhooksOutgoingEndpointParametersUpdate/example"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhooksOutgoingEndpointAttributes"
              example:
                id: 7
                public_id: LaXbEn
                workspace_id: 42000
                url: https://example.com/some-endpoint-url
                name: Example Endpoint
                event_type_ids:
                - contact.identified
                - one-time-order.completed
                api_version: 2
                created_at: '2025-05-21T12:19:57.591Z'
                updated_at: '2025-05-21T12:19:57.591Z'
                page_ids: []
                funnel_ids: []
  
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"
    delete:
      tags:
        - Webhooks::Outgoing::Endpoint
      summary: "Remove Endpoint"
      description: Delete a webhook endpoint for a workspace
      operationId: removeWebhooksOutgoingEndpoints
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "204":
          description: "No Content"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"

  /workspaces/{workspace_id}/webhooks/outgoing/events:
    get:
      tags:
        - Webhooks::Outgoing::Event
      summary: "List Events"
      description: List webhook events for a workspace
      operationId: listWebhooksOutgoingEvents
      parameters:
        - name: workspace_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/after"
        - $ref: "#/components/parameters/sort_order"
        - $ref: "#/components/parameters/sort_property"
      responses:
        "200":
          description: "OK"
          headers:
            Pagination-Next:
              $ref: "#/components/headers/PaginationNext"
            Link:
              $ref: "#/components/headers/Link"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhooksOutgoingEventAttributes"
              example:
                - id: 2
                  public_id: GnwqHB
                  workspace_id: 42000
                  uuid: 484d626ff5c0c1ae0f8dd5f2b117354d
                  event_type_id: contact.identified
                  subject_id: 352
                  subject_type: Contact
                  data:
                    id: 246579500
                    tags: []
                    uuid: 3783f37654f74bd2c088c2ffef1ce685
                    fb_url:
                    anonymous: 0
                    last_name:
                    public_id: YYEXRWP
                    time_zone:
                    created_at: '2024-04-24T09:23:56.649Z'
                    first_name: Bobby
                    updated_at: '2024-04-24T09:23:56.871Z'
                    twitter_url:
                    website_url:
                    linkedin_url:
                    phone_number:
                    workspace_id: 152039
                    email_address: bobby@fuzzy.com
                    instagram_url:
                    unsubscribed_at:
                    custom_attributes:
                      preference: always yes
                    last_notification_email_sent_at:
                  api_version: 2
                  created_at: '2025-05-21T12:19:57.638Z'
                  page:
                    id: 70
                    public_id: dYzuct
                    name: Great Page
                  funnel:
                    id: 12
                    public_id: VmQFxj
                    name: Example Funnel
                - id: 3
                  public_id: AIBnbs
                  workspace_id: 42000
                  uuid: 2d1bb6e9d93ec7309a6b9f867a4d8a66
                  event_type_id: contact.identified
                  subject_id: 353
                  subject_type: Contact
                  data:
                    id: 246579500
                    tags: []
                    uuid: 3783f37654f74bd2c088c2ffef1ce685
                    fb_url:
                    anonymous: 0
                    last_name:
                    public_id: YYEXRWP
                    time_zone:
                    created_at: '2024-04-24T09:23:56.649Z'
                    first_name: Bobby
                    updated_at: '2024-04-24T09:23:56.871Z'
                    twitter_url:
                    website_url:
                    linkedin_url:
                    phone_number:
                    workspace_id: 152039
                    email_address: bobby@fuzzy.com
                    instagram_url:
                    unsubscribed_at:
                    custom_attributes:
                      preference: always yes
                    last_notification_email_sent_at:
                  api_version: 2
                  created_at: '2025-05-21T12:19:57.679Z'
                  page:
                    id: 71
                    public_id: tYFOXi
                    name: Great Page
                  funnel:
                    id: 13
                    public_id: EHamfn
                    name: Example Funnel
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: "Not found - This usually happens when you try to access a record that does not exist in your account. It can also happen when the provided parent record is missing, e.g. you have put in a non-existent Workspaces parent ID."
              example:
                error: "Not found: Record missing"
  /webhooks/outgoing/events/{id}:
    get:
      tags:
        - Webhooks::Outgoing::Event
      summary: "Fetch Event"
      description: Retrieve an webhook event for a workspace
      operationId: getWebhooksOutgoingEvents
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhooksOutgoingEventAttributes"
              example:
                id: 4
                public_id: sgwSHV
                workspace_id: 42000
                uuid: c2dd58552767b6502d7ec4c3a8ab371c
                event_type_id: contact.identified
                subject_id: 354
                subject_type: Contact
                data:
                  id: 246579500
                  tags: []
                  uuid: 3783f37654f74bd2c088c2ffef1ce685
                  fb_url:
                  anonymous: 0
                  last_name:
                  public_id: YYEXRWP
                  time_zone:
                  created_at: '2024-04-24T09:23:56.649Z'
                  first_name: Bobby
                  updated_at: '2024-04-24T09:23:56.871Z'
                  twitter_url:
                  website_url:
                  linkedin_url:
                  phone_number:
                  workspace_id: 152039
                  email_address: bobby@fuzzy.com
                  instagram_url:
                  unsubscribed_at:
                  custom_attributes:
                    preference: always yes
                  last_notification_email_sent_at:
                api_version: 2
                created_at: '2025-05-21T12:19:57.722Z'
                page:
                  id: 72
                  public_id: ODoFdA
                  name: Great Page
                funnel:
                  id: 14
                  public_id: KwoOUY
                  name: Example Funnel
  
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "API key missing or invalid"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not found: Record missing"


